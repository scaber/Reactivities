{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\app\\\\layout\\\\PrivateRoute.tsx\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { RootStoreContext } from '../stores/rootStore';\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    isLoggedIn\n  } = rootStore.userStore;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isLoggedIn ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 41\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 66\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 8\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/app/layout/PrivateRoute.tsx"],"names":["React","useContext","Route","Redirect","RootStoreContext","PrivateRoute","component","Component","rest","rootStore","isLoggedIn","userStore","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAA0CC,KAA1C,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAOA,OAAO,MAAMC,YAA8B,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAC/E,QAAMC,SAAS,GAAER,UAAU,CAACG,gBAAD,CAA3B;AACA,QAAM;AAACM,IAAAA;AAAD,MAAcD,SAAS,CAACE,SAA9B;AACA,sBACG,oBAAC,KAAD,oBACIH,IADJ;AAEA,IAAA,MAAM,EAAII,KAAD,IAAWF,UAAU,gBAAG,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH,gBAA4B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAG,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH;AAMH,CATM","sourcesContent":["import React, { useContext } from 'react'\r\nimport { RouteProps, RouteComponentProps, Route, Redirect } from 'react-router-dom'\r\nimport { RootStoreContext } from '../stores/rootStore'\r\n\r\ninterface IProps extends RouteProps\r\n{\r\n    component:React.ComponentType<RouteComponentProps<any>>\r\n}\r\n\r\nexport const PrivateRoute: React.FC<IProps> = ({component: Component, ...rest}) => {\r\n    const rootStore =useContext(RootStoreContext);\r\n    const {isLoggedIn} =rootStore.userStore;\r\n    return (\r\n       <Route \r\n       {...rest}\r\n       render ={(props) => isLoggedIn ? <Component {...props}/> :<Redirect to ={'/'}/>}\r\n       />\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}