{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('../../../_lib/getUTCWeekYear/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../../../_lib/setUTCDay/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('../../../_lib/setUTCWeek/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = require('../../../_lib/startOfUTCWeek/index.js');\n\nvar _index8 = _interopRequireDefault(_index7);\n\nvar _index9 = require('../../../_lib/setUTCISODay/index.js');\n\nvar _index10 = _interopRequireDefault(_index9);\n\nvar _index11 = require('../../../_lib/setUTCISOWeek/index.js');\n\nvar _index12 = _interopRequireDefault(_index11);\n\nvar _index13 = require('../../../_lib/startOfUTCISOWeek/index.js');\n\nvar _index14 = _interopRequireDefault(_index13);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function set(date, value, options) {\n      // Sets year 10 BC if BC, or 10 AC if AC\n      date.setUTCFullYear(value === 1 ? 10 : -9, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, value, options) {\n      var currentYear = (0, _index2.default)(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = currentYear > 0 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, value, options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return (0, _index8.default)(date, options);\n      }\n\n      var year = currentYear > 0 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return (0, _index8.default)(date, options);\n    }\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function parse(string, token, match, options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(date, value, options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return (0, _index14.default)(firstWeekOfYear);\n    }\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function parse(string, token, match, options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(date, value, options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, value, options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, value, options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, value, options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(date, value, options) {\n      console.log({\n        value: value\n      });\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, value, options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, value, options) {\n      return (0, _index8.default)((0, _index6.default)(date, value, options), options);\n    }\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, value, options) {\n      return (0, _index14.default)((0, _index12.default)(date, value, options), options);\n    }\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function set(date, value, options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function set(date, value, options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, value, options) {\n      date = (0, _index4.default)(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, value, options) {\n      date = (0, _index4.default)(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, value, options) {\n      date = (0, _index4.default)(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function set(date, value, options) {\n      date = (0, _index10.default)(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, value, options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, value, options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, value, options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function set(date, value, options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    }\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function set(date, value, options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    }\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, value, options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    }\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function set(date, value, options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    }\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, value, options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    }\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, value, options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    }\n  },\n  // Fraction of second\n  S: {\n    priority: 40,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function set(date, value, options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    }\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 20,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, value, options) {\n      return new Date(date.getTime() - value);\n    }\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 20,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, value, options) {\n      return new Date(date.getTime() - value);\n    }\n  },\n  // Seconds timestamp\n  t: {\n    priority: 10,\n    parse: function parse(string, token, match, options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(date, value, options) {\n      return new Date(value * 1000);\n    }\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 10,\n    parse: function parse(string, token, match, options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(date, value, options) {\n      return new Date(value);\n    }\n  }\n};\nexports.default = parsers;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/date-fns/parse/_lib/parsers/index.js"],"names":["Object","defineProperty","exports","value","_index","require","_index2","_interopRequireDefault","_index3","_index4","_index5","_index6","_index7","_index8","_index9","_index10","_index11","_index12","_index13","_index14","obj","__esModule","default","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","MILLISECONDS_IN_SECOND","numericPatterns","month","date","dayOfYear","week","hour23h","hour24h","hour11h","hour12h","minute","second","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parseNumericPattern","pattern","string","valueCallback","matchResult","match","parseInt","rest","slice","length","parseTimezonePattern","sign","hours","minutes","seconds","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","result","rangeEnd","rangeEndCentury","Math","floor","isPreviousCentury","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","year","parsers","G","priority","parse","token","options","era","width","set","setUTCFullYear","setUTCHours","y","isTwoDigitYear","ordinalNumber","unit","validate","normalizedTwoDigitYear","Y","getUTCFullYear","firstWeekContainsDate","R","firstWeekOfYear","Date","u","Q","quarter","context","setUTCMonth","q","M","L","console","log","w","I","d","isLeapYear","getUTCMonth","setUTCDate","D","E","day","e","wholeWeekDays","weekStartsOn","c","i","a","dayPeriod","b","B","h","isPM","getUTCHours","H","K","k","m","setUTCMinutes","s","setUTCSeconds","S","pow","setUTCMilliseconds","X","getTime","x","t","T","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('../../../_lib/getUTCWeekYear/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../../../_lib/setUTCDay/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('../../../_lib/setUTCWeek/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = require('../../../_lib/startOfUTCWeek/index.js');\n\nvar _index8 = _interopRequireDefault(_index7);\n\nvar _index9 = require('../../../_lib/setUTCISODay/index.js');\n\nvar _index10 = _interopRequireDefault(_index9);\n\nvar _index11 = require('../../../_lib/setUTCISOWeek/index.js');\n\nvar _index12 = _interopRequireDefault(_index11);\n\nvar _index13 = require('../../../_lib/startOfUTCISOWeek/index.js');\n\nvar _index14 = _interopRequireDefault(_index13);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\n\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n};\n\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n    case 'evening':\n      return 17;\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  var result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n// User for validation\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, { width: 'abbreviated' }) || match.era(string, { width: 'narrow' });\n        // A, B\n        case 'GGGGG':\n          return match.era(string, { width: 'narrow' });\n        // Anno Domini, Before Christ\n        case 'GGGG':\n        default:\n          return match.era(string, { width: 'wide' }) || match.era(string, { width: 'abbreviated' }) || match.era(string, { width: 'narrow' });\n      }\n    },\n    set: function set(date, value, options) {\n      // Sets year 10 BC if BC, or 10 AC if AC\n      date.setUTCFullYear(value === 1 ? 10 : -9, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    priority: 130,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n        case 'yo':\n          return match.ordinalNumber(string, { unit: 'year', valueCallback: valueCallback });\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, value, options) {\n      var currentYear = (0, _index2.default)(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = currentYear > 0 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n        case 'Yo':\n          return match.ordinalNumber(string, { unit: 'year', valueCallback: valueCallback });\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, value, options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return (0, _index8.default)(date, options);\n      }\n\n      var year = currentYear > 0 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return (0, _index8.default)(date, options);\n    }\n  },\n\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function parse(string, token, match, options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(date, value, options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return (0, _index14.default)(firstWeekOfYear);\n    }\n  },\n\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function parse(string, token, match, options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(date, value, options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n        case 'Qo':\n          return match.ordinalNumber(string, { unit: 'quarter' });\n        // Q1, Q2, Q3, Q4\n        case 'QQQ':\n          return match.quarter(string, { width: 'abbreviated', context: 'formatting' }) || match.quarter(string, { width: 'narrow', context: 'formatting' });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case 'QQQQQ':\n          return match.quarter(string, { width: 'narrow', context: 'formatting' });\n        // 1st quarter, 2nd quarter, ...\n        case 'QQQQ':\n        default:\n          return match.quarter(string, { width: 'wide', context: 'formatting' }) || match.quarter(string, { width: 'abbreviated', context: 'formatting' }) || match.quarter(string, { width: 'narrow', context: 'formatting' });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, value, options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n        case 'qo':\n          return match.ordinalNumber(string, { unit: 'quarter' });\n        // Q1, Q2, Q3, Q4\n        case 'qqq':\n          return match.quarter(string, { width: 'abbreviated', context: 'standalone' }) || match.quarter(string, { width: 'narrow', context: 'standalone' });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case 'qqqqq':\n          return match.quarter(string, { width: 'narrow', context: 'standalone' });\n        // 1st quarter, 2nd quarter, ...\n        case 'qqqq':\n        default:\n          return match.quarter(string, { width: 'wide', context: 'standalone' }) || match.quarter(string, { width: 'abbreviated', context: 'standalone' }) || match.quarter(string, { width: 'narrow', context: 'standalone' });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, value, options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Month\n  M: {\n    priority: 110,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n        case 'Mo':\n          return match.ordinalNumber(string, { unit: 'month', valueCallback: valueCallback });\n        // Jan, Feb, ..., Dec\n        case 'MMM':\n          return match.month(string, { width: 'abbreviated', context: 'formatting' }) || match.month(string, { width: 'narrow', context: 'formatting' });\n        // J, F, ..., D\n        case 'MMMMM':\n          return match.month(string, { width: 'narrow', context: 'formatting' });\n        // January, February, ..., December\n        case 'MMMM':\n        default:\n          return match.month(string, { width: 'wide', context: 'formatting' }) || match.month(string, { width: 'abbreviated', context: 'formatting' }) || match.month(string, { width: 'narrow', context: 'formatting' });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, value, options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n        case 'Lo':\n          return match.ordinalNumber(string, { unit: 'month', valueCallback: valueCallback });\n        // Jan, Feb, ..., Dec\n        case 'LLL':\n          return match.month(string, { width: 'abbreviated', context: 'standalone' }) || match.month(string, { width: 'narrow', context: 'standalone' });\n        // J, F, ..., D\n        case 'LLLLL':\n          return match.month(string, { width: 'narrow', context: 'standalone' });\n        // January, February, ..., December\n        case 'LLLL':\n        default:\n          return match.month(string, { width: 'wide', context: 'standalone' }) || match.month(string, { width: 'abbreviated', context: 'standalone' }) || match.month(string, { width: 'narrow', context: 'standalone' });\n      }\n    },\n    validate: function validate(date, value, options) {\n      console.log({ value: value });\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, value, options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n        case 'wo':\n          return match.ordinalNumber(string, { unit: 'week' });\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, value, options) {\n      return (0, _index8.default)((0, _index6.default)(date, value, options), options);\n    }\n  },\n\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n        case 'Io':\n          return match.ordinalNumber(string, { unit: 'week' });\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, value, options) {\n      return (0, _index14.default)((0, _index12.default)(date, value, options), options);\n    }\n  },\n\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n        case 'do':\n          return match.ordinalNumber(string, { unit: 'date' });\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function set(date, value, options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n        case 'Do':\n          return match.ordinalNumber(string, { unit: 'date' });\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function set(date, value, options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, { width: 'abbreviated', context: 'formatting' }) || match.day(string, { width: 'short', context: 'formatting' }) || match.day(string, { width: 'narrow', context: 'formatting' });\n        // T\n        case 'EEEEE':\n          return match.day(string, { width: 'narrow', context: 'formatting' });\n        // Tu\n        case 'EEEEEE':\n          return match.day(string, { width: 'short', context: 'formatting' }) || match.day(string, { width: 'narrow', context: 'formatting' });\n        // Tuesday\n        case 'EEEE':\n        default:\n          return match.day(string, { width: 'wide', context: 'formatting' }) || match.day(string, { width: 'abbreviated', context: 'formatting' }) || match.day(string, { width: 'short', context: 'formatting' }) || match.day(string, { width: 'narrow', context: 'formatting' });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, value, options) {\n      date = (0, _index4.default)(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n        case 'eo':\n          return match.ordinalNumber(string, { unit: 'day', valueCallback: valueCallback });\n        // Tue\n        case 'eee':\n          return match.day(string, { width: 'abbreviated', context: 'formatting' }) || match.day(string, { width: 'short', context: 'formatting' }) || match.day(string, { width: 'narrow', context: 'formatting' });\n        // T\n        case 'eeeee':\n          return match.day(string, { width: 'narrow', context: 'formatting' });\n        // Tu\n        case 'eeeeee':\n          return match.day(string, { width: 'short', context: 'formatting' }) || match.day(string, { width: 'narrow', context: 'formatting' });\n        // Tuesday\n        case 'eeee':\n        default:\n          return match.day(string, { width: 'wide', context: 'formatting' }) || match.day(string, { width: 'abbreviated', context: 'formatting' }) || match.day(string, { width: 'short', context: 'formatting' }) || match.day(string, { width: 'narrow', context: 'formatting' });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, value, options) {\n      date = (0, _index4.default)(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n        case 'co':\n          return match.ordinalNumber(string, { unit: 'day', valueCallback: valueCallback });\n        // Tue\n        case 'ccc':\n          return match.day(string, { width: 'abbreviated', context: 'standalone' }) || match.day(string, { width: 'short', context: 'standalone' }) || match.day(string, { width: 'narrow', context: 'standalone' });\n        // T\n        case 'ccccc':\n          return match.day(string, { width: 'narrow', context: 'standalone' });\n        // Tu\n        case 'cccccc':\n          return match.day(string, { width: 'short', context: 'standalone' }) || match.day(string, { width: 'narrow', context: 'standalone' });\n        // Tuesday\n        case 'cccc':\n        default:\n          return match.day(string, { width: 'wide', context: 'standalone' }) || match.day(string, { width: 'abbreviated', context: 'standalone' }) || match.day(string, { width: 'short', context: 'standalone' }) || match.day(string, { width: 'narrow', context: 'standalone' });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, value, options) {\n      date = (0, _index4.default)(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        if (value === 0) {\n          return 7;\n        }\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n        case 'io':\n          return match.ordinalNumber(string, { unit: 'day' });\n        // Tue\n        case 'iii':\n          return match.day(string, { width: 'abbreviated', context: 'formatting', valueCallback: valueCallback }) || match.day(string, { width: 'short', context: 'formatting', valueCallback: valueCallback }) || match.day(string, { width: 'narrow', context: 'formatting', valueCallback: valueCallback });\n        // T\n        case 'iiiii':\n          return match.day(string, { width: 'narrow', context: 'formatting', valueCallback: valueCallback });\n        // Tu\n        case 'iiiiii':\n          return match.day(string, { width: 'short', context: 'formatting', valueCallback: valueCallback }) || match.day(string, { width: 'narrow', context: 'formatting', valueCallback: valueCallback });\n        // Tuesday\n        case 'iiii':\n        default:\n          return match.day(string, { width: 'wide', context: 'formatting', valueCallback: valueCallback }) || match.day(string, { width: 'abbreviated', context: 'formatting', valueCallback: valueCallback }) || match.day(string, { width: 'short', context: 'formatting', valueCallback: valueCallback }) || match.day(string, { width: 'narrow', context: 'formatting', valueCallback: valueCallback });\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function set(date, value, options) {\n      date = (0, _index10.default)(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, { width: 'abbreviated', context: 'formatting' }) || match.dayPeriod(string, { width: 'narrow', context: 'formatting' });\n        case 'aaaaa':\n          return match.dayPeriod(string, { width: 'narrow', context: 'formatting' });\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, { width: 'wide', context: 'formatting' }) || match.dayPeriod(string, { width: 'abbreviated', context: 'formatting' }) || match.dayPeriod(string, { width: 'narrow', context: 'formatting' });\n      }\n    },\n    set: function set(date, value, options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  },\n\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, { width: 'abbreviated', context: 'formatting' }) || match.dayPeriod(string, { width: 'narrow', context: 'formatting' });\n        case 'bbbbb':\n          return match.dayPeriod(string, { width: 'narrow', context: 'formatting' });\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, { width: 'wide', context: 'formatting' }) || match.dayPeriod(string, { width: 'abbreviated', context: 'formatting' }) || match.dayPeriod(string, { width: 'narrow', context: 'formatting' });\n      }\n    },\n    set: function set(date, value, options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, { width: 'abbreviated', context: 'formatting' }) || match.dayPeriod(string, { width: 'narrow', context: 'formatting' });\n        case 'BBBBB':\n          return match.dayPeriod(string, { width: 'narrow', context: 'formatting' });\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, { width: 'wide', context: 'formatting' }) || match.dayPeriod(string, { width: 'abbreviated', context: 'formatting' }) || match.dayPeriod(string, { width: 'narrow', context: 'formatting' });\n      }\n    },\n    set: function set(date, value, options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n        case 'ho':\n          return match.ordinalNumber(string, { unit: 'hour' });\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function set(date, value, options) {\n      var isPM = date.getUTCHours() >= 12;\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n      return date;\n    }\n  },\n\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n        case 'Ho':\n          return match.ordinalNumber(string, { unit: 'hour' });\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function set(date, value, options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n        case 'Ko':\n          return match.ordinalNumber(string, { unit: 'hour' });\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, value, options) {\n      var isPM = date.getUTCHours() >= 12;\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n      return date;\n    }\n  },\n\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n        case 'ko':\n          return match.ordinalNumber(string, { unit: 'hour' });\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function set(date, value, options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    }\n  },\n\n  // Minute\n  m: {\n    priority: 60,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n        case 'mo':\n          return match.ordinalNumber(string, { unit: 'minute' });\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, value, options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    }\n  },\n\n  // Second\n  s: {\n    priority: 50,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n        case 'so':\n          return match.ordinalNumber(string, { unit: 'second' });\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, value, options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    }\n  },\n\n  // Fraction of second\n  S: {\n    priority: 40,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function set(date, value, options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    }\n  },\n\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 20,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, value, options) {\n      return new Date(date.getTime() - value);\n    }\n  },\n\n  // Timezone (ISO-8601)\n  x: {\n    priority: 20,\n    parse: function parse(string, token, match, options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, value, options) {\n      return new Date(date.getTime() - value);\n    }\n  },\n\n  // Seconds timestamp\n  t: {\n    priority: 10,\n    parse: function parse(string, token, match, options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(date, value, options) {\n      return new Date(value * 1000);\n    }\n  },\n\n  // Milliseconds timestamp\n  T: {\n    priority: 10,\n    parse: function parse(string, token, match, options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(date, value, options) {\n      return new Date(value);\n    }\n  }\n};\n\nexports.default = parsers;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}