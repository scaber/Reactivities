{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = composeValidators;\n\nvar _omit = require('lodash/omit');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _createValidatorWithMultipleErrors = require('./internal/createValidatorWithMultipleErrors');\n\nvar _createValidatorWithMultipleErrors2 = _interopRequireDefault(_createValidatorWithMultipleErrors);\n\nvar _createValidatorWithSingleError = require('./internal/createValidatorWithSingleError');\n\nvar _createValidatorWithSingleError2 = _interopRequireDefault(_createValidatorWithSingleError);\n\nvar _markAsValueValidator = require('./internal/markAsValueValidator');\n\nvar _markAsValueValidator2 = _interopRequireDefault(_markAsValueValidator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction composeValidators(firstValidator) {\n  for (var _len = arguments.length, validators = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    validators[_key - 1] = arguments[_key];\n  }\n\n  return function configurableValidators(sharedConfig) {\n    var config = void 0;\n\n    if (typeof sharedConfig === 'string') {\n      config = {\n        field: sharedConfig\n      };\n    } else {\n      config = (0, _objectAssign2.default)({}, sharedConfig);\n    }\n\n    if (config.multiple === true) {\n      return (0, _markAsValueValidator2.default)((0, _createValidatorWithMultipleErrors2.default)(firstValidator, validators.slice(0), (0, _omit2.default)(config, 'multiple')));\n    }\n\n    if (typeof firstValidator === 'object') {\n      throw new Error('Please only pass in functions when composing ' + 'validators to produce a single error message.');\n    }\n\n    return (0, _markAsValueValidator2.default)((0, _createValidatorWithSingleError2.default)([firstValidator].concat(validators), config));\n  };\n}","map":null,"metadata":{},"sourceType":"script"}