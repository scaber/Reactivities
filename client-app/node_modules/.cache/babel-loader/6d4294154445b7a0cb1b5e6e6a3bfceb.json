{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _temp;\n\nimport { observable, action, runInAction, computed } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { toast } from \"react-toastify\";\nlet ProfileStore = (_class = (_temp = class ProfileStore {\n  constructor(rootStore) {\n    this.rootStore = void 0;\n\n    _initializerDefineProperty(this, \"profile\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"loadingProfile\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"uploadingPhoto\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"loading\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"loadProfile\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"uploadPhoto\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"setMainPhoto\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"deletePhoto\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"updateProfile\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"follow\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"unfollow\", _descriptor11, this);\n\n    this.rootStore = rootStore;\n  }\n\n  get isCurrentUser() {\n    if (this.rootStore.userStore.user && this.profile) {\n      return this.rootStore.userStore.user.username === this.profile.userName;\n    } else {\n      return false;\n    }\n  } // @action loadFollowings = async (predicate: string) => {\n  //   this.loading = true;\n  //   try {\n  //     const profiles = await agent.Profiles.listFollowings(\n  //       this.profile!.username,\n  //       predicate\n  //     );\n  //     runInAction(() => {\n  //         this.followings = profiles;\n  //         this.loading = false;\n  //     })\n  //   } catch (error) {\n  //     toast.error('Problem loading followings');\n  //     runInAction(() => {\n  //       this.loading = false;\n  //     });\n  //   }\n  // };\n\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"profile\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"loadingProfile\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"uploadingPhoto\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"loading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"isCurrentUser\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isCurrentUser\"), _class.prototype), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"loadProfile\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async userName => {\n      debugger;\n\n      try {\n        const profile = await agent.Profiles.get(userName);\n        runInAction(() => {\n          this.profile = profile;\n          this.loadingProfile = false;\n        });\n      } catch (error) {\n        runInAction(() => {\n          this.loadingProfile = false;\n        });\n        console.log(error);\n      }\n    };\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"uploadPhoto\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async file => {\n      this.uploadingPhoto = true;\n\n      try {\n        const photo = await agent.Profiles.uploadPhoto(file);\n        runInAction(() => {\n          if (this.profile) {\n            this.profile.photos.push(photo);\n\n            if (photo.isMain && this.rootStore.userStore.user) {\n              this.rootStore.userStore.user.image = photo.url;\n              this.profile.image = photo.url;\n            }\n          }\n\n          this.uploadingPhoto = false;\n        });\n      } catch (error) {\n        console.log(error);\n        toast.error('uploading problem photo');\n        runInAction(() => {\n          this.uploadingPhoto = false;\n        });\n      }\n    };\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"setMainPhoto\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async photo => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.setMainPhoto(photo.id);\n        runInAction(() => {\n          this.rootStore.userStore.user.image = photo.url;\n          this.profile.photos.find(a => a.isMain).isMain = false;\n          this.profile.photos.find(a => a.id === photo.id).isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error('Problem setting photo as main');\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"deletePhoto\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async photo => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.deletePhoto(photo.id);\n        runInAction(() => {\n          this.profile.photos = this.profile.photos.filter(a => a.id !== photo.id);\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error('Problem deleting photo ');\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"updateProfile\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async profile => {\n      try {\n        await agent.Profiles.updateProfile(profile);\n        runInAction(() => {\n          if (profile.display !== this.rootStore.userStore.user.display) {\n            this.rootStore.userStore.user.display = profile.display;\n          }\n\n          this.profile = { ...this.profile,\n            ...profile\n          };\n        });\n      } catch (error) {\n        toast.error('Problem updating profile');\n      }\n    };\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"follow\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async username => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.follow(username);\n        runInAction(() => {\n          this.profile.following = true;\n          this.profile.followersCount++;\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error('Problem following user');\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"unfollow\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async username => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.unfollow(username);\n        runInAction(() => {\n          this.profile.following = false;\n          this.profile.followersCount--;\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error('Problem unfollowing user');\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n})), _class);\nexport { ProfileStore as default };","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/app/stores/profileStore.ts"],"names":["observable","action","runInAction","computed","agent","toast","ProfileStore","constructor","rootStore","isCurrentUser","userStore","user","profile","username","userName","Profiles","get","loadingProfile","error","console","log","file","uploadingPhoto","photo","uploadPhoto","photos","push","isMain","image","url","loading","setMainPhoto","id","find","a","deletePhoto","filter","updateProfile","display","follow","following","followersCount","unfollow"],"mappings":";;;;;;AAEA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,WAA7B,EAA0CC,QAA1C,QAA0D,MAA1D;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;IAEqBC,Y,sBAAN,MAAMA,YAAN,CAAmB;AAE9BC,EAAAA,WAAW,CAACC,SAAD,EAAqB;AAAA,SADhCA,SACgC;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAC5B,SAAKA,SAAL,GAAeA,SAAf;AACH;;AAQD,MAAcC,aAAd,GAA8B;AAE1B,QAAI,KAAKD,SAAL,CAAeE,SAAf,CAAyBC,IAAzB,IAAiC,KAAKC,OAA1C,EAAmD;AAC/C,aAAO,KAAKJ,SAAL,CAAeE,SAAf,CAAyBC,IAAzB,CAA8BE,QAA9B,KAA2C,KAAKD,OAAL,CAAaE,QAA/D;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ,GAnB6B,CAgJ5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjK4B,C,iFAK7Bd,U;;;;;WAAqC,I;;kFACrCA,U;;;;;WAA2B,I;;kFAC3BA,U;;;;;WAA2B,K;;2EAC3BA,U;;;;;WAAoB,K;;kEAIpBG,Q,qKAQAF,M;;;;;WAAoB,MAAOa,QAAP,IAA2B;AACnD;;AACO,UAAI;AACA,cAAMF,OAAO,GAAE,MAAMR,KAAK,CAACW,QAAN,CAAeC,GAAf,CAAmBF,QAAnB,CAArB;AACAZ,QAAAA,WAAW,CAAC,MAAM;AACd,eAAKU,OAAL,GAAcA,OAAd;AAEA,eAAKK,cAAL,GAAoB,KAApB;AACH,SAJU,CAAX;AAKH,OAPD,CAOE,OAAOC,KAAP,EAAc;AACZhB,QAAAA,WAAW,CAAC,MAAM;AACd,eAAKe,cAAL,GAAoB,KAApB;AACH,SAFU,CAAX;AAGAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,K;;+EAEAjB,M;;;;;WAAoB,MAAOoB,IAAP,IAAsB;AACvC,WAAKC,cAAL,GAAoB,IAApB;;AACA,UAAI;AACA,cAAMC,KAAK,GAAE,MAAMnB,KAAK,CAACW,QAAN,CAAeS,WAAf,CAA2BH,IAA3B,CAAnB;AACAnB,QAAAA,WAAW,CAAC,MAAK;AACb,cAAI,KAAKU,OAAT,EAAkB;AACd,iBAAKA,OAAL,CAAaa,MAAb,CAAoBC,IAApB,CAAyBH,KAAzB;;AACA,gBAAIA,KAAK,CAACI,MAAN,IAAgB,KAAKnB,SAAL,CAAeE,SAAf,CAAyBC,IAA7C,EAAmD;AAC/C,mBAAKH,SAAL,CAAeE,SAAf,CAAyBC,IAAzB,CAA8BiB,KAA9B,GAAsCL,KAAK,CAACM,GAA5C;AACA,mBAAKjB,OAAL,CAAagB,KAAb,GAAmBL,KAAK,CAACM,GAAzB;AACH;AACJ;;AACD,eAAKP,cAAL,GAAoB,KAApB;AAEH,SAVU,CAAX;AAWH,OAbD,CAaE,OAAOJ,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAb,QAAAA,KAAK,CAACa,KAAN,CAAY,yBAAZ;AACAhB,QAAAA,WAAW,CAAC,MAAM;AACd,eAAKoB,cAAL,GAAoB,KAApB;AACH,SAFU,CAAX;AAGH;AACJ,K;;gFACCrB,M;;;;;WAAoB,MAAMsB,KAAN,IAAuB;AACxC,WAAKO,OAAL,GAAa,IAAb;;AACA,UAAI;AACA,cAAM1B,KAAK,CAACW,QAAN,CAAegB,YAAf,CAA4BR,KAAK,CAACS,EAAlC,CAAN;AACA9B,QAAAA,WAAW,CAAC,MAAM;AACd,eAAKM,SAAL,CAAeE,SAAf,CAAyBC,IAAzB,CAA+BiB,KAA/B,GAAqCL,KAAK,CAACM,GAA3C;AACA,eAAKjB,OAAL,CAAca,MAAd,CAAqBQ,IAArB,CAA0BC,CAAC,IAAEA,CAAC,CAACP,MAA/B,EAAwCA,MAAxC,GAA+C,KAA/C;AACA,eAAKf,OAAL,CAAca,MAAd,CAAqBQ,IAArB,CAA0BC,CAAC,IAAEA,CAAC,CAACF,EAAF,KAAST,KAAK,CAACS,EAA5C,EAAiDL,MAAjD,GAAyD,IAAzD;AACA,eAAKf,OAAL,CAAcgB,KAAd,GAAoBL,KAAK,CAACM,GAA1B;AACA,eAAKC,OAAL,GAAa,KAAb;AAEH,SAPU,CAAX;AAQH,OAVD,CAUE,OAAOZ,KAAP,EAAc;AACZb,QAAAA,KAAK,CAACa,KAAN,CAAY,+BAAZ;AACAhB,QAAAA,WAAW,CAAC,MAAM;AACd,eAAK4B,OAAL,GAAa,KAAb;AACH,SAFU,CAAX;AAGH;AACJ,K;;+EACA7B,M;;;;;WAAoB,MAAMsB,KAAN,IAAuB;AACxC,WAAKO,OAAL,GAAa,IAAb;;AACA,UAAI;AACA,cAAM1B,KAAK,CAACW,QAAN,CAAeoB,WAAf,CAA2BZ,KAAK,CAACS,EAAjC,CAAN;AACD9B,QAAAA,WAAW,CAAC,MAAM;AACd,eAAKU,OAAL,CAAca,MAAd,GAAuB,KAAKb,OAAL,CAAca,MAAd,CAAqBW,MAArB,CAA4BF,CAAC,IAAEA,CAAC,CAACF,EAAF,KAAST,KAAK,CAACS,EAA9C,CAAvB;AACA,eAAKF,OAAL,GAAa,KAAb;AACH,SAHU,CAAX;AAIF,OAND,CAME,OAAOZ,KAAP,EAAc;AACbb,QAAAA,KAAK,CAACa,KAAN,CAAY,yBAAZ;AACAhB,QAAAA,WAAW,CAAC,MAAM;AACd,eAAK4B,OAAL,GAAa,KAAb;AACH,SAFU,CAAX;AAGF;AACJ,K;;iFAEA7B,M;;;;;WAAuB,MAAOW,OAAP,IAAsC;AAC3D,UAAI;AACF,cAAMR,KAAK,CAACW,QAAN,CAAesB,aAAf,CAA6BzB,OAA7B,CAAN;AACAV,QAAAA,WAAW,CAAC,MAAM;AAChB,cACEU,OAAO,CAAC0B,OAAR,KAAoB,KAAK9B,SAAL,CAAeE,SAAf,CAAyBC,IAAzB,CAA+B2B,OADrD,EAEE;AACA,iBAAK9B,SAAL,CAAeE,SAAf,CAAyBC,IAAzB,CAA+B2B,OAA/B,GAAyC1B,OAAO,CAAC0B,OAAjD;AACD;;AACD,eAAK1B,OAAL,GAAe,EAAE,GAAG,KAAKA,OAAV;AAAoB,eAAGA;AAAvB,WAAf;AACD,SAPU,CAAX;AAQD,OAVD,CAUE,OAAOM,KAAP,EAAc;AACdb,QAAAA,KAAK,CAACa,KAAN,CAAY,0BAAZ;AACD;AACF,K;;2EACAjB,M;;;;;WAAgB,MAAOY,QAAP,IAA4B;AAC3C,WAAKiB,OAAL,GAAe,IAAf;;AACA,UAAI;AACF,cAAM1B,KAAK,CAACW,QAAN,CAAewB,MAAf,CAAsB1B,QAAtB,CAAN;AACAX,QAAAA,WAAW,CAAC,MAAM;AAChB,eAAKU,OAAL,CAAc4B,SAAd,GAA0B,IAA1B;AACA,eAAK5B,OAAL,CAAc6B,cAAd;AACA,eAAKX,OAAL,GAAe,KAAf;AACD,SAJU,CAAX;AAKD,OAPD,CAOE,OAAOZ,KAAP,EAAc;AACdb,QAAAA,KAAK,CAACa,KAAN,CAAY,wBAAZ;AACAhB,QAAAA,WAAW,CAAC,MAAM;AAChB,eAAK4B,OAAL,GAAe,KAAf;AACD,SAFU,CAAX;AAGD;AACF,K;;6EAEA7B,M;;;;;WAAkB,MAAOY,QAAP,IAA4B;AAC7C,WAAKiB,OAAL,GAAe,IAAf;;AACA,UAAI;AACF,cAAM1B,KAAK,CAACW,QAAN,CAAe2B,QAAf,CAAwB7B,QAAxB,CAAN;AACAX,QAAAA,WAAW,CAAC,MAAM;AAChB,eAAKU,OAAL,CAAc4B,SAAd,GAA0B,KAA1B;AACA,eAAK5B,OAAL,CAAc6B,cAAd;AACA,eAAKX,OAAL,GAAe,KAAf;AACD,SAJU,CAAX;AAKD,OAPD,CAOE,OAAOZ,KAAP,EAAc;AACdb,QAAAA,KAAK,CAACa,KAAN,CAAY,0BAAZ;AACAhB,QAAAA,WAAW,CAAC,MAAM;AAChB,eAAK4B,OAAL,GAAe,KAAf;AACD,SAFU,CAAX;AAGD;AACF,K;;;SA9IcxB,Y","sourcesContent":["import { RootStore } from \"./rootStore\";\r\nimport { IProfile, IPhoto } from \"../models/profile\";\r\nimport { observable, action, runInAction, computed } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class ProfileStore {\r\n    rootStore:RootStore\r\n    constructor(rootStore:RootStore){\r\n        this.rootStore=rootStore\r\n    }\r\n    @observable profile: IProfile | null =null;\r\n    @observable loadingProfile =true;\r\n    @observable uploadingPhoto =false;\r\n    @observable loading =false;\r\n\r\n\r\n\r\n    @computed get isCurrentUser() {\r\n         \r\n        if (this.rootStore.userStore.user && this.profile) {\r\n            return this.rootStore.userStore.user.username === this.profile.userName;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    @action loadProfile =async (userName:string) => {\r\n debugger\r\n        try {\r\n            const profile =await agent.Profiles.get(userName);\r\n            runInAction(() => {\r\n                this.profile =profile;\r\n                 \r\n                this.loadingProfile=false;\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => {\r\n                this.loadingProfile=false;\r\n            })\r\n            console.log(error);\r\n        } \r\n    }\r\n\r\n    @action uploadPhoto =async (file: Blob) => {\r\n        this.uploadingPhoto=true;\r\n        try {\r\n            const photo =await agent.Profiles.uploadPhoto(file);\r\n            runInAction(()=> {\r\n                if (this.profile) {\r\n                    this.profile.photos.push(photo);\r\n                    if (photo.isMain && this.rootStore.userStore.user) {\r\n                        this.rootStore.userStore.user.image = photo.url;\r\n                        this.profile.image=photo.url;\r\n                    }\r\n                }\r\n                this.uploadingPhoto=false;\r\n\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error('uploading problem photo');\r\n            runInAction(() => {\r\n                this.uploadingPhoto=false\r\n            })\r\n        }\r\n    }\r\n     @action setMainPhoto=async(photo:IPhoto) => {\r\n         this.loading=true;\r\n         try {\r\n             await agent.Profiles.setMainPhoto(photo.id);\r\n             runInAction(() => {\r\n                 this.rootStore.userStore.user!.image=photo.url;\r\n                 this.profile!.photos.find(a=>a.isMain)!.isMain=false;\r\n                 this.profile!.photos.find(a=>a.id === photo.id)!.isMain =true;\r\n                 this.profile!.image=photo.url;\r\n                 this.loading=false;\r\n\r\n             })\r\n         } catch (error) {\r\n             toast.error('Problem setting photo as main');\r\n             runInAction(() => {\r\n                 this.loading=false;\r\n             })\r\n         }\r\n     }\r\n     @action deletePhoto= async(photo:IPhoto) => {\r\n         this.loading=true;\r\n         try {\r\n             await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                this.profile!.photos = this.profile!.photos.filter(a=>a.id !== photo.id);\r\n                this.loading=false;\r\n            })\r\n         } catch (error) {\r\n            toast.error('Problem deleting photo ');\r\n            runInAction(() => {\r\n                this.loading=false;\r\n            })\r\n         }\r\n     }\r\n\r\n     @action updateProfile = async (profile: Partial<IProfile>) => {\r\n        try {\r\n          await agent.Profiles.updateProfile(profile);\r\n          runInAction(() => {\r\n            if (\r\n              profile.display !== this.rootStore.userStore.user!.display\r\n            ) {\r\n              this.rootStore.userStore.user!.display = profile.display!;\r\n            }\r\n            this.profile = { ...this.profile!, ...profile };\r\n          });\r\n        } catch (error) {\r\n          toast.error('Problem updating profile');\r\n        }\r\n      };\r\n      @action follow = async (username: string) => {\r\n        this.loading = true;\r\n        try {\r\n          await agent.Profiles.follow(username);\r\n          runInAction(() => {\r\n            this.profile!.following = true;\r\n            this.profile!.followersCount++;\r\n            this.loading = false;\r\n          });\r\n        } catch (error) {\r\n          toast.error('Problem following user');\r\n          runInAction(() => {\r\n            this.loading = false;\r\n          });\r\n        }\r\n      };\r\n    \r\n      @action unfollow = async (username: string) => {\r\n        this.loading = true;\r\n        try {\r\n          await agent.Profiles.unfollow(username);\r\n          runInAction(() => {\r\n            this.profile!.following = false;\r\n            this.profile!.followersCount--;\r\n            this.loading = false;\r\n          });\r\n        } catch (error) {\r\n          toast.error('Problem unfollowing user');\r\n          runInAction(() => {\r\n            this.loading = false;\r\n          });\r\n        }\r\n      };\r\n    \r\n      // @action loadFollowings = async (predicate: string) => {\r\n      //   this.loading = true;\r\n      //   try {\r\n      //     const profiles = await agent.Profiles.listFollowings(\r\n      //       this.profile!.username,\r\n      //       predicate\r\n      //     );\r\n      //     runInAction(() => {\r\n      //         this.followings = profiles;\r\n      //         this.loading = false;\r\n      //     })\r\n      //   } catch (error) {\r\n      //     toast.error('Problem loading followings');\r\n      //     runInAction(() => {\r\n      //       this.loading = false;\r\n      //     });\r\n      //   }\r\n      // };\r\n}"]},"metadata":{},"sourceType":"module"}