{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfilePhotos.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { Tab, Header, Card, Image, Button, Grid } from \"semantic-ui-react\";\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\nimport PhotoUploadWidget from \"../../app/common/photoUpload/PhotoUploadWidget\";\nimport { observer } from \"mobx-react-lite\";\n\nconst ProfilePhotos = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    profile,\n    isCurrentUser,\n    uploadPhoto,\n    uploadingPhoto,\n    setMainPhoto,\n    loading,\n    deletePhoto\n  } = rootStore.profileStore;\n  const [addPhotoMode, setAddPhotoMode] = useState(true);\n  const [target, setTarget] = useState(undefined);\n  const [deletetarget, setDeleteTarget] = useState(undefined);\n\n  const handleUploadImage = photo => {\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\n  };\n\n  return /*#__PURE__*/React.createElement(Tab.Pane, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    style: {\n      paddingBotttom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    floated: \"left\",\n    icon: \"image\",\n    content: \"Photos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), isCurrentUser && /*#__PURE__*/React.createElement(Button, {\n    floated: \"right\",\n    basic: true,\n    content: addPhotoMode ? \"cancel\" : \"Add Photo\",\n    onClick: () => setAddPhotoMode(!addPhotoMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, addPhotoMode ? /*#__PURE__*/React.createElement(PhotoUploadWidget, {\n    uploadPhoto: handleUploadImage,\n    loading: uploadingPhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Card.Group, {\n    itemsPerRow: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, profile && profile.photos.map(photo => /*#__PURE__*/React.createElement(Card, {\n    key: photo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: photo.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), isCurrentUser && /*#__PURE__*/React.createElement(Button.Group, {\n    fluid: true,\n    widths: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: photo.id,\n    onClick: e => {\n      setMainPhoto(photo);\n      setTarget(e.currentTarget.name);\n    },\n    disabled: photo.isMain,\n    loading: loading && target === photo.id,\n    basic: true,\n    positive: true,\n    content: \"Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    name: photo.id,\n    disabled: photo.isMain,\n    onClick: e => {\n      deletePhoto(photo);\n      setDeleteTarget(e.currentTarget.name);\n    },\n    loading: loading && deletetarget === photo.id,\n    basic: true,\n    negative: true,\n    icon: \"trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }))))))));\n};\n\nexport default observer(ProfilePhotos);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/profiles/ProfilePhotos.tsx"],"names":["React","useContext","useState","Tab","Header","Card","Image","Button","Grid","RootStoreContext","PhotoUploadWidget","observer","ProfilePhotos","rootStore","profile","isCurrentUser","uploadPhoto","uploadingPhoto","setMainPhoto","loading","deletePhoto","profileStore","addPhotoMode","setAddPhotoMode","target","setTarget","undefined","deletetarget","setDeleteTarget","handleUploadImage","photo","then","paddingBotttom","photos","map","id","url","e","currentTarget","name","isMain"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Tab, Header, Card, Image, Button, Grid } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport PhotoUploadWidget from \"../../app/common/photoUpload/PhotoUploadWidget\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ProfilePhotos = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    profile,\r\n    isCurrentUser,\r\n    uploadPhoto,\r\n    uploadingPhoto,\r\n    setMainPhoto,\r\n    loading,\r\n    deletePhoto,\r\n  } = rootStore.profileStore;\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(true);\r\n  const [target, setTarget] = useState<undefined | string>(undefined);\r\n  const [deletetarget, setDeleteTarget] = useState<undefined | string>(\r\n    undefined\r\n  );\r\n\r\n  const handleUploadImage = (photo: Blob) => {\r\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\r\n  };\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16} style={{ paddingBotttom: 0 }}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handleUploadImage}\r\n              loading={uploadingPhoto}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile &&\r\n                profile.photos.map((photo) => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url} />\r\n                    {isCurrentUser && (\r\n                      <Button.Group fluid widths={2}>\r\n                        <Button\r\n                          name={photo.id}\r\n                          onClick={(e) => {\r\n                            setMainPhoto(photo);\r\n\r\n                            setTarget(e.currentTarget.name);\r\n                          }}\r\n                          disabled={photo.isMain}\r\n                          loading={loading && target === photo.id}\r\n                          basic\r\n                          positive\r\n                          content=\"Main\"\r\n                        />\r\n                        <Button\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          onClick={(e) => {\r\n                            deletePhoto(photo);\r\n                            setDeleteTarget(e.currentTarget.name)\r\n                          }}\r\n                          loading={loading && deletetarget === photo.id}\r\n                          basic\r\n                          negative\r\n                          icon=\"trash\"\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\nexport default observer(ProfilePhotos);\r\n"]},"metadata":{},"sourceType":"module"}