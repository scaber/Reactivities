{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js"],"names":["_extends","_map","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","MessageItem","MessageList","props","children","className","items","classes","rest","ElementType","createElement","isNil","create","handledProps","propTypes","process","env","NODE_ENV","as","node","string","collectionShorthand","defaultProps","val"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,sBAAxB,EAAgDC,eAAhD,EAAiEC,cAAjE,EAAiFC,iBAAjF,QAA0G,WAA1G;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA;;;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,KAAK,GAAGH,KAAK,CAACG,KAFlB;AAGA,MAAIC,OAAO,GAAGd,EAAE,CAAC,MAAD,EAASY,SAAT,CAAhB;AACA,MAAIG,IAAI,GAAGR,iBAAiB,CAACE,WAAD,EAAcC,KAAd,CAA5B;AACA,MAAIM,WAAW,GAAGV,cAAc,CAACG,WAAD,EAAcC,KAAd,CAAhC;AACA,SAAOR,KAAK,CAACe,aAAN,CAAoBD,WAApB,EAAiClB,QAAQ,CAAC,EAAD,EAAKiB,IAAL,EAAW;AACzDH,IAAAA,SAAS,EAAEE;AAD8C,GAAX,CAAzC,EAEHX,aAAa,CAACe,KAAd,CAAoBP,QAApB,IAAgCZ,IAAI,CAACc,KAAD,EAAQL,WAAW,CAACW,MAApB,CAApC,GAAkER,QAF/D,CAAP;AAGD;;AAEDF,WAAW,CAACW,YAAZ,GAA2B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,OAAhC,CAA3B;AACAX,WAAW,CAACY,SAAZ,GAAwBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC9D;AACAC,EAAAA,EAAE,EAAEpB,eAAe,CAACoB,EAF0C;;AAI9D;AACAd,EAAAA,QAAQ,EAAEV,SAAS,CAACyB,IAL0C;;AAO9D;AACAd,EAAAA,SAAS,EAAEX,SAAS,CAAC0B,MARyC;;AAU9D;AACAd,EAAAA,KAAK,EAAER,eAAe,CAACuB;AAXuC,CAAxC,GAYpB,EAZJ;AAaAnB,WAAW,CAACoB,YAAZ,GAA2B;AACzBJ,EAAAA,EAAE,EAAE;AADqB,CAA3B;AAGAhB,WAAW,CAACU,MAAZ,GAAqBf,sBAAsB,CAACK,WAAD,EAAc,UAAUqB,GAAV,EAAe;AACtE,SAAO;AACLjB,IAAAA,KAAK,EAAEiB;AADF,GAAP;AAGD,CAJ0C,CAA3C;AAKA,eAAerB,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;"]},"metadata":{},"sourceType":"module"}