{"ast":null,"code":"import React,{Fragment,useContext,useEffect}from\"react\";import{Segment,Header,Form,Button,Comment}from\"semantic-ui-react\";import{RootStoreContext}from\"../../../app/stores/rootStore\";import{Link}from\"react-router-dom\";import{Form as FinalForm,Field}from'react-final-form';import TextAreaInput from\"../../../app/common/form/TextAreaInput\";import{observer}from\"mobx-react-lite\";var ActivityDetailedChat=function ActivityDetailedChat(){var rootStore=useContext(RootStoreContext);var _rootStore$activitySt=rootStore.activityStore,createHubConnection=_rootStore$activitySt.createHubConnection,stopHubConnection=_rootStore$activitySt.stopHubConnection,addComment=_rootStore$activitySt.addComment,activity=_rootStore$activitySt.activity;useEffect(function(){createHubConnection();return function(){stopHubConnection();};},[createHubConnection,stopHubConnection]);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Segment,{textAlign:\"center\",attached:\"top\",inverted:true,color:\"teal\",style:{border:\"none\"}},/*#__PURE__*/React.createElement(Header,null,\"Chat about this event\")),/*#__PURE__*/React.createElement(Segment,{attached:true},/*#__PURE__*/React.createElement(Comment.Group,null,activity&&activity.comments&&activity.comments.map(function(comment){return/*#__PURE__*/React.createElement(Comment,{key:comment.id},/*#__PURE__*/React.createElement(Comment.Avatar,{src:comment.image||\"/assets/user.png\"}),/*#__PURE__*/React.createElement(Comment.Content,null,/*#__PURE__*/React.createElement(Comment.Author,{as:Link,to:\"/profile/\".concat(comment.username)},comment.display,\" \"),/*#__PURE__*/React.createElement(Comment.Metadata,null,/*#__PURE__*/React.createElement(\"div\",null,comment.createAt)),/*#__PURE__*/React.createElement(Comment.Text,null,comment.body)));}),/*#__PURE__*/React.createElement(FinalForm,{onSubmit:addComment,render:function render(_ref){var handleSubmit=_ref.handleSubmit,submitting=_ref.submitting,form=_ref.form;return/*#__PURE__*/React.createElement(Form,{onSubmit:function onSubmit(){return handleSubmit().then(function(){return form.reset();});}},/*#__PURE__*/React.createElement(Field,{name:\"body\",component:TextAreaInput,rows:2,placeholder:\"Add your Comment\"}),/*#__PURE__*/React.createElement(Button,{content:\"Add Reply\",labelPosition:\"left\",icon:\"edit\",primary:true,loading:submitting}));}}))));};export default observer(ActivityDetailedChat);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/activities/details/ActivityDetailedChat.tsx"],"names":["React","Fragment","useContext","useEffect","Segment","Header","Form","Button","Comment","RootStoreContext","Link","FinalForm","Field","TextAreaInput","observer","ActivityDetailedChat","rootStore","activityStore","createHubConnection","stopHubConnection","addComment","activity","border","comments","map","comment","id","image","username","display","createAt","body","handleSubmit","submitting","form","then","reset"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,OAAT,CAAkBC,MAAlB,CAA0BC,IAA1B,CAAgCC,MAAhC,CAAwCC,OAAxC,KAAuD,mBAAvD,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,OAAQJ,IAAI,GAAIK,CAAAA,SAAhB,CAA0BC,KAA1B,KAAsC,kBAAtC,CACA,MAAOC,CAAAA,aAAP,KAA0B,wCAA1B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CAGA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,GAAMC,CAAAA,SAAS,CAAGd,UAAU,CAACO,gBAAD,CAA5B,CADiC,0BAO7BO,SAAS,CAACC,aAPmB,CAG/BC,mBAH+B,uBAG/BA,mBAH+B,CAI/BC,iBAJ+B,uBAI/BA,iBAJ+B,CAK/BC,UAL+B,uBAK/BA,UAL+B,CAM/BC,QAN+B,uBAM/BA,QAN+B,CASjClB,SAAS,CAAC,UAAM,CACde,mBAAmB,GACnB,MAAO,WAAM,CACXC,iBAAiB,GAClB,CAFD,CAGD,CALQ,CAKN,CAACD,mBAAD,CAAsBC,iBAAtB,CALM,CAAT,CAOA,mBACE,oBAAC,QAAD,mBACE,oBAAC,OAAD,EACE,SAAS,CAAC,QADZ,CAEE,QAAQ,CAAC,KAFX,CAGE,QAAQ,KAHV,CAIE,KAAK,CAAC,MAJR,CAKE,KAAK,CAAE,CAAEG,MAAM,CAAE,MAAV,CALT,eAOE,oBAAC,MAAD,8BAPF,CADF,cAUE,oBAAC,OAAD,EAAS,QAAQ,KAAjB,eACE,oBAAC,OAAD,CAAS,KAAT,MACGD,QAAQ,EACPA,QAAQ,CAACE,QADV,EAECF,QAAQ,CAACE,QAAT,CAAkBC,GAAlB,CAAsB,SAACC,OAAD,qBACpB,oBAAC,OAAD,EAAS,GAAG,CAAIA,OAAO,CAACC,EAAxB,eACE,oBAAC,OAAD,CAAS,MAAT,EAAgB,GAAG,CAAED,OAAO,CAACE,KAAR,EAAiB,kBAAtC,EADF,cAEE,oBAAC,OAAD,CAAS,OAAT,mBACE,oBAAC,OAAD,CAAS,MAAT,EAAgB,EAAE,CAAEjB,IAApB,CAA0B,EAAE,oBAAce,OAAO,CAACG,QAAtB,CAA5B,EAA+DH,OAAO,CAACI,OAAvE,KADF,cAEE,oBAAC,OAAD,CAAS,QAAT,mBACN,+BAAMJ,OAAO,CAACK,QAAd,CADM,CAFF,cAKE,oBAAC,OAAD,CAAS,IAAT,MAAeL,OAAO,CAACM,IAAvB,CALF,CAFF,CADoB,EAAtB,CAHJ,cAgBA,oBAAC,SAAD,EACA,QAAQ,CAAEX,UADV,CAEA,MAAM,CAAE,yBAAEY,CAAAA,YAAF,MAAEA,YAAF,CAAeC,UAAf,MAAeA,UAAf,CAA0BC,IAA1B,MAA0BA,IAA1B,oBAEN,oBAAC,IAAD,EAAM,QAAQ,CAAE,0BAAKF,CAAAA,YAAY,GAAIG,IAAhB,CAAqB,iBAAMD,CAAAA,IAAI,CAACE,KAAL,EAAN,EAArB,CAAL,EAAhB,eACA,oBAAC,KAAD,EACA,IAAI,CAAC,MADL,CAEA,SAAS,CAAEvB,aAFX,CAGA,IAAI,CAAE,CAHN,CAIA,WAAW,CAAC,kBAJZ,EADA,cAOA,oBAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,aAAa,CAAC,MAFhB,CAGE,IAAI,CAAC,MAHP,CAIE,OAAO,KAJT,CAKE,OAAO,CAAEoB,UALX,EAPA,CAFM,EAFR,EAhBA,CADF,CAVF,CADF,CAsDD,CAtED,CAwEA,cAAenB,CAAAA,QAAQ,CAACC,oBAAD,CAAvB","sourcesContent":["import React, { Fragment, useContext, useEffect } from \"react\";\nimport { Segment, Header, Form, Button, Comment } from \"semantic-ui-react\";\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\nimport { Link } from \"react-router-dom\";\n\nimport {Form as FinalForm,Field} from 'react-final-form';\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\nimport { observer } from \"mobx-react-lite\";\n\n\nconst ActivityDetailedChat = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    createHubConnection,\n    stopHubConnection,\n    addComment,\n    activity,\n  } = rootStore.activityStore;\n\n  useEffect(() => {\n    createHubConnection();\n    return () => {\n      stopHubConnection();\n    };\n  }, [createHubConnection, stopHubConnection]);\n\n  return (\n    <Fragment>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached>\n        <Comment.Group>\n          {activity &&\n            activity.comments &&\n            activity.comments.map((comment) => (\n              <Comment key = {comment.id}>\n                <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n                <Comment.Content>\n                  <Comment.Author as={Link} to={`/profile/${comment.username}`}>{comment.display} </Comment.Author>\n                  <Comment.Metadata>\n            <div>{comment.createAt}</div>\n                  </Comment.Metadata>\n                  <Comment.Text>{comment.body}</Comment.Text>\n                  \n                </Comment.Content>\n              </Comment>\n            ))}\n        <FinalForm\n        onSubmit={addComment}\n        render={({handleSubmit,submitting,form}) => (\n\n          <Form onSubmit={()=> handleSubmit()!.then(() => form.reset())}>\n          <Field\n          name='body'\n          component={TextAreaInput}\n          rows={2}\n          placeholder='Add your Comment'\n          />\n          <Button\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n            primary\n            loading={submitting}\n          />\n        </Form>\n        )}\n        />\n      \n        </Comment.Group>\n      </Segment>\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityDetailedChat);\n"]},"metadata":{},"sourceType":"module"}