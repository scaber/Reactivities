{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfilePage.tsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport ProfileHeader from './ProfileHeader';\nimport { ProfileContent } from './ProfileContent';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nexport const ProfilePage = ({\n  match\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const _rootStore$profileSto = rootStore.profileStore,\n        loadingProfile = _rootStore$profileSto.loadingProfile,\n        profile = _rootStore$profileSto.profile,\n        loadProfile = _rootStore$profileSto.loadProfile;\n  useEffect(() => {\n    loadProfile(match.params.username);\n  }, [loadProfile, match]);\n  if (loadProfile) return React.createElement(LoadingComponent, {\n    content: \"Loading Profile ..\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(ProfileHeader, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(ProfileContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["C:\\Projects\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePage.tsx"],"names":["React","useContext","useEffect","Grid","ProfileHeader","ProfileContent","RootStoreContext","LoadingComponent","ProfilePage","match","rootStore","profileStore","loadingProfile","profile","loadProfile","params","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AAEA,OAAOC,gBAAP,MAA6B,mCAA7B;AAUA,OAAO,MAAMC,WAA4B,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACrD,QAAMC,SAAS,GAAET,UAAU,CAACK,gBAAD,CAA3B;AADqD,gCAETI,SAAS,CAACC,YAFD;AAAA,QAE9CC,cAF8C,yBAE9CA,cAF8C;AAAA,QAE/BC,OAF+B,yBAE/BA,OAF+B;AAAA,QAEvBC,WAFuB,yBAEvBA,WAFuB;AAIrDZ,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,WAAW,CAACL,KAAK,CAACM,MAAN,CAAaC,QAAd,CAAX;AAEH,GAHQ,EAGN,CAACF,WAAD,EAAaL,KAAb,CAHM,CAAT;AAKA,MAAGK,WAAH,EAAgB,OAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,oBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEhB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAED,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAQH,CAnBM","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport ProfileHeader from './ProfileHeader'\r\nimport { ProfileContent } from './ProfileContent'\r\nimport { RootStoreContext } from '../../app/stores/rootStore'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\n\r\n\r\ninterface RouteParams {\r\nusername:string;    \r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams> {\r\n\r\n}\r\nexport const ProfilePage:React.FC<IProps> = ({match}) => {\r\n    const rootStore =useContext(RootStoreContext);\r\n    const {loadingProfile,profile,loadProfile} =rootStore.profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(match.params.username)\r\n       \r\n    }, [loadProfile,match])\r\n\r\n    if(loadProfile) return <LoadingComponent content ='Loading Profile ..'/>\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                <ProfileHeader profile={profile}/>\r\n                <ProfileContent/>\r\n            </Grid.Column> \r\n        </Grid>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}