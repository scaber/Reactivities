{"ast":null,"code":"import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date, dirtyOptions) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js"],"names":["toInteger","toDate","getUTCISOWeek","setUTCISOWeek","dirtyDate","dirtyISOWeek","dirtyOptions","arguments","length","TypeError","date","isoWeek","diff","setUTCDate","getUTCDate"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CAEA;AACA;;AACA,eAAe,SAASC,aAAT,CAAwBC,SAAxB,EAAmCC,YAAnC,EAAiDC,YAAjD,EAA+D;AAC5E,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UAArE,CAAN;AACD;;AAED,MAAIE,IAAI,GAAGT,MAAM,CAACG,SAAD,EAAYE,YAAZ,CAAjB;AACA,MAAIK,OAAO,GAAGX,SAAS,CAACK,YAAD,CAAvB;AACA,MAAIO,IAAI,GAAGV,aAAa,CAACQ,IAAD,EAAOJ,YAAP,CAAb,GAAoCK,OAA/C;AACAD,EAAAA,IAAI,CAACG,UAAL,CAAgBH,IAAI,CAACI,UAAL,KAAoBF,IAAI,GAAG,CAA3C;AACA,SAAOF,IAAP;AACD","sourcesContent":["import toInteger from '../toInteger/index.js'\nimport toDate from '../../toDate/index.js'\nimport getUTCISOWeek from '../getUTCISOWeek/index.js'\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function setUTCISOWeek (dirtyDate, dirtyISOWeek, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions)\n  var isoWeek = toInteger(dirtyISOWeek)\n  var diff = getUTCISOWeek(date, dirtyOptions) - isoWeek\n  date.setUTCDate(date.getUTCDate() - diff * 7)\n  return date\n}\n"]},"metadata":{},"sourceType":"module"}