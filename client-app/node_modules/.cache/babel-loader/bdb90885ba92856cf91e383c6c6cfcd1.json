{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _temp;\n\nimport { observable, action, runInAction, computed, reaction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { toast } from \"react-toastify\";\nlet ProfileStore = (_class = (_temp = class ProfileStore {\n  constructor(rootStore) {\n    this.rootStore = void 0;\n\n    _initializerDefineProperty(this, \"profile\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"loadingProfile\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"uploadingPhoto\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"loading\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"followings\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"activeTab\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"setActiveTab\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"loadProfile\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"uploadPhoto\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"setMainPhoto\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"deletePhoto\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"updateProfile\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"follow\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"unfollow\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"loadFollowings\", _descriptor15, this);\n\n    this.rootStore = rootStore;\n    reaction(() => this.activeTab, activeTab => {\n      if (activeTab === 3 || activeTab === 4) {\n        const predicate = activeTab === 3 ? 'followers' : 'following';\n        this.loadFollowings(predicate);\n      } else {\n        this.followings = [];\n      }\n    });\n  }\n\n  get isCurrentUser() {\n    if (this.rootStore.userStore.user && this.profile) {\n      return this.rootStore.userStore.user.username === this.profile.userName;\n    } else {\n      return false;\n    }\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"profile\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"loadingProfile\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"uploadingPhoto\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"loading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"followings\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"activeTab\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"isCurrentUser\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isCurrentUser\"), _class.prototype), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"setActiveTab\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return activeIndex => {\n      this.activeTab = activeIndex;\n    };\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"loadProfile\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async userName => {\n      try {\n        const profile = await agent.Profiles.get(userName);\n        runInAction(() => {\n          this.profile = profile;\n          this.loadingProfile = false;\n        });\n      } catch (error) {\n        runInAction(() => {\n          this.loadingProfile = false;\n        });\n        console.log(error);\n      }\n    };\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"uploadPhoto\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async file => {\n      this.uploadingPhoto = true;\n\n      try {\n        const photo = await agent.Profiles.uploadPhoto(file);\n        runInAction(() => {\n          if (this.profile) {\n            this.profile.photos.push(photo);\n\n            if (photo.isMain && this.rootStore.userStore.user) {\n              this.rootStore.userStore.user.image = photo.url;\n              this.profile.image = photo.url;\n            }\n          }\n\n          this.uploadingPhoto = false;\n        });\n      } catch (error) {\n        console.log(error);\n        toast.error(\"uploading problem photo\");\n        runInAction(() => {\n          this.uploadingPhoto = false;\n        });\n      }\n    };\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"setMainPhoto\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async photo => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.setMainPhoto(photo.id);\n        runInAction(() => {\n          this.rootStore.userStore.user.image = photo.url;\n          this.profile.photos.find(a => a.isMain).isMain = false;\n          this.profile.photos.find(a => a.id === photo.id).isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error(\"Problem setting photo as main\");\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"deletePhoto\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async photo => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.deletePhoto(photo.id);\n        runInAction(() => {\n          this.profile.photos = this.profile.photos.filter(a => a.id !== photo.id);\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error(\"Problem deleting photo \");\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"updateProfile\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async profile => {\n      try {\n        await agent.Profiles.updateProfile(profile);\n        runInAction(() => {\n          if (profile.display !== this.rootStore.userStore.user.display) {\n            this.rootStore.userStore.user.display = profile.display;\n          }\n\n          this.profile = { ...this.profile,\n            ...profile\n          };\n        });\n      } catch (error) {\n        toast.error(\"Problem updating profile\");\n      }\n    };\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"follow\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async username => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.follow(username);\n        runInAction(() => {\n          this.profile.following = true;\n          this.profile.followersCount++;\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error(\"Problem following user\");\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"unfollow\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async username => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.unfollow(username);\n        runInAction(() => {\n          this.profile.following = false;\n          this.profile.followersCount--;\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error(\"Problem unfollowing user\");\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"loadFollowings\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async predicate => {\n      this.loading = true;\n\n      try {\n        const profiles = await agent.Profiles.listFollowings(this.profile.userName, predicate);\n        runInAction(() => {\n          this.followings = profiles;\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error('Problem loading followings');\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n})), _class);\nexport { ProfileStore as default };","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/app/stores/profileStore.ts"],"names":["observable","action","runInAction","computed","reaction","agent","toast","ProfileStore","constructor","rootStore","activeTab","predicate","loadFollowings","followings","isCurrentUser","userStore","user","profile","username","userName","activeIndex","Profiles","get","loadingProfile","error","console","log","file","uploadingPhoto","photo","uploadPhoto","photos","push","isMain","image","url","loading","setMainPhoto","id","find","a","deletePhoto","filter","updateProfile","display","follow","following","followersCount","unfollow","profiles","listFollowings"],"mappings":"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","sourcesContent":["import { RootStore } from \"./rootStore\";\r\nimport { IProfile, IPhoto } from \"../models/profile\";\r\nimport { observable, action, runInAction, computed, reaction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class ProfileStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      ()=> this.activeTab,\r\n      activeTab => {\r\n        if (activeTab===3 || activeTab ===4) {\r\n          const predicate =activeTab===3 ? 'followers':'following';\r\n          this.loadFollowings(predicate)\r\n        }else {\r\n          this.followings=[];\r\n        }\r\n      }\r\n    )\r\n  }\r\n  @observable profile: IProfile | null = null;\r\n  @observable loadingProfile = true;\r\n  @observable uploadingPhoto = false;\r\n  @observable loading = false;\r\n  @observable followings: IProfile[] = [];\r\n  @observable activeTab: number = 0;\r\n\r\n  @computed get isCurrentUser() {\r\n    if (this.rootStore.userStore.user && this.profile) {\r\n      return this.rootStore.userStore.user.username === this.profile.userName;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  @action setActiveTab= (activeIndex: number) => {\r\n    this.activeTab=activeIndex;\r\n  }\r\n  @action loadProfile = async (userName: string) => {\r\n    try {\r\n      const profile = await agent.Profiles.get(userName);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action uploadPhoto = async (file: Blob) => {\r\n    this.uploadingPhoto = true;\r\n    try {\r\n      const photo = await agent.Profiles.uploadPhoto(file);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos.push(photo);\r\n          if (photo.isMain && this.rootStore.userStore.user) {\r\n            this.rootStore.userStore.user.image = photo.url;\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploadingPhoto = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"uploading problem photo\");\r\n      runInAction(() => {\r\n        this.uploadingPhoto = false;\r\n      });\r\n    }\r\n  };\r\n  @action setMainPhoto = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      runInAction(() => {\r\n        this.rootStore.userStore.user!.image = photo.url;\r\n        this.profile!.photos.find((a) => a.isMain)!.isMain = false;\r\n        this.profile!.photos.find((a) => a.id === photo.id)!.isMain = true;\r\n        this.profile!.image = photo.url;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem setting photo as main\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n  @action deletePhoto = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        this.profile!.photos = this.profile!.photos.filter(\r\n          (a) => a.id !== photo.id\r\n        );\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem deleting photo \");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action updateProfile = async (profile: Partial<IProfile>) => {\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (profile.display !== this.rootStore.userStore.user!.display) {\r\n          this.rootStore.userStore.user!.display = profile.display!;\r\n        }\r\n        this.profile = { ...this.profile!, ...profile };\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem updating profile\");\r\n    }\r\n  };\r\n  @action follow = async (username: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.follow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = true;\r\n        this.profile!.followersCount++;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem following user\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action unfollow = async (username: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.unfollow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = false;\r\n        this.profile!.followersCount--;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem unfollowing user\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action loadFollowings = async (predicate: string) => {\r\n    this.loading = true;\r\n    try {\r\n      const profiles = await agent.Profiles.listFollowings(\r\n        this.profile!.userName,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n          this.followings = profiles;\r\n          this.loading = false;\r\n      })\r\n    } catch (error) {\r\n      toast.error('Problem loading followings');\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}