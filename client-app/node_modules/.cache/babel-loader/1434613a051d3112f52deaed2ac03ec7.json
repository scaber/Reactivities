{"ast":null,"code":"import React,{Fragment,useContext,useEffect}from'react';import{Container}from'semantic-ui-react';import NavBar from'../../features/nav/NavBar';import ActivityDashboard from'../../features/activities/dashboard/ActivityDashboard';import{observer}from'mobx-react-lite';import{Route,withRouter,Switch}from'react-router-dom';import HomePage from'../../features/home/HomePage';import ActivityForm from'../../features/activities/form/ActivityForm';import ActivityDetails from'../../features/activities/details/ActivityDetails';import NotFound from'./NotFound';import{ToastContainer}from'react-toastify';import{RootStoreContext}from'../stores/rootStore';import LoadingComponent from'./LoadingComponent';import ModalContainer from'../common/modals/ModalContainer';import ProfilePage from'../../features/profiles/ProfilePage';import{PrivateRoute}from'./PrivateRoute';var App=function App(_ref){var location=_ref.location;var rootStore=useContext(RootStoreContext);var _rootStore$commonStor=rootStore.commonStore,setAppLoaded=_rootStore$commonStor.setAppLoaded,token=_rootStore$commonStor.token,appLoaded=_rootStore$commonStor.appLoaded;var getUser=rootStore.userStore.getUser;useEffect(function(){if(token){getUser().finally(function(){return setAppLoaded();});}else{setAppLoaded();}},[getUser,setAppLoaded,token]);if(!appLoaded)return/*#__PURE__*/React.createElement(LoadingComponent,{content:\"Loading app...\"});return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(ModalContainer,null),/*#__PURE__*/React.createElement(ToastContainer,{position:\"bottom-right\"}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\",component:HomePage}),/*#__PURE__*/React.createElement(Route,{path:'/(.+)',render:function render(){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(NavBar,null),/*#__PURE__*/React.createElement(Container,{style:{marginTop:'7em'}},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(PrivateRoute,{exact:true,path:\"/activities\",component:ActivityDashboard}),/*#__PURE__*/React.createElement(PrivateRoute,{path:\"/activities/:id\",component:ActivityDetails}),/*#__PURE__*/React.createElement(PrivateRoute,{key:location.key,path:['/createActivity','/manage/:id'],component:ActivityForm}),/*#__PURE__*/React.createElement(PrivateRoute,{path:\"/profile/:userName\",component:ProfilePage}),/*#__PURE__*/React.createElement(Route,{component:NotFound}))));}}));};export default withRouter(observer(App));","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/app/layout/App.tsx"],"names":["React","Fragment","useContext","useEffect","Container","NavBar","ActivityDashboard","observer","Route","withRouter","Switch","HomePage","ActivityForm","ActivityDetails","NotFound","ToastContainer","RootStoreContext","LoadingComponent","ModalContainer","ProfilePage","PrivateRoute","App","location","rootStore","commonStore","setAppLoaded","token","appLoaded","getUser","userStore","finally","marginTop","key"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,SAAT,KAA0B,mBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,2BAAnB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,uDAA9B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OACEC,KADF,CAEEC,UAFF,CAIEC,MAJF,KAKO,kBALP,CAMA,MAAOC,CAAAA,QAAP,KAAqB,8BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,6CAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mDAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAAQC,cAAR,KAA6B,gBAA7B,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,qCAAxB,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA,GAAMC,CAAAA,GAAkC,CAAG,QAArCA,CAAAA,GAAqC,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC3D,GAAMC,CAAAA,SAAS,CAAGrB,UAAU,CAACc,gBAAD,CAA5B,CAD2D,0BAElBO,SAAS,CAACC,WAFQ,CAEpDC,YAFoD,uBAEpDA,YAFoD,CAEtCC,KAFsC,uBAEtCA,KAFsC,CAE/BC,SAF+B,uBAE/BA,SAF+B,IAGpDC,CAAAA,OAHoD,CAGzCL,SAAS,CAACM,SAH+B,CAGpDD,OAHoD,CAK3DzB,SAAS,CAAC,UAAM,CACd,GAAIuB,KAAJ,CAAW,CACTE,OAAO,GAAGE,OAAV,CAAkB,iBAAML,CAAAA,YAAY,EAAlB,EAAlB,EACD,CAFD,IAEO,CACLA,YAAY,GACb,CACF,CANQ,CAMN,CAACG,OAAD,CAAUH,YAAV,CAAwBC,KAAxB,CANM,CAAT,CAQA,GAAI,CAACC,SAAL,CAAiB,mBAAO,oBAAC,gBAAD,EAAkB,OAAO,CAAC,gBAA1B,EAAP,CAEjB,mBACE,oBAAC,QAAD,mBACE,oBAAC,cAAD,MADF,cAEE,oBAAC,cAAD,EAAgB,QAAQ,CAAC,cAAzB,EAFF,cAGE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEhB,QAAjC,EAHF,cAIE,oBAAC,KAAD,EACE,IAAI,CAAE,OADR,CAEE,MAAM,CAAE,qCACN,oBAAC,QAAD,mBACE,oBAAC,MAAD,MADF,cAEE,oBAAC,SAAD,EAAW,KAAK,CAAE,CAAEoB,SAAS,CAAE,KAAb,CAAlB,eACE,oBAAC,MAAD,mBACE,oBAAC,YAAD,EAAc,KAAK,KAAnB,CAAoB,IAAI,CAAC,aAAzB,CAAuC,SAAS,CAAEzB,iBAAlD,EADF,cAEE,oBAAC,YAAD,EAAc,IAAI,CAAC,iBAAnB,CAAqC,SAAS,CAAEO,eAAhD,EAFF,cAGE,oBAAC,YAAD,EACE,GAAG,CAAES,QAAQ,CAACU,GADhB,CAEE,IAAI,CAAE,CAAC,iBAAD,CAAoB,aAApB,CAFR,CAGE,SAAS,CAAEpB,YAHb,EAHF,cAQE,oBAAC,YAAD,EAAc,IAAI,CAAC,oBAAnB,CAAwC,SAAS,CAAEO,WAAnD,EARF,cAUE,oBAAC,KAAD,EAAO,SAAS,CAAEL,QAAlB,EAVF,CADF,CAFF,CADM,EAFV,EAJF,CADF,CA6BD,CA5CD,CA8CA,cAAeL,CAAAA,UAAU,CAACF,QAAQ,CAACc,GAAD,CAAT,CAAzB","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport NavBar from '../../features/nav/NavBar';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport { observer } from 'mobx-react-lite';\r\nimport {\r\n  Route,\r\n  withRouter,\r\n  RouteComponentProps,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport ActivityForm from '../../features/activities/form/ActivityForm';\r\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\r\nimport NotFound from './NotFound';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport ModalContainer from '../common/modals/ModalContainer';\r\nimport ProfilePage from '../../features/profiles/ProfilePage';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n \r\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {setAppLoaded, token, appLoaded} = rootStore.commonStore;\r\n  const {getUser} = rootStore.userStore;\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getUser().finally(() => setAppLoaded())\r\n    } else {\r\n      setAppLoaded();\r\n    }\r\n  }, [getUser, setAppLoaded, token])\r\n\r\n  if (!appLoaded)  return <LoadingComponent content='Loading app...' />\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModalContainer />\r\n      <ToastContainer position='bottom-right' />\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route\r\n        path={'/(.+)'}\r\n        render={() => (\r\n          <Fragment>\r\n            <NavBar />\r\n            <Container style={{ marginTop: '7em' }}>\r\n              <Switch>\r\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\r\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={['/createActivity', '/manage/:id']}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute path='/profile/:userName' component={ProfilePage} />\r\n                \r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </Fragment>\r\n        )}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(observer(App));\r\n"]},"metadata":{},"sourceType":"module"}