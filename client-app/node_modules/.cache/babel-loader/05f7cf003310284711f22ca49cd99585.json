{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfilePhotos.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { Tab, Header, Card, Image, Button } from \"semantic-ui-react\";\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\nexport const ProfilePhotos = () => {\n  const rootStore = useContext(RootStoreContext);\n  const _rootStore$profileSto = rootStore.profileStore,\n        profile = _rootStore$profileSto.profile,\n        isCurrentUser = _rootStore$profileSto.isCurrentUser;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        addPhotoMode = _useState2[0],\n        setAddPhotoMode = _useState2[1];\n\n  return React.createElement(Tab.Pane, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Header, {\n    floated: \"left\",\n    icon: \"image\",\n    content: \"Photos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), isCurrentUser && React.createElement(Button, {\n    floated: \"right\",\n    basic: true,\n    content: addPhotoMode ? 'cancel' : 'add photo',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Card.Group, {\n    itemsPerRow: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, profile && profile.photos.map(photo => React.createElement(Card, {\n    key: photo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: photo.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["C:\\Projects\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePhotos.tsx"],"names":["React","useContext","useState","Tab","Header","Card","Image","Button","RootStoreContext","ProfilePhotos","rootStore","profileStore","profile","isCurrentUser","addPhotoMode","setAddPhotoMode","photos","map","photo","id","url"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,MAAnC,QAAiD,mBAAjD;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,QAAMC,SAAS,GAAGT,UAAU,CAACO,gBAAD,CAA5B;AADiC,gCAECE,SAAS,CAACC,YAFX;AAAA,QAEzBC,OAFyB,yBAEzBA,OAFyB;AAAA,QAEjBC,aAFiB,yBAEjBA,aAFiB;;AAAA,oBAIKX,QAAQ,CAAC,KAAD,CAJb;AAAA;AAAA,QAI1BY,YAJ0B;AAAA,QAIbC,eAJa;;AAKjC,SACE,oBAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,IAAI,EAAC,OAA5B;AAAoC,IAAA,OAAO,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGF,aAAa,IACd,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,OAAO,EAAEC,YAAY,GAAG,QAAH,GAAa,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,WAAW,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,IACNA,OAAO,CAACI,MAAR,CAAeC,GAAf,CAAmBC,KAAK,IACtB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAED,KAAK,CAACE,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFJ,CAJF,CADF;AAeD,CApBM","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Tab, Header, Card, Image, Button } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nexport const ProfilePhotos = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { profile,isCurrentUser } = rootStore.profileStore;\r\n\r\n  const [addPhotoMode,setAddPhotoMode] =useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Header floated='left' icon=\"image\" content=\"Photos\" />\r\n      {isCurrentUser &&\r\n      <Button floated='right' basic content={addPhotoMode ? 'cancel' :'add photo'}/> }\r\n      <Card.Group itemsPerRow={5}>\r\n        {profile &&\r\n          profile.photos.map(photo => (\r\n            <Card key={photo.id}>\r\n              <Image src={photo.url} />\r\n            </Card>\r\n          ))}\r\n      </Card.Group>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}