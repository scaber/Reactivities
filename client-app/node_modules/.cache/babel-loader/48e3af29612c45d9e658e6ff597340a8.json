{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _dateArithmetic = _interopRequireDefault(require(\"date-arithmetic\"));\n\nvar _localizers = require(\"./localizers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar dates = _extends({}, _dateArithmetic.default, {\n  monthsInYear: function monthsInYear(year) {\n    var date = new Date(year, 0, 1);\n    return [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(function (i) {\n      return dates.month(date, i);\n    });\n  },\n  firstVisibleDay: function firstVisibleDay(date, culture) {\n    var firstOfMonth = dates.startOf(date, 'month');\n    return dates.startOf(firstOfMonth, 'week', _localizers.date.firstOfWeek(culture));\n  },\n  lastVisibleDay: function lastVisibleDay(date, culture) {\n    var endOfMonth = dates.endOf(date, 'month');\n    return dates.endOf(endOfMonth, 'week', _localizers.date.firstOfWeek(culture));\n  },\n  visibleDays: function visibleDays(date, culture) {\n    var current = dates.firstVisibleDay(date, culture);\n    var last = dates.lastVisibleDay(date, culture);\n    var days = [];\n\n    while (dates.lte(current, last, 'day')) {\n      days.push(current);\n      current = dates.add(current, 1, 'day');\n    }\n\n    return days;\n  },\n  merge: function merge(date, time, defaultDate) {\n    if (time == null && date == null) return null;\n    if (time == null) time = defaultDate || new Date();\n    if (date == null) date = defaultDate || new Date();\n    date = dates.startOf(date, 'day');\n    date = dates.hours(date, dates.hours(time));\n    date = dates.minutes(date, dates.minutes(time));\n    date = dates.seconds(date, dates.seconds(time));\n    return dates.milliseconds(date, dates.milliseconds(time));\n  },\n  today: function today() {\n    return dates.startOf(new Date(), 'day');\n  },\n  tomorrow: function tomorrow() {\n    return dates.add(dates.startOf(new Date(), 'day'), 1, 'day');\n  }\n});\n\nvar _default = dates;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}