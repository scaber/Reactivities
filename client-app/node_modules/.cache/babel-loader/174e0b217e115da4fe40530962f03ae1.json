{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.defaultGetDataState = defaultGetDataState;\nexports.getCommonListProps = getCommonListProps;\nexports.default = reduceToListState;\n\nvar _Filter = require(\"./Filter\");\n\nvar _ = require(\"./_\");\n\nvar _dataHelpers = require(\"./dataHelpers\");\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar EMPTY_VALUE = {};\n\nvar returnFalse = function returnFalse() {\n  return false;\n};\n\nfunction defaultGetDataState(data, _ref, lastState) {\n  var groupBy = _ref.groupBy;\n\n  if (lastState === void 0) {\n    lastState = {};\n  }\n\n  if (lastState.data !== data || lastState.groupBy !== groupBy) {\n    if (!groupBy) return {};\n    var keys = [];\n    var groups = (0, _.groupBySortedKeys)(groupBy, data, keys);\n    return {\n      data: data,\n      groupBy: groupBy,\n      groups: groups,\n      sortedKeys: keys,\n      sequentialData: Object.keys(groups).reduce(function (flat, grp) {\n        return flat.concat(groups[grp]);\n      }, [])\n    };\n  }\n\n  return lastState;\n}\n\nvar getStateGetterFromList = function getStateGetterFromList(_ref2) {\n  var l = _ref2.listComponent;\n  return l && l.getDataState;\n};\n\nvar getIsDisabled = function getIsDisabled(disabledProp, valueField) {\n  return !Array.isArray(disabledProp) ? returnFalse : function (item) {\n    return disabledProp.some(function (i) {\n      return (0, _dataHelpers.dataValue)(item, valueField) === (0, _dataHelpers.dataValue)(i, valueField);\n    });\n  };\n};\n\nfunction getCommonListProps(list, accessors, _ref3) {\n  var groupBy = _ref3.groupBy,\n      optionComponent = _ref3.optionComponent,\n      itemComponent = _ref3.itemComponent,\n      groupComponent = _ref3.groupComponent,\n      searchTerm = _ref3.searchTerm,\n      listProps = _ref3.listProps;\n  return _extends({\n    searchTerm: searchTerm,\n    groupBy: groupBy,\n    groupComponent: groupComponent,\n    itemComponent: itemComponent,\n    optionComponent: optionComponent\n  }, listProps, {\n    data: list.data,\n    dataState: list.state,\n    textAccessor: accessors.text,\n    valueAccessor: accessors.value\n  });\n}\n\nfunction reduceToListState(nextListData, prevList, _temp) {\n  var _ref4 = _temp === void 0 ? {} : _temp,\n      nextProps = _ref4.nextProps,\n      getDataState = _ref4.getDataState;\n\n  var disabled = nextProps.disabled,\n      valueField = nextProps.valueField,\n      textField = nextProps.textField;\n  getDataState = getDataState || getStateGetterFromList(nextProps) || defaultGetDataState;\n  var dataState = getDataState(nextListData, nextProps, prevList && prevList.dataState);\n  var data = dataState && dataState.sequentialData || nextListData;\n  var isDisabled = getIsDisabled(disabled, valueField);\n\n  var moveNext = function moveNext(item, word) {\n    return isDisabled(item) || word && !_Filter.presets.startsWith((0, _dataHelpers.dataText)(item, textField).toLowerCase(), word.toLowerCase());\n  };\n\n  var list = {\n    dataState: dataState,\n    isDisabled: isDisabled,\n    first: function first() {\n      return list.next(EMPTY_VALUE);\n    },\n    last: function last() {\n      return list.prevEnabled(data[data.length - 1]);\n    },\n    prev: function prev(item, word) {\n      var nextIdx = Math.max(0, data.indexOf(item)) - 1;\n\n      while (nextIdx > -1 && moveNext(data[nextIdx], word)) {\n        nextIdx--;\n      }\n\n      if (nextIdx >= 0) return data[nextIdx];\n      return isDisabled(item) ? null : item;\n    },\n    next: function next(item, word) {\n      var nextIdx = data.indexOf(item) + 1;\n\n      while (nextIdx < data.length && moveNext(data[nextIdx], word)) {\n        nextIdx++;\n      }\n\n      if (nextIdx < data.length) return data[nextIdx];\n      return isDisabled(item) ? null : item;\n    },\n    prevEnabled: function prevEnabled(item) {\n      return isDisabled(item) ? list.prev(item) : item;\n    },\n    nextEnabled: function nextEnabled(item) {\n      return isDisabled(item) ? list.next(item) : item;\n    }\n  };\n  return list;\n}","map":null,"metadata":{},"sourceType":"script"}