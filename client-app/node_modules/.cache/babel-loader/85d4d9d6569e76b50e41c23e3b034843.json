{"ast":null,"code":"// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\n/** A logger that does nothing when log messages are sent to it. */\nvar NullLogger =\n/** @class */\nfunction () {\n  function NullLogger() {}\n  /** @inheritDoc */\n  // tslint:disable-next-line\n\n\n  NullLogger.prototype.log = function (_logLevel, _message) {};\n  /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\n\n\n  NullLogger.instance = new NullLogger();\n  return NullLogger;\n}();\n\nexport { NullLogger };","map":{"version":3,"sources":["../../src/Loggers.ts"],"names":[],"mappings":"AAAA;AACA;;AAIA;AACA,IAAA,UAAA;AAAA;AAAA,YAAA;AAII,WAAA,UAAA,GAAA,CAAwB;AAExB;AACA;;;AACO,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,GAAP,UAAW,SAAX,EAAgC,QAAhC,EAAgD,CAC/C,CADM;AAPP;;;AACc,EAAA,UAAA,CAAA,QAAA,GAAoB,IAAI,UAAJ,EAApB;AAQlB,SAAA,UAAA;AAAC,CAVD,EAAA;;SAAa,U","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}