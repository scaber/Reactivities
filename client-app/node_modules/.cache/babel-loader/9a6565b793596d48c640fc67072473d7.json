{"ast":null,"code":"import _slicedToArray from\"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";import{Tab,Header,Card,Image,Button,Grid}from\"semantic-ui-react\";import{RootStoreContext}from\"../../app/stores/rootStore\";import PhotoUploadWidget from\"../../app/common/photoUpload/PhotoUploadWidget\";import{observer}from\"mobx-react-lite\";var ProfilePhotos=function ProfilePhotos(){var rootStore=useContext(RootStoreContext);var _rootStore$profileSto=rootStore.profileStore,profile=_rootStore$profileSto.profile,isCurrentUser=_rootStore$profileSto.isCurrentUser,uploadPhoto=_rootStore$profileSto.uploadPhoto,uploadingPhoto=_rootStore$profileSto.uploadingPhoto,setMainPhoto=_rootStore$profileSto.setMainPhoto,loading=_rootStore$profileSto.loading,deletePhoto=_rootStore$profileSto.deletePhoto;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),addPhotoMode=_useState2[0],setAddPhotoMode=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),target=_useState4[0],setTarget=_useState4[1];var _useState5=useState(undefined),_useState6=_slicedToArray(_useState5,2),deletetarget=_useState6[0],setDeleteTarget=_useState6[1];var handleUploadImage=function handleUploadImage(photo){uploadPhoto(photo).then(function(){return setAddPhotoMode(false);});};return/*#__PURE__*/React.createElement(Tab.Pane,null,/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:16,style:{paddingBotttom:0}},/*#__PURE__*/React.createElement(Header,{floated:\"left\",icon:\"image\",content:\"Photos\"}),isCurrentUser&&/*#__PURE__*/React.createElement(Button,{floated:\"right\",basic:true,content:addPhotoMode?\"cancel\":\"Add Photo\",onClick:function onClick(){return setAddPhotoMode(!addPhotoMode);}})),/*#__PURE__*/React.createElement(Grid.Column,{width:16},addPhotoMode?/*#__PURE__*/React.createElement(PhotoUploadWidget,{uploadPhoto:handleUploadImage,loading:uploadingPhoto}):/*#__PURE__*/React.createElement(Card.Group,{itemsPerRow:5},profile&&profile.photos.map(function(photo){return/*#__PURE__*/React.createElement(Card,{key:photo.id},/*#__PURE__*/React.createElement(Image,{src:photo.url}),isCurrentUser&&/*#__PURE__*/React.createElement(Button.Group,{fluid:true,widths:2},/*#__PURE__*/React.createElement(Button,{name:photo.id,onClick:function onClick(e){setMainPhoto(photo);setTarget(e.currentTarget.name);},disabled:photo.isMain,loading:loading&&target===photo.id,basic:true,positive:true,content:\"Main\"}),/*#__PURE__*/React.createElement(Button,{name:photo.id,disabled:photo.isMain,onClick:function onClick(e){deletePhoto(photo);setDeleteTarget(e.currentTarget.name);},loading:loading&&deletetarget===photo.id,basic:true,negative:true,icon:\"trash\"})));})))));};export default observer(ProfilePhotos);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/profiles/ProfilePhotos.tsx"],"names":["React","useContext","useState","Tab","Header","Card","Image","Button","Grid","RootStoreContext","PhotoUploadWidget","observer","ProfilePhotos","rootStore","profileStore","profile","isCurrentUser","uploadPhoto","uploadingPhoto","setMainPhoto","loading","deletePhoto","addPhotoMode","setAddPhotoMode","undefined","target","setTarget","deletetarget","setDeleteTarget","handleUploadImage","photo","then","paddingBotttom","photos","map","id","url","e","currentTarget","name","isMain"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Tab, Header, Card, Image, Button, Grid } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport PhotoUploadWidget from \"../../app/common/photoUpload/PhotoUploadWidget\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ProfilePhotos = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    profile,\r\n    isCurrentUser,\r\n    uploadPhoto,\r\n    uploadingPhoto,\r\n    setMainPhoto,\r\n    loading,\r\n    deletePhoto,\r\n  } = rootStore.profileStore;\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(true);\r\n  const [target, setTarget] = useState<undefined | string>(undefined);\r\n  const [deletetarget, setDeleteTarget] = useState<undefined | string>(\r\n    undefined\r\n  );\r\n\r\n  const handleUploadImage = (photo: Blob) => {\r\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\r\n  };\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16} style={{ paddingBotttom: 0 }}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handleUploadImage}\r\n              loading={uploadingPhoto}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile &&\r\n                profile.photos.map((photo) => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url} />\r\n                    {isCurrentUser && (\r\n                      <Button.Group fluid widths={2}>\r\n                        <Button\r\n                          name={photo.id}\r\n                          onClick={(e) => {\r\n                            setMainPhoto(photo);\r\n\r\n                            setTarget(e.currentTarget.name);\r\n                          }}\r\n                          disabled={photo.isMain}\r\n                          loading={loading && target === photo.id}\r\n                          basic\r\n                          positive\r\n                          content=\"Main\"\r\n                        />\r\n                        <Button\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          onClick={(e) => {\r\n                            deletePhoto(photo);\r\n                            setDeleteTarget(e.currentTarget.name)\r\n                          }}\r\n                          loading={loading && deletetarget === photo.id}\r\n                          basic\r\n                          negative\r\n                          icon=\"trash\"\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\nexport default observer(ProfilePhotos);\r\n"]},"metadata":{},"sourceType":"module"}