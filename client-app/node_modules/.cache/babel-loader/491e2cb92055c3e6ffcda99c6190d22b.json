{"ast":null,"code":"import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft, dirtyOptions);\n  var dateRight = toDate(dirtyDateRight, dirtyOptions);\n  var sign = compareAsc(dateLeft, dateRight, dirtyOptions);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight, dirtyOptions));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight, dirtyOptions) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/date-fns/esm/differenceInMonths/index.js"],"names":["toDate","differenceInCalendarMonths","compareAsc","differenceInMonths","dirtyDateLeft","dirtyDateRight","dirtyOptions","arguments","length","TypeError","dateLeft","dateRight","sign","difference","Math","abs","setMonth","getMonth","isLastMonthNotFull","result"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,0BAAP,MAAuC,wCAAvC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,eAAe,SAASC,kBAAT,CAA6BC,aAA7B,EAA4CC,cAA5C,EAA4DC,YAA5D,EAA0E;AACvF,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UAArE,CAAN;AACD;;AAED,MAAIE,QAAQ,GAAGV,MAAM,CAACI,aAAD,EAAgBE,YAAhB,CAArB;AACA,MAAIK,SAAS,GAAGX,MAAM,CAACK,cAAD,EAAiBC,YAAjB,CAAtB;AAEA,MAAIM,IAAI,GAAGV,UAAU,CAACQ,QAAD,EAAWC,SAAX,EAAsBL,YAAtB,CAArB;AACA,MAAIO,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASd,0BAA0B,CAACS,QAAD,EAAWC,SAAX,EAAsBL,YAAtB,CAAnC,CAAjB;AACAI,EAAAA,QAAQ,CAACM,QAAT,CAAkBN,QAAQ,CAACO,QAAT,KAAsBL,IAAI,GAAGC,UAA/C,EAVuF,CAYvF;AACA;;AACA,MAAIK,kBAAkB,GAAGhB,UAAU,CAACQ,QAAD,EAAWC,SAAX,EAAsBL,YAAtB,CAAV,KAAkD,CAACM,IAA5E;AACA,MAAIO,MAAM,GAAGP,IAAI,IAAIC,UAAU,GAAGK,kBAAjB,CAAjB,CAfuF,CAgBvF;;AACA,SAAOC,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;AACD","sourcesContent":["import toDate from '../toDate/index.js'\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js'\nimport compareAsc from '../compareAsc/index.js'\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 7\n */\nexport default function differenceInMonths (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present')\n  }\n\n  var dateLeft = toDate(dirtyDateLeft, dirtyOptions)\n  var dateRight = toDate(dirtyDateRight, dirtyOptions)\n\n  var sign = compareAsc(dateLeft, dateRight, dirtyOptions)\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight, dirtyOptions))\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference)\n\n  // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight, dirtyOptions) === -sign\n  var result = sign * (difference - isLastMonthNotFull)\n  // Prevent negative zero\n  return result === 0 ? 0 : result\n}\n"]},"metadata":{},"sourceType":"module"}