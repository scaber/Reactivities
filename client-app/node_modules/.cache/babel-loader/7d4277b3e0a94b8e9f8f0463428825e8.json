{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose'; //      \n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  return key.split(/[.[\\]]+/).filter(Boolean);\n}; //      \n\n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2; // object set\n\n\n    if (current === undefined || current === null) {\n      var _ref; // recurse\n\n\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error'; //      \n\n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n} //      \n\n\nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited', 'validating']; //      \n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}; //      \n\n\nfunction subscriptionFilter(dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n} //      \n\n\nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n}; //      \n\n\nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited']; //      \n\nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n} //      \n\n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n};\n\nvar version = \"4.18.2\";\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object' && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  if (force === void 0) {\n    force = false;\n  }\n\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n  }\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber;\n      notifySubscriber(subscriber, subscription, state, lastState, filter, force);\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = false;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        var asyncValidationPromiseKey = nextAsyncValidationKey++;\n        var promise = errorsOrPromise.then(setErrors).then(clearAsyncValidationPromise(asyncValidationPromiseKey));\n        promises.push(promise);\n        asyncValidationPromises[asyncValidationPromiseKey] = promise;\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          var asyncValidationPromiseKey = nextAsyncValidationKey++;\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            field.validating = false;\n            setError(error);\n          }) // errors must be resolved, not rejected\n          .then(clearAsyncValidationPromise(asyncValidationPromiseKey));\n          promises.push(promise);\n          asyncValidationPromises[asyncValidationPromiseKey] = promise;\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors();\n\n    if (promises.length) {\n      // sync errors have been set. notify listeners while we wait for others\n      state.formState.validating++;\n      callback();\n\n      var afterPromises = function afterPromises() {\n        state.formState.validating--;\n        processErrors();\n        callback();\n      };\n\n      Promise.all(promises).then(afterPromises, afterPromises);\n    } else {\n      callback();\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners() {\n    if (inBatch || validationPaused) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    Object.keys(safeFields).forEach(function (name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n\n      if (!shallowEqual(fieldState, lastFieldState)) {\n        // **************************************************************\n        // Curious about why a field is getting notified? Uncomment this.\n        // **************************************************************\n        // const diffKeys = Object.keys(fieldState).filter(\n        //   key => fieldState[key] !== (lastFieldState && lastFieldState[key])\n        // )\n        // console.debug(\n        //   'notifying',\n        //   field.name,\n        //   '\\nField State\\n',\n        //   diffKeys.reduce(\n        //     (result, key) => ({ ...result, [key]: fieldState[key] }),\n        //     {}\n        //   ),\n        //   '\\nLast Field State\\n',\n        //   diffKeys.reduce(\n        //     (result, key) => ({\n        //       ...result,\n        //       [key]: lastFieldState && lastFieldState[key]\n        //     }),\n        //     {}\n        //   )\n        // )\n        field.lastFieldState = fieldState;\n        var fieldSubscriber = fieldSubscribers[name];\n\n        if (fieldSubscriber) {\n          notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n        }\n      }\n    });\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && !safeFieldKeys.every(function (key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      return safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key));\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).find(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {});\n  var api = {\n    batch: function batch(fn) {\n      inBatch = true;\n      fn();\n      inBatch = false;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n\n      Object.keys(safeFields).forEach(function (key) {\n        var field = safeFields[key];\n        field.modified = false;\n        field.touched = false;\n        field.visited = false;\n\n        if (keepDirtyOnReinitialize) {\n          var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n          if (pristine) {\n            // only update pristine values\n            formState.values = setIn(formState.values, key, getIn(values, key));\n          }\n        }\n      });\n      formState.initialValues = values;\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      if (fieldConfig) {\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        if (fieldConfig.initialValue !== undefined) {\n          state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n        }\n\n        if (fieldConfig.defaultValue !== undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      var sentFirstNotification = false;\n\n      var firstNotification = function firstNotification() {\n        var fieldState = publishFieldState(state.formState, state.fields[name]);\n        notifySubscriber(subscriber, subscription, fieldState, undefined, filterFieldState, true);\n        state.fields[name].lastFieldState = fieldState;\n        sentFirstNotification = true;\n      };\n\n      runValidation(undefined, function () {\n        notifyFormListeners();\n\n        if (!sentFirstNotification) {\n          firstNotification();\n        }\n\n        notifyFieldListeners();\n      });\n      return function () {\n        // istanbul ignore next\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          delete state.fields[name].validators[index];\n        }\n\n        delete state.fieldSubscribers[name].entries[index];\n\n        if (!Object.keys(state.fieldSubscribers[name].entries).length) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n          state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        throw Error('Cannot reset() in onSubmit(), use setTimeout(form.reset)');\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.reduce(function (result, key) {\n          result.push(asyncValidationPromises[Number(key)]);\n          return result;\n        }, [])).then(api.submit, api.submit);\n        return;\n      }\n\n      var fieldBlockingSubmit = beforeSubmit();\n\n      if (fieldBlockingSubmit) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers,\n          lastFormState = state.lastFormState;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription\n      };\n      var nextFormState = calculateNextFormState();\n\n      if (nextFormState !== lastFormState) {\n        state.lastFormState = nextFormState;\n      }\n\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n} //\n\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/final-form/dist/final-form.es.js"],"names":["_extends","_objectWithoutPropertiesLoose","toPath","key","undefined","length","Error","split","filter","Boolean","getIn","state","complexKey","path","current","i","Array","isArray","isNaN","_toPropertyKey","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","Number","setInRecursor","index","value","destroyArrays","_extends2","_ref","_result2","_result","numKeys","Object","keys","_removed","_final","map","numericKey","_result3","_array","existingValue","result","array","concat","splice","setIn","FORM_ERROR","ARRAY_ERROR","publishFieldState","formState","field","errors","initialValues","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","blur","change","data","focus","modified","name","touched","validating","visited","error","submitError","initial","pristine","isEqual","dirtySinceLastSubmit","valid","dirty","invalid","fieldSubscriptionItems","shallowEqual","a","b","keysA","keysB","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","subscriptionFilter","dest","src","previous","subscription","shallowEqualKeys","different","forEach","indexOf","filterFieldState","previousState","force","formSubscriptionItems","shallowEqualKeys$1","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","then","version","configOptions","tripleEquals","hasAnyError","convertToExternalFormState","hasSubmitErrors","hasValidationErrors","notifySubscriber","subscriber","lastState","notification","notify","_ref2","entries","entry","createForm","config","debug","destroyOnUnregister","keepDirtyOnReinitialize","mutators","onSubmit","validate","validateOnBlur","subscribers","fieldSubscribers","fields","lastFormState","inBatch","validationPaused","validationBlocked","nextAsyncValidationKey","asyncValidationPromises","clearAsyncValidationPromise","changeValue","mutate","before","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","reduce","runRecordLevelValidation","setErrors","promises","errorsOrPromise","asyncValidationPromiseKey","promise","push","getValidators","validators","validator","runFieldLevelValidation","setError","errorOrPromise","fieldChanged","callback","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","validateFields","recordLevelErrors","fieldLevelErrors","processErrors","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromises","Promise","all","fieldState","fieldSubscriber","markAllFieldsTouched","hasSyncErrors","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","every","nonNullLastSubmittedValues","nextFormState","_safeFieldKeys$reduce","callDebug","notifying","scheduleNotification","beforeSubmit","find","afterSubmit","batch","getFieldState","getRegisteredFields","getState","initialize","isValidationPaused","pauseValidation","registerField","fieldConfig","getValidator","initialValue","defaultValue","sentFirstNotification","firstNotification","reset","resumeValidation","setConfig","submit","asyncValidationPromisesKeys","fieldBlockingSubmit","resolvePromise","completeCalled","complete","resolve","subscribe","memoized"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  return key.split(/[.[\\]]+/).filter(Boolean);\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error';\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited', 'validating'];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited'];\n\n//      \nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\nvar version = \"4.18.2\";\n\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object' && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  if (force === void 0) {\n    force = false;\n  }\n\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n  }\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber;\n      notifySubscriber(subscriber, subscription, state, lastState, filter, force);\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = false;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        var asyncValidationPromiseKey = nextAsyncValidationKey++;\n        var promise = errorsOrPromise.then(setErrors).then(clearAsyncValidationPromise(asyncValidationPromiseKey));\n        promises.push(promise);\n        asyncValidationPromises[asyncValidationPromiseKey] = promise;\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          var asyncValidationPromiseKey = nextAsyncValidationKey++;\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            field.validating = false;\n            setError(error);\n          }) // errors must be resolved, not rejected\n          .then(clearAsyncValidationPromise(asyncValidationPromiseKey));\n          promises.push(promise);\n          asyncValidationPromises[asyncValidationPromiseKey] = promise;\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors();\n\n    if (promises.length) {\n      // sync errors have been set. notify listeners while we wait for others\n      state.formState.validating++;\n      callback();\n\n      var afterPromises = function afterPromises() {\n        state.formState.validating--;\n        processErrors();\n        callback();\n      };\n\n      Promise.all(promises).then(afterPromises, afterPromises);\n    } else {\n      callback();\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners() {\n    if (inBatch || validationPaused) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    Object.keys(safeFields).forEach(function (name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n\n      if (!shallowEqual(fieldState, lastFieldState)) {\n        // **************************************************************\n        // Curious about why a field is getting notified? Uncomment this.\n        // **************************************************************\n        // const diffKeys = Object.keys(fieldState).filter(\n        //   key => fieldState[key] !== (lastFieldState && lastFieldState[key])\n        // )\n        // console.debug(\n        //   'notifying',\n        //   field.name,\n        //   '\\nField State\\n',\n        //   diffKeys.reduce(\n        //     (result, key) => ({ ...result, [key]: fieldState[key] }),\n        //     {}\n        //   ),\n        //   '\\nLast Field State\\n',\n        //   diffKeys.reduce(\n        //     (result, key) => ({\n        //       ...result,\n        //       [key]: lastFieldState && lastFieldState[key]\n        //     }),\n        //     {}\n        //   )\n        // )\n        field.lastFieldState = fieldState;\n        var fieldSubscriber = fieldSubscribers[name];\n\n        if (fieldSubscriber) {\n          notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n        }\n      }\n    });\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && !safeFieldKeys.every(function (key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      return safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key));\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).find(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {});\n  var api = {\n    batch: function batch(fn) {\n      inBatch = true;\n      fn();\n      inBatch = false;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n\n      Object.keys(safeFields).forEach(function (key) {\n        var field = safeFields[key];\n        field.modified = false;\n        field.touched = false;\n        field.visited = false;\n\n        if (keepDirtyOnReinitialize) {\n          var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n          if (pristine) {\n            // only update pristine values\n            formState.values = setIn(formState.values, key, getIn(values, key));\n          }\n        }\n      });\n      formState.initialValues = values;\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      if (fieldConfig) {\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        if (fieldConfig.initialValue !== undefined) {\n          state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n        }\n\n        if (fieldConfig.defaultValue !== undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      var sentFirstNotification = false;\n\n      var firstNotification = function firstNotification() {\n        var fieldState = publishFieldState(state.formState, state.fields[name]);\n        notifySubscriber(subscriber, subscription, fieldState, undefined, filterFieldState, true);\n        state.fields[name].lastFieldState = fieldState;\n        sentFirstNotification = true;\n      };\n\n      runValidation(undefined, function () {\n        notifyFormListeners();\n\n        if (!sentFirstNotification) {\n          firstNotification();\n        }\n\n        notifyFieldListeners();\n      });\n      return function () {\n        // istanbul ignore next\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          delete state.fields[name].validators[index];\n        }\n\n        delete state.fieldSubscribers[name].entries[index];\n\n        if (!Object.keys(state.fieldSubscribers[name].entries).length) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n          state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        throw Error('Cannot reset() in onSubmit(), use setTimeout(form.reset)');\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.reduce(function (result, key) {\n          result.push(asyncValidationPromises[Number(key)]);\n          return result;\n        }, [])).then(api.submit, api.submit);\n        return;\n      }\n\n      var fieldBlockingSubmit = beforeSubmit();\n\n      if (fieldBlockingSubmit) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers,\n          lastFormState = state.lastFormState;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription\n      };\n      var nextFormState = calculateNextFormState();\n\n      if (nextFormState !== lastFormState) {\n        state.lastFormState = nextFormState;\n      }\n\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\n//\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };\n"]},"metadata":{},"sourceType":"module"}