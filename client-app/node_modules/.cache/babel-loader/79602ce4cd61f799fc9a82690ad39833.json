{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfileHeader.tsx\";\nimport React from \"react\";\nimport { Segment, Item, Header, Button, Grid, Statistic, Divider, Reveal } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\n\nconst ProfileHeader = ({\n  profile\n}) => {\n  return React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Item.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Item.Image, {\n    avatar: true,\n    size: \"small\",\n    src: profile.image || \"/assets/user.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Item.Content, {\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, profile.display))))), React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Statistic.Group, {\n    widths: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    label: \"Followers\",\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    label: \"Following\",\n    value: \"42\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Reveal, {\n    animated: \"move\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Reveal.Content, {\n    visible: true,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fluid: true,\n    color: \"teal\",\n    content: \"Following\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Reveal.Content, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fluid: true,\n    basic: true,\n    color: true ? \"red\" : \"green\",\n    content: true ? \"Unfollow\" : \"Follow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))))));\n};\n\nexport default observer(ProfileHeader);","map":{"version":3,"sources":["C:\\Projects\\Reactivities\\client-app\\src\\features\\profiles\\ProfileHeader.tsx"],"names":["React","Segment","Item","Header","Button","Grid","Statistic","Divider","Reveal","observer","ProfileHeader","profile","image","display","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,OADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,OAPF,EAQEC,MARF,QASO,mBATP;AAWA,SAASC,QAAT,QAAyB,iBAAzB;;AAKA,MAAMC,aAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACvD,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,MAAM,MADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,GAAG,EAAEA,OAAO,CAACC,KAAR,IAAiB,kBAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,aAAa,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,OAAO,CAACE,OAAzB,CADF,CANF,CADF,CADF,CADF,EAeE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,KAAX;AAAiB,IAAA,MAAM,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,WAAjB;AAA6B,IAAA,KAAK,EAAC,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,WAAjB;AAA6B,IAAA,KAAK,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,OAAO,MAAvB;AAAwB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,KAAK,EAAC,MAApB;AAA2B,IAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,KAAK,EAAE,OAAO,KAAP,GAAe,OAHxB;AAIE,IAAA,OAAO,EAAE,OAAO,UAAP,GAAoB,QAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CANF,CAfF,CADF,CADF;AAwCD,CAzCD;;AA2CA,eAAgBL,QAAQ,CAACC,aAAD,CAAxB","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Statistic,\r\n  Divider,\r\n  Reveal,\r\n} from \"semantic-ui-react\";\r\nimport { IProfile } from \"../../app/models/profile\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n}\r\nconst ProfileHeader: React.FC<IProps> = ({ profile }) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\">{profile.display}</Header>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value=\"5\" />\r\n            <Statistic label=\"Following\" value=\"42\" />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <Reveal animated=\"move\">\r\n            <Reveal.Content visible style={{ width: \"100%\" }}>\r\n              <Button fluid color=\"teal\" content=\"Following\" />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden>\r\n              <Button\r\n                fluid\r\n                basic\r\n                color={true ? \"red\" : \"green\"}\r\n                content={true ? \"Unfollow\" : \"Follow\"}\r\n              />\r\n            </Reveal.Content>\r\n          </Reveal>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default  observer(ProfileHeader);\r\n"]},"metadata":{},"sourceType":"module"}