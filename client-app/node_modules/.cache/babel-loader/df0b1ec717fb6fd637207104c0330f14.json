{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfilePhotos.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { Tab, Header, Card, Image, Button, Grid } from \"semantic-ui-react\";\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\nimport PhotoUploadWidget from \"../../app/common/photoUpload/PhotoUploadWidget\";\nimport { observer } from \"mobx-react-lite\";\n\nconst ProfilePhotos = () => {\n  const rootStore = useContext(RootStoreContext);\n  const _rootStore$profileSto = rootStore.profileStore,\n        profile = _rootStore$profileSto.profile,\n        isCurrentUser = _rootStore$profileSto.isCurrentUser,\n        uploadPhoto = _rootStore$profileSto.uploadPhoto,\n        uploadingPhoto = _rootStore$profileSto.uploadingPhoto,\n        setMainPhoto = _rootStore$profileSto.setMainPhoto,\n        loading = _rootStore$profileSto.loading,\n        deletePhoto = _rootStore$profileSto.deletePhoto;\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        addPhotoMode = _useState2[0],\n        setAddPhotoMode = _useState2[1];\n\n  const _useState3 = useState(undefined),\n        _useState4 = _slicedToArray(_useState3, 2),\n        target = _useState4[0],\n        setTarget = _useState4[1];\n\n  const _useState5 = useState(undefined),\n        _useState6 = _slicedToArray(_useState5, 2),\n        deletetarget = _useState6[0],\n        setDeleteTarget = _useState6[1];\n\n  const handleUploadImage = photo => {\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\n  };\n\n  return React.createElement(Tab.Pane, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 16,\n    style: {\n      paddingBotttom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Header, {\n    floated: \"left\",\n    icon: \"image\",\n    content: \"Photos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), isCurrentUser && React.createElement(Button, {\n    floated: \"right\",\n    basic: true,\n    content: addPhotoMode ? \"cancel\" : \"Add Photo\",\n    onClick: () => setAddPhotoMode(!addPhotoMode),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, addPhotoMode ? React.createElement(PhotoUploadWidget, {\n    uploadPhoto: handleUploadImage,\n    loading: uploadingPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }) : React.createElement(Card.Group, {\n    itemsPerRow: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, profile && profile.photos.map(photo => React.createElement(Card, {\n    key: photo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: photo.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), isCurrentUser && React.createElement(Button.Group, {\n    fluid: true,\n    widths: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    name: photo.id,\n    onClick: e => {\n      setMainPhoto(photo);\n      setTarget(e.currentTarget.name);\n    },\n    disabled: photo.isMain,\n    loading: loading && target === photo.id,\n    basic: true,\n    positive: true,\n    content: \"Main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: photo.id,\n    disabled: photo.isMain,\n    basic: true,\n    negative: true,\n    icon: \"trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))))))));\n};\n\nexport default observer(ProfilePhotos);","map":{"version":3,"sources":["C:\\Projects\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePhotos.tsx"],"names":["React","useContext","useState","Tab","Header","Card","Image","Button","Grid","RootStoreContext","PhotoUploadWidget","observer","ProfilePhotos","rootStore","profileStore","profile","isCurrentUser","uploadPhoto","uploadingPhoto","setMainPhoto","loading","deletePhoto","addPhotoMode","setAddPhotoMode","undefined","target","setTarget","deletetarget","setDeleteTarget","handleUploadImage","photo","then","paddingBotttom","photos","map","id","url","e","currentTarget","name","isMain"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Tab, Header, Card, Image, Button, Grid } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport PhotoUploadWidget from \"../../app/common/photoUpload/PhotoUploadWidget\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ProfilePhotos = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    profile,\r\n    isCurrentUser,\r\n    uploadPhoto,\r\n    uploadingPhoto,\r\n    setMainPhoto,\r\n    loading,\r\n    deletePhoto,\r\n  } = rootStore.profileStore;\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(true);\r\n  const [target, setTarget] = useState<undefined | string>(undefined);\r\n  const [deletetarget, setDeleteTarget] = useState<undefined | string>(\r\n    undefined\r\n  );\r\n\r\n  const handleUploadImage = (photo: Blob) => {\r\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\r\n  };\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16} style={{ paddingBotttom: 0 }}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handleUploadImage}\r\n              loading={uploadingPhoto}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile &&\r\n                profile.photos.map((photo) => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url} />\r\n                    {isCurrentUser && (\r\n                      <Button.Group fluid widths={2}>\r\n                        <Button\r\n                          name={photo.id}\r\n                          onClick={(e) => {\r\n                            setMainPhoto(photo);\r\n\r\n                            setTarget(e.currentTarget.name);\r\n                          }}\r\n                          disabled={photo.isMain}\r\n                          loading={loading && target === photo.id}\r\n                          basic\r\n                          positive\r\n                          content=\"Main\"\r\n                        />\r\n                        <Button\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          basic\r\n                          negative\r\n                          icon=\"trash\"\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\nexport default observer(ProfilePhotos);\r\n"]},"metadata":{},"sourceType":"module"}