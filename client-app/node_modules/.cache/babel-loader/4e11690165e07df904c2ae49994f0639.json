{"ast":null,"code":"import React from\"react\";import{Segment,Item,Header,Button,Grid,Statistic,Divider,Reveal}from\"semantic-ui-react\";import{observer}from\"mobx-react-lite\";var ProfileHeader=function ProfileHeader(_ref){var profile=_ref.profile;return/*#__PURE__*/React.createElement(Segment,null,/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:12},/*#__PURE__*/React.createElement(Item.Group,null,/*#__PURE__*/React.createElement(Item,null,/*#__PURE__*/React.createElement(Item.Image,{avatar:true,size:\"small\",src:profile.image||\"/assets/user.png\"}),/*#__PURE__*/React.createElement(Item.Content,{verticalAlign:\"middle\"},/*#__PURE__*/React.createElement(Header,{as:\"h1\"},profile.display))))),/*#__PURE__*/React.createElement(Grid.Column,{width:4},/*#__PURE__*/React.createElement(Statistic.Group,{widths:2},/*#__PURE__*/React.createElement(Statistic,{label:\"Followers\",value:\"5\"}),/*#__PURE__*/React.createElement(Statistic,{label:\"Following\",value:\"42\"})),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Reveal,{animated:\"move\"},/*#__PURE__*/React.createElement(Reveal.Content,{visible:true,style:{width:\"100%\"}},/*#__PURE__*/React.createElement(Button,{fluid:true,color:\"teal\",content:\"Following\"})),/*#__PURE__*/React.createElement(Reveal.Content,{hidden:true},/*#__PURE__*/React.createElement(Button,{fluid:true,basic:true,color:true?\"red\":\"green\",content:true?\"Unfollow\":\"Follow\"}))))));};export default observer(ProfileHeader);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/profiles/ProfileHeader.tsx"],"names":["React","Segment","Item","Header","Button","Grid","Statistic","Divider","Reveal","observer","ProfileHeader","profile","image","display","width"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,OADF,CAEEC,IAFF,CAGEC,MAHF,CAIEC,MAJF,CAKEC,IALF,CAMEC,SANF,CAOEC,OAPF,CAQEC,MARF,KASO,mBATP,CAWA,OAASC,QAAT,KAAyB,iBAAzB,CAKA,GAAMC,CAAAA,aAA+B,CAAG,QAAlCA,CAAAA,aAAkC,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACvD,mBACE,oBAAC,OAAD,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,EAApB,eACE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,KAAN,EACE,MAAM,KADR,CAEE,IAAI,CAAC,OAFP,CAGE,GAAG,CAAEA,OAAO,CAACC,KAAR,EAAiB,kBAHxB,EADF,cAME,oBAAC,IAAD,CAAM,OAAN,EAAc,aAAa,CAAC,QAA5B,eACE,oBAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,EAAiBD,OAAO,CAACE,OAAzB,CADF,CANF,CADF,CADF,CADF,cAeE,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAApB,eACE,oBAAC,SAAD,CAAW,KAAX,EAAiB,MAAM,CAAE,CAAzB,eACE,oBAAC,SAAD,EAAW,KAAK,CAAC,WAAjB,CAA6B,KAAK,CAAC,GAAnC,EADF,cAEE,oBAAC,SAAD,EAAW,KAAK,CAAC,WAAjB,CAA6B,KAAK,CAAC,IAAnC,EAFF,CADF,cAKE,oBAAC,OAAD,MALF,cAME,oBAAC,MAAD,EAAQ,QAAQ,CAAC,MAAjB,eACE,oBAAC,MAAD,CAAQ,OAAR,EAAgB,OAAO,KAAvB,CAAwB,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAT,CAA/B,eACE,oBAAC,MAAD,EAAQ,KAAK,KAAb,CAAc,KAAK,CAAC,MAApB,CAA2B,OAAO,CAAC,WAAnC,EADF,CADF,cAIE,oBAAC,MAAD,CAAQ,OAAR,EAAgB,MAAM,KAAtB,eACE,oBAAC,MAAD,EACE,KAAK,KADP,CAEE,KAAK,KAFP,CAGE,KAAK,CAAE,KAAO,KAAP,CAAe,OAHxB,CAIE,OAAO,CAAE,KAAO,UAAP,CAAoB,QAJ/B,EADF,CAJF,CANF,CAfF,CADF,CADF,CAwCD,CAzCD,CA2CA,cAAgBL,CAAAA,QAAQ,CAACC,aAAD,CAAxB","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Statistic,\r\n  Divider,\r\n  Reveal,\r\n} from \"semantic-ui-react\";\r\nimport { IProfile } from \"../../app/models/profile\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n}\r\nconst ProfileHeader: React.FC<IProps> = ({ profile }) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\">{profile.display}</Header>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value=\"5\" />\r\n            <Statistic label=\"Following\" value=\"42\" />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <Reveal animated=\"move\">\r\n            <Reveal.Content visible style={{ width: \"100%\" }}>\r\n              <Button fluid color=\"teal\" content=\"Following\" />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden>\r\n              <Button\r\n                fluid\r\n                basic\r\n                color={true ? \"red\" : \"green\"}\r\n                content={true ? \"Unfollow\" : \"Follow\"}\r\n              />\r\n            </Reveal.Content>\r\n          </Reveal>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default  observer(ProfileHeader);\r\n"]},"metadata":{},"sourceType":"module"}