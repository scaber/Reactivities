{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n\nfunction SearchCategory(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      renderer = props.renderer;\n  var classes = cx(useKeyOnly(active, 'active'), 'category', className);\n  var rest = getUnhandledProps(SearchCategory, props);\n  var ElementType = getElementType(SearchCategory, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), React.createElement(\"div\", {\n    className: \"name\"\n  }, renderer(props)), React.createElement(\"div\", {\n    className: \"results\"\n  }, childrenUtils.isNil(children) ? content : children));\n}\n\nSearchCategory.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"name\", \"renderer\", \"results\"];\nSearchCategory.defaultProps = {\n  renderer: function renderer(_ref) {\n    var name = _ref.name;\n    return name;\n  }\n};\nSearchCategory.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** The item currently selected by keyboard shortcut. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Display name. */\n  name: PropTypes.string,\n\n  /**\n   * Renders the category contents.\n   *\n   * @param {object} props - The SearchCategory props object.\n   * @returns {*} - Renderable category contents.\n   */\n  renderer: PropTypes.func,\n\n  /** Array of Search.Result props. */\n  results: PropTypes.array\n} : {};\nexport default SearchCategory;","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/semantic-ui-react/dist/es/modules/Search/SearchCategory.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","useKeyOnly","SearchCategory","props","active","children","className","content","renderer","classes","rest","ElementType","createElement","isNil","handledProps","defaultProps","_ref","name","propTypes","process","env","NODE_ENV","as","bool","node","string","contentShorthand","func","results","array"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,UAA5E,QAA8F,WAA9F;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAAA,MAEIC,SAAS,GAAGH,KAAK,CAACG,SAFtB;AAAA,MAGIC,OAAO,GAAGJ,KAAK,CAACI,OAHpB;AAAA,MAIIC,QAAQ,GAAGL,KAAK,CAACK,QAJrB;AAKA,MAAIC,OAAO,GAAGf,EAAE,CAACO,UAAU,CAACG,MAAD,EAAS,QAAT,CAAX,EAA+B,UAA/B,EAA2CE,SAA3C,CAAhB;AACA,MAAII,IAAI,GAAGV,iBAAiB,CAACE,cAAD,EAAiBC,KAAjB,CAA5B;AACA,MAAIQ,WAAW,GAAGZ,cAAc,CAACG,cAAD,EAAiBC,KAAjB,CAAhC;AACA,SAAOP,KAAK,CAACgB,aAAN,CAAoBD,WAApB,EAAiClB,QAAQ,CAAC,EAAD,EAAKiB,IAAL,EAAW;AACzDJ,IAAAA,SAAS,EAAEG;AAD8C,GAAX,CAAzC,EAEHb,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AAC7BN,IAAAA,SAAS,EAAE;AADkB,GAA3B,EAEDE,QAAQ,CAACL,KAAD,CAFP,CAFG,EAIcP,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AAC9CN,IAAAA,SAAS,EAAE;AADmC,GAA3B,EAElBT,aAAa,CAACgB,KAAd,CAAoBR,QAApB,IAAgCE,OAAhC,GAA0CF,QAFxB,CAJd,CAAP;AAOD;;AAEDH,cAAc,CAACY,YAAf,GAA8B,CAAC,QAAD,EAAW,IAAX,EAAiB,UAAjB,EAA6B,WAA7B,EAA0C,SAA1C,EAAqD,MAArD,EAA6D,UAA7D,EAAyE,SAAzE,CAA9B;AACAZ,cAAc,CAACa,YAAf,GAA8B;AAC5BP,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBQ,IAAlB,EAAwB;AAChC,QAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AACA,WAAOA,IAAP;AACD;AAJ2B,CAA9B;AAMAf,cAAc,CAACgB,SAAf,GAA2BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACjE;AACAC,EAAAA,EAAE,EAAExB,eAAe,CAACwB,EAF6C;;AAIjE;AACAlB,EAAAA,MAAM,EAAET,SAAS,CAAC4B,IAL+C;;AAOjE;AACAlB,EAAAA,QAAQ,EAAEV,SAAS,CAAC6B,IAR6C;;AAUjE;AACAlB,EAAAA,SAAS,EAAEX,SAAS,CAAC8B,MAX4C;;AAajE;AACAlB,EAAAA,OAAO,EAAET,eAAe,CAAC4B,gBAdwC;;AAgBjE;AACAT,EAAAA,IAAI,EAAEtB,SAAS,CAAC8B,MAjBiD;;AAmBjE;;;;;;AAMAjB,EAAAA,QAAQ,EAAEb,SAAS,CAACgC,IAzB6C;;AA2BjE;AACAC,EAAAA,OAAO,EAAEjC,SAAS,CAACkC;AA5B8C,CAAxC,GA6BvB,EA7BJ;AA8BA,eAAe3B,cAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n\nfunction SearchCategory(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      renderer = props.renderer;\n  var classes = cx(useKeyOnly(active, 'active'), 'category', className);\n  var rest = getUnhandledProps(SearchCategory, props);\n  var ElementType = getElementType(SearchCategory, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), React.createElement(\"div\", {\n    className: \"name\"\n  }, renderer(props)), React.createElement(\"div\", {\n    className: \"results\"\n  }, childrenUtils.isNil(children) ? content : children));\n}\n\nSearchCategory.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"name\", \"renderer\", \"results\"];\nSearchCategory.defaultProps = {\n  renderer: function renderer(_ref) {\n    var name = _ref.name;\n    return name;\n  }\n};\nSearchCategory.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** The item currently selected by keyboard shortcut. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Display name. */\n  name: PropTypes.string,\n\n  /**\n   * Renders the category contents.\n   *\n   * @param {object} props - The SearchCategory props object.\n   * @returns {*} - Renderable category contents.\n   */\n  renderer: PropTypes.func,\n\n  /** Array of Search.Result props. */\n  results: PropTypes.array\n} : {};\nexport default SearchCategory;"]},"metadata":{},"sourceType":"module"}