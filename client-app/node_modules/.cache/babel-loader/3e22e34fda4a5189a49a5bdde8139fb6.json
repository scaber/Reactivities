{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _uncontrollable = _interopRequireDefault(require(\"uncontrollable\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _reactComponentManagers = require(\"react-component-managers\");\n\nvar _Widget = _interopRequireDefault(require(\"./Widget\"));\n\nvar _Header = _interopRequireDefault(require(\"./Header\"));\n\nvar _Footer = _interopRequireDefault(require(\"./Footer\"));\n\nvar _Month = _interopRequireDefault(require(\"./Month\"));\n\nvar _Year = _interopRequireDefault(require(\"./Year\"));\n\nvar _Decade = _interopRequireDefault(require(\"./Decade\"));\n\nvar _Century = _interopRequireDefault(require(\"./Century\"));\n\nvar _messages = require(\"./messages\");\n\nvar _SlideTransitionGroup = _interopRequireDefault(require(\"./SlideTransitionGroup\"));\n\nvar _focusManager = _interopRequireDefault(require(\"./util/focusManager\"));\n\nvar _localizers = require(\"./util/localizers\");\n\nvar CustomPropTypes = _interopRequireWildcard(require(\"./util/PropTypes\"));\n\nvar Props = _interopRequireWildcard(require(\"./util/Props\"));\n\nvar _dates = _interopRequireDefault(require(\"./util/dates\"));\n\nvar _widgetHelpers = require(\"./util/widgetHelpers\");\n\nvar _interaction = require(\"./util/interaction\");\n\nvar _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _class3, _temp;\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nfunction _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.');\n}\n\nvar last = function last(a) {\n  return a[a.length - 1];\n};\n\nvar VIEW_UNIT = {\n  month: 'day',\n  year: 'month',\n  decade: 'year',\n  century: 'decade'\n};\nvar VIEW_OPTIONS = ['month', 'year', 'decade', 'century'];\nvar VIEW = {\n  month: _Month.default,\n  year: _Year.default,\n  decade: _Decade.default,\n  century: _Century.default\n};\nvar ARROWS_TO_DIRECTION = {\n  ArrowDown: 'DOWN',\n  ArrowUp: 'UP',\n  ArrowRight: 'RIGHT',\n  ArrowLeft: 'LEFT'\n};\nvar OPPOSITE_DIRECTION = {\n  LEFT: 'RIGHT',\n  RIGHT: 'LEFT'\n};\nvar MULTIPLIER = {\n  year: 1,\n  decade: 10,\n  century: 100\n};\n\nfunction inRangeValue(_value, min, max) {\n  var value = dateOrNull(_value);\n  if (value === null) return value;\n  return _dates.default.max(_dates.default.min(value, max), min);\n}\n\nvar propTypes = {\n  /** @ignore */\n  activeId: _propTypes.default.string,\n\n  /**\n   * @example ['disabled', ['new Date()']]\n   */\n  disabled: CustomPropTypes.disabled,\n\n  /**\n   * @example ['readOnly', ['new Date()']]\n   */\n  readOnly: CustomPropTypes.disabled,\n\n  /**\n   * @example ['onChangePicker', [ ['new Date()'] ]]\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * @example ['valuePicker', [ ['new Date()'] ]]\n   */\n  value: _propTypes.default.instanceOf(Date),\n\n  /**\n   * The minimum date that the Calendar can navigate from.\n   *\n   * @example ['prop', ['min', 'new Date()']]\n   */\n  min: _propTypes.default.instanceOf(Date).isRequired,\n\n  /**\n   * The maximum date that the Calendar can navigate to.\n   *\n   * @example ['prop', ['max', 'new Date()']]\n   */\n  max: _propTypes.default.instanceOf(Date).isRequired,\n\n  /**\n   * Default current date at which the calendar opens. If none is provided, opens at today's date or the `value` date (if any).\n   */\n  currentDate: _propTypes.default.instanceOf(Date),\n\n  /**\n   * Change event Handler that is called when the currentDate is changed. The handler is called with the currentDate object.\n   */\n  onCurrentDateChange: _propTypes.default.func,\n\n  /** Specify the navigate into the past header icon */\n  navigatePrevIcon: _propTypes.default.node,\n\n  /** Specify the navigate into the future header icon */\n  navigateNextIcon: _propTypes.default.node,\n\n  /**\n   * Controls the currently displayed calendar view. Use `defaultView` to set a unique starting view.\n   *\n   * @type {(\"month\"|\"year\"|\"decade\"|\"century\")}\n   * @controllable onViewChange\n   */\n  view: function view(props) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return _propTypes.default.oneOf(props.views || VIEW_OPTIONS).apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Defines a list of views the Calendar can traverse through, starting with the\n   * first in the list to the last.\n   *\n   * @type array<\"month\"|\"year\"|\"decade\"|\"century\">\n   */\n  views: _propTypes.default.arrayOf(_propTypes.default.oneOf(VIEW_OPTIONS)).isRequired,\n\n  /**\n   * A callback fired when the `view` changes.\n   *\n   * @controllable view\n   */\n  onViewChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the Calendar navigates between views, or forward and backwards in time.\n   *\n   * @type function(date: ?Date, direction: string, view: string)\n   */\n  onNavigate: _propTypes.default.func,\n  culture: _propTypes.default.string,\n  autoFocus: _propTypes.default.bool,\n\n  /**\n   * Show or hide the Calendar footer.\n   *\n   * @example ['prop', ['footer', true]]\n   */\n  footer: _propTypes.default.bool,\n\n  /**\n   * Provide a custom component to render the days of the month. The Component is provided the following props\n   *\n   * - `date`: a `Date` object for the day of the month to render\n   * - `label`: a formatted `string` of the date to render. To adjust the format of the `label` string use the `dateFormat` prop, listed below.\n   */\n  dayComponent: CustomPropTypes.elementType,\n\n  /**\n   * A formatter for the header button of the month view.\n   *\n   * @example ['dateFormat', ['headerFormat', \"{ date: 'medium' }\"]]\n   */\n  headerFormat: CustomPropTypes.dateFormat,\n\n  /**\n   * A formatter for the Calendar footer, formats today's Date as a string.\n   *\n   * @example ['dateFormat', ['footerFormat', \"{ date: 'medium' }\", \"date => 'Today is: ' + formatter(date)\"]]\n   */\n  footerFormat: CustomPropTypes.dateFormat,\n\n  /**\n   * A formatter calendar days of the week, the default formats each day as a Narrow name: \"Mo\", \"Tu\", etc.\n   *\n   * @example ['prop', { dayFormat: \"day => \\n['ðŸŽ‰', 'M', 'T','W','Th', 'F', 'ðŸŽ‰'][day.getDay()]\" }]\n   */\n  dayFormat: CustomPropTypes.dateFormat,\n\n  /**\n   * A formatter for day of the month\n   *\n   * @example ['prop', { dateFormat: \"dt => String(dt.getDate())\" }]\n   */\n  dateFormat: CustomPropTypes.dateFormat,\n\n  /**\n   * A formatter for month name.\n   *\n   * @example ['dateFormat', ['monthFormat', \"{ raw: 'MMMM' }\", null, { defaultView: '\"year\"' }]]\n   */\n  monthFormat: CustomPropTypes.dateFormat,\n\n  /**\n   * A formatter for month name.\n   *\n   * @example ['dateFormat', ['yearFormat', \"{ raw: 'yy' }\", null, { defaultView: '\"decade\"' }]]\n   */\n  yearFormat: CustomPropTypes.dateFormat,\n\n  /**\n   * A formatter for decade, the default formats the first and last year of the decade like: 2000 - 2009.\n   */\n  decadeFormat: CustomPropTypes.dateFormat,\n\n  /**\n   * A formatter for century, the default formats the first and last year of the century like: 1900 - 1999.\n   */\n  centuryFormat: CustomPropTypes.dateFormat,\n  isRtl: _propTypes.default.bool,\n  messages: _propTypes.default.shape({\n    moveBack: _propTypes.default.string,\n    moveForward: _propTypes.default.string\n  }),\n  onKeyDown: _propTypes.default.func,\n\n  /** @ignore */\n  tabIndex: _propTypes.default.any\n  /**\n   * ---\n   * localized: true\n   * shortcuts:\n   *   - { key: ctrl + down arrow, label: navigate to next view }\n   *   - { key: ctrl + up arrow, label: navigate to previous view }\n   *   - { key: ctrl + left arrow, label: \"navigate to previous: month, year, decade, or century\" }\n   *   - { key: ctrl + right arrow, label: \"navigate to next: month, year, decade, or century\" }\n   *   - { key: left arrow, label:  move focus to previous date}\n   *   - { key: right arrow, label: move focus to next date }\n   *   - { key: up arrow, label: move focus up within view }\n   *   - { key: down key, label: move focus down within view }\n   * ---\n   *\n   * @public\n   */\n\n};\n\nvar Calendar = (0, _reactLifecyclesCompat.polyfill)(_class = (_class2 = (_temp = _class3 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Calendar, _React$Component);\n\n  Calendar.move = function move(date, min, max, unit, direction) {\n    var isMonth = unit === 'month';\n    var isUpOrDown = direction === 'UP' || direction === 'DOWN';\n    var rangeUnit = VIEW_UNIT[unit];\n    var addUnit = isMonth && isUpOrDown ? 'week' : VIEW_UNIT[unit];\n    var amount = isMonth || !isUpOrDown ? 1 : 4;\n    var newDate;\n    if (direction === 'UP' || direction === 'LEFT') amount *= -1;\n    newDate = _dates.default.add(date, amount, addUnit);\n    return _dates.default.inRange(newDate, min, max, rangeUnit) ? newDate : date;\n  };\n\n  function Calendar() {\n    var _this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleFocusWillChange = function () {\n      if (_this.props.tabIndex == -1) return false;\n    };\n\n    _initializerDefineProperty(_this, \"handleViewChange\", _descriptor, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"handleMoveBack\", _descriptor2, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"handleMoveForward\", _descriptor3, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"handleChange\", _descriptor4, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"handleFooterClick\", _descriptor5, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"handleKeyDown\", _descriptor6, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.viewId = (0, _widgetHelpers.instanceId)(_assertThisInitialized(_assertThisInitialized(_this)), '_calendar');\n    _this.labelId = (0, _widgetHelpers.instanceId)(_assertThisInitialized(_assertThisInitialized(_this)), '_calendar_label');\n    _this.activeId = _this.props.activeId || (0, _widgetHelpers.instanceId)(_assertThisInitialized(_assertThisInitialized(_this)), '_calendar_active_cell');\n    (0, _reactComponentManagers.autoFocus)(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.focusManager = (0, _focusManager.default)(_assertThisInitialized(_assertThisInitialized(_this)), {\n      willHandle: _this.handleFocusWillChange\n    });\n    var _this$props = _this.props,\n        view = _this$props.view,\n        views = _this$props.views;\n    _this.state = {\n      selectedIndex: 0,\n      view: view || views[0]\n    };\n    return _this;\n  }\n\n  Calendar.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var messages = _ref.messages,\n        view = _ref.view,\n        views = _ref.views,\n        value = _ref.value,\n        currentDate = _ref.currentDate;\n    view = view || views[0];\n    var slideDirection = prevState.slideDirection,\n        lastView = prevState.view,\n        lastDate = prevState.currentDate;\n\n    if (lastView !== view) {\n      slideDirection = views.indexOf(lastView) > views.indexOf(view) ? 'top' : 'bottom';\n    } else if (lastDate !== currentDate) {\n      slideDirection = _dates.default.gt(currentDate, lastDate) ? 'left' : 'right';\n    }\n\n    return {\n      view: view,\n      slideDirection: slideDirection,\n      messages: (0, _messages.getMessages)(messages),\n      currentDate: currentDate || value || new Date()\n    };\n  };\n\n  var _proto = Calendar.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props2 = this.props,\n        value = _this$props2.value,\n        min = _this$props2.min,\n        max = _this$props2.max;\n    var view = this.state.view;\n    value = inRangeValue(value, min, max);\n    if (!_dates.default.eq(value, dateOrNull(prevProps.value), VIEW_UNIT[view])) this.maybeSetCurrentDate(value);\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        className = _this$props3.className,\n        value = _this$props3.value,\n        footerFormat = _this$props3.footerFormat,\n        disabled = _this$props3.disabled,\n        readOnly = _this$props3.readOnly,\n        footer = _this$props3.footer,\n        views = _this$props3.views,\n        min = _this$props3.min,\n        max = _this$props3.max,\n        culture = _this$props3.culture,\n        tabIndex = _this$props3.tabIndex;\n    var _this$state = this.state,\n        currentDate = _this$state.currentDate,\n        view = _this$state.view,\n        slideDirection = _this$state.slideDirection,\n        focused = _this$state.focused,\n        messages = _this$state.messages;\n    var View = VIEW[view],\n        todaysDate = new Date(),\n        todayNotInRange = !_dates.default.inRange(todaysDate, min, max, view);\n\n    var key = view + '_' + _dates.default[view](currentDate);\n\n    var elementProps = Props.pickElementProps(this),\n        viewProps = Props.pick(this.props, View);\n    var isDisabled = disabled || readOnly;\n    return _react.default.createElement(_Widget.default, _extends({}, elementProps, {\n      role: \"group\",\n      focused: focused,\n      disabled: disabled,\n      readOnly: readOnly,\n      tabIndex: tabIndex || 0,\n      onKeyDown: this.handleKeyDown,\n      onBlur: this.focusManager.handleBlur,\n      onFocus: this.focusManager.handleFocus,\n      className: (0, _classnames.default)(className, 'rw-calendar rw-widget-container'),\n      \"aria-activedescendant\": this.activeId\n    }), _react.default.createElement(_Header.default, {\n      isRtl: this.isRtl(),\n      label: this.getHeaderLabel(),\n      labelId: this.labelId,\n      messages: messages,\n      upDisabled: isDisabled || view === last(views),\n      prevDisabled: isDisabled || !_dates.default.inRange(this.nextDate('LEFT'), min, max, view),\n      nextDisabled: isDisabled || !_dates.default.inRange(this.nextDate('RIGHT'), min, max, view),\n      onViewChange: this.handleViewChange,\n      onMoveLeft: this.handleMoveBack,\n      onMoveRight: this.handleMoveForward\n    }), _react.default.createElement(Calendar.Transition, {\n      direction: slideDirection\n    }, _react.default.createElement(View, _extends({}, viewProps, {\n      key: key,\n      id: this.viewId,\n      activeId: this.activeId,\n      value: value,\n      today: todaysDate,\n      disabled: disabled,\n      focused: currentDate,\n      onChange: this.handleChange,\n      onKeyDown: this.handleKeyDown,\n      \"aria-labelledby\": this.labelId\n    }))), footer && _react.default.createElement(_Footer.default, {\n      value: todaysDate,\n      format: footerFormat,\n      culture: culture,\n      disabled: disabled || todayNotInRange,\n      readOnly: readOnly,\n      onClick: this.handleFooterClick\n    }));\n  };\n\n  _proto.navigate = function navigate(direction, date) {\n    var _this$props4 = this.props,\n        views = _this$props4.views,\n        min = _this$props4.min,\n        max = _this$props4.max,\n        onNavigate = _this$props4.onNavigate,\n        onViewChange = _this$props4.onViewChange;\n    var _this$state2 = this.state,\n        view = _this$state2.view,\n        currentDate = _this$state2.currentDate;\n    var slideDir = direction === 'LEFT' || direction === 'UP' ? 'right' : 'left';\n    if (direction === 'UP') view = views[views.indexOf(view) + 1] || view;\n    if (direction === 'DOWN') view = views[views.indexOf(view) - 1] || view;\n    if (!date) date = ['LEFT', 'RIGHT'].indexOf(direction) !== -1 ? this.nextDate(direction) : currentDate;\n\n    if (_dates.default.inRange(date, min, max, view)) {\n      (0, _widgetHelpers.notify)(onNavigate, [date, slideDir, view]);\n      this.focus(true);\n      this.maybeSetCurrentDate(date);\n      (0, _widgetHelpers.notify)(onViewChange, [view]);\n    }\n  };\n\n  _proto.focus = function focus() {\n    if (+this.props.tabIndex > -1) (0, _reactDom.findDOMNode)(this).focus();\n  };\n\n  _proto.maybeSetCurrentDate = function maybeSetCurrentDate(date) {\n    var _this$props5 = this.props,\n        min = _this$props5.min,\n        max = _this$props5.max;\n    var _this$state3 = this.state,\n        view = _this$state3.view,\n        currentDate = _this$state3.currentDate;\n    var inRangeDate = inRangeValue(date ? new Date(date) : currentDate, min, max);\n    if (date === currentDate || _dates.default.eq(inRangeDate, dateOrNull(currentDate), VIEW_UNIT[view])) return;\n    (0, _widgetHelpers.notify)(this.props.onCurrentDateChange, inRangeDate);\n  };\n\n  _proto.nextDate = function nextDate(direction) {\n    var method = direction === 'LEFT' ? 'subtract' : 'add';\n    var _this$state4 = this.state,\n        currentDate = _this$state4.currentDate,\n        view = _this$state4.view;\n    var unit = view === 'month' ? view : 'year';\n    var multi = MULTIPLIER[view] || 1;\n    return _dates.default[method](currentDate, 1 * multi, unit);\n  };\n\n  _proto.getHeaderLabel = function getHeaderLabel() {\n    var _this$props6 = this.props,\n        culture = _this$props6.culture,\n        decadeFormat = _this$props6.decadeFormat,\n        yearFormat = _this$props6.yearFormat,\n        headerFormat = _this$props6.headerFormat,\n        centuryFormat = _this$props6.centuryFormat;\n    var _this$state5 = this.state,\n        currentDate = _this$state5.currentDate,\n        view = _this$state5.view;\n\n    switch (view) {\n      case 'month':\n        headerFormat = _localizers.date.getFormat('header', headerFormat);\n        return _localizers.date.format(currentDate, headerFormat, culture);\n\n      case 'year':\n        yearFormat = _localizers.date.getFormat('year', yearFormat);\n        return _localizers.date.format(currentDate, yearFormat, culture);\n\n      case 'decade':\n        decadeFormat = _localizers.date.getFormat('decade', decadeFormat);\n        return _localizers.date.format(_dates.default.startOf(currentDate, 'decade'), decadeFormat, culture);\n\n      case 'century':\n        centuryFormat = _localizers.date.getFormat('century', centuryFormat);\n        return _localizers.date.format(_dates.default.startOf(currentDate, 'century'), centuryFormat, culture);\n    }\n  };\n\n  _proto.isRtl = function isRtl() {\n    return !!(this.props.isRtl || this.context && this.context.isRtl);\n  };\n\n  _proto.isValidView = function isValidView(next, views) {\n    if (views === void 0) {\n      views = this.props.views;\n    }\n\n    return views.indexOf(next) !== -1;\n  };\n\n  return Calendar;\n}(_react.default.Component), _class3.displayName = 'Calendar', _class3.propTypes = propTypes, _class3.defaultProps = {\n  value: null,\n  min: new Date(1900, 0, 1),\n  max: new Date(2099, 11, 31),\n  views: VIEW_OPTIONS,\n  tabIndex: '0',\n  footer: true\n}, _class3.contextTypes = {\n  isRtl: _propTypes.default.bool\n}, _class3.Transition = _SlideTransitionGroup.default, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"handleViewChange\", [_interaction.widgetEditable], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function () {\n      _this2.navigate('UP');\n    };\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"handleMoveBack\", [_interaction.widgetEditable], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function () {\n      _this3.navigate('LEFT');\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"handleMoveForward\", [_interaction.widgetEditable], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return function () {\n      _this4.navigate('RIGHT');\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"handleChange\", [_interaction.widgetEditable], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this5 = this;\n\n    return function (date) {\n      var _this5$props = _this5.props,\n          views = _this5$props.views,\n          onChange = _this5$props.onChange;\n      var view = _this5.state.view;\n\n      if (views[0] === view) {\n        _this5.maybeSetCurrentDate(date);\n\n        (0, _widgetHelpers.notify)(onChange, date);\n\n        _this5.focus();\n\n        return;\n      }\n\n      _this5.navigate('DOWN', date);\n    };\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"handleFooterClick\", [_interaction.widgetEditable], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this6 = this;\n\n    return function (date) {\n      var _this6$props = _this6.props,\n          views = _this6$props.views,\n          min = _this6$props.min,\n          max = _this6$props.max,\n          onViewChange = _this6$props.onViewChange;\n      var firstView = views[0];\n      (0, _widgetHelpers.notify)(_this6.props.onChange, date);\n\n      if (_dates.default.inRange(date, min, max, firstView)) {\n        _this6.focus();\n\n        _this6.maybeSetCurrentDate(date);\n\n        (0, _widgetHelpers.notify)(onViewChange, [firstView]);\n      }\n    };\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, \"handleKeyDown\", [_interaction.widgetEditable], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this7 = this;\n\n    return function (e) {\n      var _this7$state = _this7.state,\n          currentDate = _this7$state.currentDate,\n          view = _this7$state.view;\n      var ctrl = e.ctrlKey || e.metaKey;\n      var key = e.key;\n      var direction = ARROWS_TO_DIRECTION[key];\n      var unit = VIEW_UNIT[view];\n\n      if (key === 'Enter') {\n        e.preventDefault();\n        return _this7.handleChange(currentDate);\n      }\n\n      if (direction) {\n        if (ctrl) {\n          e.preventDefault();\n\n          _this7.navigate(direction);\n        } else {\n          if (_this7.isRtl() && OPPOSITE_DIRECTION[direction]) direction = OPPOSITE_DIRECTION[direction];\n          var nextDate = Calendar.move(currentDate, _this7.props.min, _this7.props.max, view, direction);\n\n          if (!_dates.default.eq(currentDate, nextDate, unit)) {\n            e.preventDefault();\n            if (_dates.default.gt(nextDate, currentDate, view)) _this7.navigate('RIGHT', nextDate);else if (_dates.default.lt(nextDate, currentDate, view)) _this7.navigate('LEFT', nextDate);else _this7.maybeSetCurrentDate(nextDate);\n          }\n        }\n      }\n\n      (0, _widgetHelpers.notify)(_this7.props.onKeyDown, [e]);\n    };\n  }\n})), _class2)) || _class;\n\nfunction dateOrNull(dt) {\n  if (dt && !isNaN(dt.getTime())) return dt;\n  return null;\n}\n\nvar _default = (0, _uncontrollable.default)(Calendar, {\n  value: 'onChange',\n  currentDate: 'onCurrentDateChange',\n  view: 'onViewChange'\n}, ['focus']);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}