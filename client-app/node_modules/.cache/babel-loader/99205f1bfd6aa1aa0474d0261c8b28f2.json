{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _difference from \"lodash/difference\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _startsWith from \"lodash/startsWith\";\nimport _filter from \"lodash/filter\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _keys from \"lodash/keys\";\nimport _intersection from \"lodash/intersection\";\nimport _has from \"lodash/has\";\nimport _each from \"lodash/each\";\nimport _invoke from \"lodash/invoke\";\nimport { Component } from 'react';\n\nvar getDefaultPropName = function getDefaultPropName(prop) {\n  return \"default\".concat(prop[0].toUpperCase() + prop.slice(1));\n};\n/**\n * Return the auto controlled state value for a give prop. The initial value is chosen in this order:\n *  - regular props\n *  - then, default props\n *  - then, initial state\n *  - then, `checked` defaults to false\n *  - then, `value` defaults to '' or [] if props.multiple\n *  - else, undefined\n *\n *  @param {string} propName A prop name\n *  @param {object} [props] A props object\n *  @param {object} [state] A state object\n *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state\n */\n\n\nexport var getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {\n  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false; // regular props\n\n  var propValue = props[propName];\n  if (propValue !== undefined) return propValue;\n\n  if (includeDefaults) {\n    // defaultProps\n    var defaultProp = props[getDefaultPropName(propName)];\n    if (defaultProp !== undefined) return defaultProp; // initial state - state may be null or undefined\n\n    if (state) {\n      var initialState = state[propName];\n      if (initialState !== undefined) return initialState;\n    }\n  } // React doesn't allow changing from uncontrolled to controlled components,\n  // default checked/value if they were not present.\n\n\n  if (propName === 'checked') return false;\n  if (propName === 'value') return props.multiple ? [] : ''; // otherwise, undefined\n};\n\nvar AutoControlledComponent = /*#__PURE__*/function (_Component) {\n  _inherits(AutoControlledComponent, _Component);\n\n  function AutoControlledComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoControlledComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoControlledComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"trySetState\", function (maybeState, state) {\n      var autoControlledProps = _this.constructor.autoControlledProps;\n\n      if (process.env.NODE_ENV !== 'production') {\n        var name = _this.constructor.name; // warn about failed attempts to setState for keys not listed in autoControlledProps\n\n        var illegalKeys = _difference(_keys(maybeState), autoControlledProps);\n\n        if (!_isEmpty(illegalKeys)) {\n          console.error([\"\".concat(name, \" called trySetState() with controlled props: \\\"\").concat(illegalKeys, \"\\\".\"), 'State will not be set.', 'Only props in static autoControlledProps will be set on state.'].join(' '));\n        }\n      }\n\n      var newState = Object.keys(maybeState).reduce(function (acc, prop) {\n        // ignore props defined by the parent\n        if (_this.props[prop] !== undefined) return acc; // ignore props not listed in auto controlled props\n\n        if (autoControlledProps.indexOf(prop) === -1) return acc;\n        acc[prop] = maybeState[prop];\n        return acc;\n      }, {});\n      if (state) newState = _objectSpread({}, newState, state);\n      if (Object.keys(newState).length > 0) _this.setState(newState);\n    });\n\n    var _autoControlledProps = _this.constructor.autoControlledProps;\n\n    var _state = _invoke(_assertThisInitialized(_this), 'getInitialAutoControlledState', _this.props) || {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      var _this$constructor = _this.constructor,\n          defaultProps = _this$constructor.defaultProps,\n          name = _this$constructor.name,\n          propTypes = _this$constructor.propTypes; // require static autoControlledProps\n\n      if (!_autoControlledProps) {\n        console.error(\"Auto controlled \".concat(name, \" must specify a static autoControlledProps array.\"));\n      } // require propTypes\n\n\n      _each(_autoControlledProps, function (prop) {\n        var defaultProp = getDefaultPropName(prop); // regular prop\n\n        if (!_has(propTypes, defaultProp)) {\n          console.error(\"\".concat(name, \" is missing \\\"\").concat(defaultProp, \"\\\" propTypes validation for auto controlled prop \\\"\").concat(prop, \"\\\".\"));\n        } // its default prop\n\n\n        if (!_has(propTypes, prop)) {\n          console.error(\"\".concat(name, \" is missing propTypes validation for auto controlled prop \\\"\").concat(prop, \"\\\".\"));\n        }\n      }); // prevent autoControlledProps in defaultProps\n      //\n      // When setting state, auto controlled props values always win (so the parent can manage them).\n      // It is not reasonable to decipher the difference between props from the parent and defaultProps.\n      // Allowing defaultProps results in trySetState always deferring to the defaultProp value.\n      // Auto controlled props also listed in defaultProps can never be updated.\n      //\n      // To set defaults for an AutoControlled prop, you can set the initial state in the\n      // constructor or by using an ES7 property initializer:\n      // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers\n\n\n      var illegalDefaults = _intersection(_autoControlledProps, _keys(defaultProps));\n\n      if (!_isEmpty(illegalDefaults)) {\n        console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', \"See \".concat(name, \" props: \\\"\").concat(illegalDefaults, \"\\\".\")].join(' '));\n      } // prevent listing defaultProps in autoControlledProps\n      //\n      // Default props are automatically handled.\n      // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.\n\n\n      var illegalAutoControlled = _filter(_autoControlledProps, function (prop) {\n        return _startsWith(prop, 'default');\n      });\n\n      if (!_isEmpty(illegalAutoControlled)) {\n        console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', \"See \".concat(name, \" autoControlledProps: \\\"\").concat(illegalAutoControlled, \"\\\".\")].join(' '));\n      }\n    } // Auto controlled props are copied to state.\n    // Set initial state by copying auto controlled props to state.\n    // Also look for the default prop for any auto controlled props (foo => defaultFoo)\n    // so we can set initial values from defaults.\n\n\n    var initialAutoControlledState = _autoControlledProps.reduce(function (acc, prop) {\n      acc[prop] = getAutoControlledStateValue(prop, _this.props, _state, true);\n\n      if (process.env.NODE_ENV !== 'production') {\n        var defaultPropName = getDefaultPropName(prop);\n        var _name = _this.constructor.name; // prevent defaultFoo={} along side foo={}\n\n        if (!_isUndefined(_this.props[defaultPropName]) && !_isUndefined(_this.props[prop])) {\n          console.error(\"\".concat(_name, \" prop \\\"\").concat(prop, \"\\\" is auto controlled. Specify either \").concat(defaultPropName, \" or \").concat(prop, \", but not both.\"));\n        }\n      }\n\n      return acc;\n    }, {});\n\n    _this.state = _objectSpread({}, _state, initialAutoControlledState);\n    return _this;\n  }\n\n  _createClass(AutoControlledComponent, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var autoControlledProps = this.constructor.autoControlledProps; // Solve the next state for autoControlledProps\n\n      var newState = autoControlledProps.reduce(function (acc, prop) {\n        var isNextDefined = !_isUndefined(nextProps[prop]); // if next is defined then use its value\n\n        if (isNextDefined) acc[prop] = nextProps[prop];\n        return acc;\n      }, {});\n      if (Object.keys(newState).length > 0) this.setState(newState);\n    }\n    /**\n     * Safely attempt to set state for props that might be controlled by the user.\n     * Second argument is a state object that is always passed to setState.\n     * @param {object} maybeState State that corresponds to controlled props.\n     * @param {object} [state] Actual state, useful when you also need to setState.\n     */\n\n  }]);\n\n  return AutoControlledComponent;\n}(Component);\n\nexport { AutoControlledComponent as default };","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/semantic-ui-react/dist/es/lib/AutoControlledComponent.js"],"names":["_objectSpread","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","_difference","_isUndefined","_startsWith","_filter","_isEmpty","_keys","_intersection","_has","_each","_invoke","Component","getDefaultPropName","prop","concat","toUpperCase","slice","getAutoControlledStateValue","propName","props","state","includeDefaults","arguments","length","undefined","propValue","defaultProp","initialState","multiple","AutoControlledComponent","_Component","_getPrototypeOf2","_this","_len","args","Array","_key","call","apply","maybeState","autoControlledProps","constructor","process","env","NODE_ENV","name","illegalKeys","console","error","join","newState","Object","keys","reduce","acc","indexOf","setState","_autoControlledProps","_state","_this$constructor","defaultProps","propTypes","illegalDefaults","illegalAutoControlled","initialAutoControlledState","defaultPropName","_name","key","value","componentWillReceiveProps","nextProps","isNextDefined","default"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _difference from \"lodash/difference\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _startsWith from \"lodash/startsWith\";\nimport _filter from \"lodash/filter\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _keys from \"lodash/keys\";\nimport _intersection from \"lodash/intersection\";\nimport _has from \"lodash/has\";\nimport _each from \"lodash/each\";\nimport _invoke from \"lodash/invoke\";\nimport { Component } from 'react';\n\nvar getDefaultPropName = function getDefaultPropName(prop) {\n  return \"default\".concat(prop[0].toUpperCase() + prop.slice(1));\n};\n/**\n * Return the auto controlled state value for a give prop. The initial value is chosen in this order:\n *  - regular props\n *  - then, default props\n *  - then, initial state\n *  - then, `checked` defaults to false\n *  - then, `value` defaults to '' or [] if props.multiple\n *  - else, undefined\n *\n *  @param {string} propName A prop name\n *  @param {object} [props] A props object\n *  @param {object} [state] A state object\n *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state\n */\n\n\nexport var getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {\n  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  // regular props\n  var propValue = props[propName];\n  if (propValue !== undefined) return propValue;\n\n  if (includeDefaults) {\n    // defaultProps\n    var defaultProp = props[getDefaultPropName(propName)];\n    if (defaultProp !== undefined) return defaultProp; // initial state - state may be null or undefined\n\n    if (state) {\n      var initialState = state[propName];\n      if (initialState !== undefined) return initialState;\n    }\n  } // React doesn't allow changing from uncontrolled to controlled components,\n  // default checked/value if they were not present.\n\n\n  if (propName === 'checked') return false;\n  if (propName === 'value') return props.multiple ? [] : ''; // otherwise, undefined\n};\n\nvar AutoControlledComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AutoControlledComponent, _Component);\n\n  function AutoControlledComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoControlledComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoControlledComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"trySetState\", function (maybeState, state) {\n      var autoControlledProps = _this.constructor.autoControlledProps;\n\n      if (process.env.NODE_ENV !== 'production') {\n        var name = _this.constructor.name; // warn about failed attempts to setState for keys not listed in autoControlledProps\n\n        var illegalKeys = _difference(_keys(maybeState), autoControlledProps);\n\n        if (!_isEmpty(illegalKeys)) {\n          console.error([\"\".concat(name, \" called trySetState() with controlled props: \\\"\").concat(illegalKeys, \"\\\".\"), 'State will not be set.', 'Only props in static autoControlledProps will be set on state.'].join(' '));\n        }\n      }\n\n      var newState = Object.keys(maybeState).reduce(function (acc, prop) {\n        // ignore props defined by the parent\n        if (_this.props[prop] !== undefined) return acc; // ignore props not listed in auto controlled props\n\n        if (autoControlledProps.indexOf(prop) === -1) return acc;\n        acc[prop] = maybeState[prop];\n        return acc;\n      }, {});\n      if (state) newState = _objectSpread({}, newState, state);\n      if (Object.keys(newState).length > 0) _this.setState(newState);\n    });\n\n    var _autoControlledProps = _this.constructor.autoControlledProps;\n\n    var _state = _invoke(_assertThisInitialized(_this), 'getInitialAutoControlledState', _this.props) || {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      var _this$constructor = _this.constructor,\n          defaultProps = _this$constructor.defaultProps,\n          name = _this$constructor.name,\n          propTypes = _this$constructor.propTypes; // require static autoControlledProps\n\n      if (!_autoControlledProps) {\n        console.error(\"Auto controlled \".concat(name, \" must specify a static autoControlledProps array.\"));\n      } // require propTypes\n\n\n      _each(_autoControlledProps, function (prop) {\n        var defaultProp = getDefaultPropName(prop); // regular prop\n\n        if (!_has(propTypes, defaultProp)) {\n          console.error(\"\".concat(name, \" is missing \\\"\").concat(defaultProp, \"\\\" propTypes validation for auto controlled prop \\\"\").concat(prop, \"\\\".\"));\n        } // its default prop\n\n\n        if (!_has(propTypes, prop)) {\n          console.error(\"\".concat(name, \" is missing propTypes validation for auto controlled prop \\\"\").concat(prop, \"\\\".\"));\n        }\n      }); // prevent autoControlledProps in defaultProps\n      //\n      // When setting state, auto controlled props values always win (so the parent can manage them).\n      // It is not reasonable to decipher the difference between props from the parent and defaultProps.\n      // Allowing defaultProps results in trySetState always deferring to the defaultProp value.\n      // Auto controlled props also listed in defaultProps can never be updated.\n      //\n      // To set defaults for an AutoControlled prop, you can set the initial state in the\n      // constructor or by using an ES7 property initializer:\n      // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers\n\n\n      var illegalDefaults = _intersection(_autoControlledProps, _keys(defaultProps));\n\n      if (!_isEmpty(illegalDefaults)) {\n        console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', \"See \".concat(name, \" props: \\\"\").concat(illegalDefaults, \"\\\".\")].join(' '));\n      } // prevent listing defaultProps in autoControlledProps\n      //\n      // Default props are automatically handled.\n      // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.\n\n\n      var illegalAutoControlled = _filter(_autoControlledProps, function (prop) {\n        return _startsWith(prop, 'default');\n      });\n\n      if (!_isEmpty(illegalAutoControlled)) {\n        console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', \"See \".concat(name, \" autoControlledProps: \\\"\").concat(illegalAutoControlled, \"\\\".\")].join(' '));\n      }\n    } // Auto controlled props are copied to state.\n    // Set initial state by copying auto controlled props to state.\n    // Also look for the default prop for any auto controlled props (foo => defaultFoo)\n    // so we can set initial values from defaults.\n\n\n    var initialAutoControlledState = _autoControlledProps.reduce(function (acc, prop) {\n      acc[prop] = getAutoControlledStateValue(prop, _this.props, _state, true);\n\n      if (process.env.NODE_ENV !== 'production') {\n        var defaultPropName = getDefaultPropName(prop);\n        var _name = _this.constructor.name; // prevent defaultFoo={} along side foo={}\n\n        if (!_isUndefined(_this.props[defaultPropName]) && !_isUndefined(_this.props[prop])) {\n          console.error(\"\".concat(_name, \" prop \\\"\").concat(prop, \"\\\" is auto controlled. Specify either \").concat(defaultPropName, \" or \").concat(prop, \", but not both.\"));\n        }\n      }\n\n      return acc;\n    }, {});\n\n    _this.state = _objectSpread({}, _state, initialAutoControlledState);\n    return _this;\n  }\n\n  _createClass(AutoControlledComponent, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var autoControlledProps = this.constructor.autoControlledProps; // Solve the next state for autoControlledProps\n\n      var newState = autoControlledProps.reduce(function (acc, prop) {\n        var isNextDefined = !_isUndefined(nextProps[prop]); // if next is defined then use its value\n\n        if (isNextDefined) acc[prop] = nextProps[prop];\n        return acc;\n      }, {});\n      if (Object.keys(newState).length > 0) this.setState(newState);\n    }\n    /**\n     * Safely attempt to set state for props that might be controlled by the user.\n     * Second argument is a state object that is always passed to setState.\n     * @param {object} maybeState State that corresponds to controlled props.\n     * @param {object} [state] Actual state, useful when you also need to setState.\n     */\n\n  }]);\n\n  return AutoControlledComponent;\n}(Component);\n\nexport { AutoControlledComponent as default };"]},"metadata":{},"sourceType":"module"}