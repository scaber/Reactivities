{"ast":null,"code":"import React from'react';import{Segment,Item,Header,Button,Grid,Statistic,Divider,Reveal}from'semantic-ui-react';import{observer}from'mobx-react-lite';var ProfileHeader=function ProfileHeader(_ref){var profile=_ref.profile,isCurrentUser=_ref.isCurrentUser,loading=_ref.loading,follow=_ref.follow,unfollow=_ref.unfollow;return/*#__PURE__*/React.createElement(Segment,null,/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:12},/*#__PURE__*/React.createElement(Item.Group,null,/*#__PURE__*/React.createElement(Item,null,/*#__PURE__*/React.createElement(Item.Image,{avatar:true,size:\"small\",src:profile.image||'/assets/user.png'}),/*#__PURE__*/React.createElement(Item.Content,{verticalAlign:\"middle\"},/*#__PURE__*/React.createElement(Header,{as:\"h1\"},profile.display))))),/*#__PURE__*/React.createElement(Grid.Column,{width:4},/*#__PURE__*/React.createElement(Statistic.Group,{widths:2},/*#__PURE__*/React.createElement(Statistic,{label:\"Followers\",value:profile.followersCount}),/*#__PURE__*/React.createElement(Statistic,{label:\"Following\",value:profile.followingCount})),/*#__PURE__*/React.createElement(Divider,null),!isCurrentUser&&/*#__PURE__*/React.createElement(Reveal,{animated:\"move\"},/*#__PURE__*/React.createElement(Reveal.Content,{visible:true,style:{width:'100%'}},/*#__PURE__*/React.createElement(Button,{fluid:true,color:\"teal\",content:profile.following?'Following':'Not following'})),/*#__PURE__*/React.createElement(Reveal.Content,{hidden:true},/*#__PURE__*/React.createElement(Button,{loading:loading,fluid:true,basic:true,color:profile.following?'red':'green',content:profile.following?'Unfollow':'Follow',onClick:profile.following?function(){return unfollow(profile.userName);}:function(){return follow(profile.userName);}}))))));};export default observer(ProfileHeader);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/profiles/ProfileHeader.tsx"],"names":["React","Segment","Item","Header","Button","Grid","Statistic","Divider","Reveal","observer","ProfileHeader","profile","isCurrentUser","loading","follow","unfollow","image","display","followersCount","followingCount","width","following","userName"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,OADF,CAEEC,IAFF,CAGEC,MAHF,CAIEC,MAJF,CAKEC,IALF,CAMEC,SANF,CAOEC,OAPF,CAQEC,MARF,KASO,mBATP,CAWA,OAASC,QAAT,KAAyB,iBAAzB,CAUA,GAAMC,CAAAA,aAA+B,CAAG,QAAlCA,CAAAA,aAAkC,MAMlC,IALJC,CAAAA,OAKI,MALJA,OAKI,CAJJC,aAII,MAJJA,aAII,CAHJC,OAGI,MAHJA,OAGI,CAFJC,MAEI,MAFJA,MAEI,CADJC,QACI,MADJA,QACI,CACJ,mBACE,oBAAC,OAAD,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,EAApB,eACE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,KAAN,EACE,MAAM,KADR,CAEE,IAAI,CAAC,OAFP,CAGE,GAAG,CAAEJ,OAAO,CAACK,KAAR,EAAiB,kBAHxB,EADF,cAME,oBAAC,IAAD,CAAM,OAAN,EAAc,aAAa,CAAC,QAA5B,eACE,oBAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,EAAiBL,OAAO,CAACM,OAAzB,CADF,CANF,CADF,CADF,CADF,cAeE,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAApB,eACE,oBAAC,SAAD,CAAW,KAAX,EAAiB,MAAM,CAAE,CAAzB,eACE,oBAAC,SAAD,EAAW,KAAK,CAAC,WAAjB,CAA6B,KAAK,CAAEN,OAAO,CAACO,cAA5C,EADF,cAEE,oBAAC,SAAD,EAAW,KAAK,CAAC,WAAjB,CAA6B,KAAK,CAAEP,OAAO,CAACQ,cAA5C,EAFF,CADF,cAKE,oBAAC,OAAD,MALF,CAMG,CAACP,aAAD,eACC,oBAAC,MAAD,EAAQ,QAAQ,CAAC,MAAjB,eACE,oBAAC,MAAD,CAAQ,OAAR,EAAgB,OAAO,KAAvB,CAAwB,KAAK,CAAE,CAAEQ,KAAK,CAAE,MAAT,CAA/B,eACE,oBAAC,MAAD,EACE,KAAK,KADP,CAEE,KAAK,CAAC,MAFR,CAGE,OAAO,CAAET,OAAO,CAACU,SAAR,CAAoB,WAApB,CAAkC,eAH7C,EADF,CADF,cAQE,oBAAC,MAAD,CAAQ,OAAR,EAAgB,MAAM,KAAtB,eACE,oBAAC,MAAD,EACE,OAAO,CAAER,OADX,CAEE,KAAK,KAFP,CAGE,KAAK,KAHP,CAIE,KAAK,CAAEF,OAAO,CAACU,SAAR,CAAoB,KAApB,CAA4B,OAJrC,CAKE,OAAO,CAAEV,OAAO,CAACU,SAAR,CAAoB,UAApB,CAAiC,QAL5C,CAME,OAAO,CACLV,OAAO,CAACU,SAAR,CACI,iBAAMN,CAAAA,QAAQ,CAACJ,OAAO,CAACW,QAAT,CAAd,EADJ,CAEI,iBAAMR,CAAAA,MAAM,CAACH,OAAO,CAACW,QAAT,CAAZ,EATR,EADF,CARF,CAPJ,CAfF,CADF,CADF,CAoDD,CA3DD,CA6DA,cAAeb,CAAAA,QAAQ,CAACC,aAAD,CAAvB","sourcesContent":["import React from 'react';\r\nimport {\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Statistic,\r\n  Divider,\r\n  Reveal\r\n} from 'semantic-ui-react';\r\nimport { IProfile } from '../../app/models/profile';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n  isCurrentUser: boolean;\r\n  loading: boolean;\r\n  follow: (username: string) => void;\r\n  unfollow: (username: string) => void;\r\n}\r\n\r\nconst ProfileHeader: React.FC<IProps> = ({\r\n  profile,\r\n  isCurrentUser,\r\n  loading,\r\n  follow,\r\n  unfollow\r\n}) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size='small'\r\n                src={profile.image || '/assets/user.png'}\r\n              />\r\n              <Item.Content verticalAlign='middle'>\r\n                <Header as='h1'>{profile.display}</Header>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label='Followers' value={profile.followersCount} />\r\n            <Statistic label='Following' value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          {!isCurrentUser && (\r\n            <Reveal animated='move'>\r\n              <Reveal.Content visible style={{ width: '100%' }}>\r\n                <Button\r\n                  fluid\r\n                  color='teal'\r\n                  content={profile.following ? 'Following' : 'Not following'}\r\n                />\r\n              </Reveal.Content>\r\n              <Reveal.Content hidden>\r\n                <Button\r\n                  loading={loading}\r\n                  fluid\r\n                  basic\r\n                  color={profile.following ? 'red' : 'green'}\r\n                  content={profile.following ? 'Unfollow' : 'Follow'}\r\n                  onClick={\r\n                    profile.following\r\n                      ? () => unfollow(profile.userName)\r\n                      : () => follow(profile.userName)\r\n                  }\r\n                />\r\n              </Reveal.Content>\r\n            </Reveal>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileHeader);"]},"metadata":{},"sourceType":"module"}