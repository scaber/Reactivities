{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityList.tsx\";\nimport React, { useContext, Fragment } from 'react';\nimport { Item, Label } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport ActivityListItem from './ActivityListItem';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport { format } from 'date-fns';\n\nconst ActivityList = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    activitiesByDate\n  } = rootStore.activityStore;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, activitiesByDate.map(([group, activities]) => /*#__PURE__*/React.createElement(Fragment, {\n    key: group,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    size: \"large\",\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, format(group, 'eeee do MMMM')), /*#__PURE__*/React.createElement(Item.Group, {\n    divided: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, activities.map(activity => /*#__PURE__*/React.createElement(ActivityListItem, {\n    key: activity.id,\n    activity: activity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default observer(ActivityList);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/activities/dashboard/ActivityList.tsx"],"names":["React","useContext","Fragment","Item","Label","observer","ActivityListItem","RootStoreContext","format","ActivityList","rootStore","activitiesByDate","activityStore","map","group","activities","activity","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAAQC,MAAR,QAAqB,UAArB;;AAEA,MAAMC,YAAsB,GAAG,MAAM;AACnC,QAAMC,SAAS,GAAGT,UAAU,CAACM,gBAAD,CAA5B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAuBD,SAAS,CAACE,aAAvC;AACA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,gBAAgB,CAACE,GAAjB,CAAqB,CAAC,CAACC,KAAD,EAAQC,UAAR,CAAD,kBACpB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAED,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MAAM,CAACM,KAAD,EAAQ,cAAR,CADT,CADF,eAIE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,UAAU,CAACF,GAAX,CAAeG,QAAQ,iBACtB,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAhC;AAAoC,IAAA,QAAQ,EAAED,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAJF,CADD,CADH,CADF;AAgBD,CAnBD;;AAqBA,eAAeX,QAAQ,CAACI,YAAD,CAAvB","sourcesContent":["import React, { useContext, Fragment } from 'react';\nimport { Item, Label } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport ActivityListItem from './ActivityListItem';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport {format} from 'date-fns';\n\nconst ActivityList: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { activitiesByDate } = rootStore.activityStore;\n  return (\n    <Fragment>\n      {activitiesByDate.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Label size='large' color='blue'>\n            {format(group, 'eeee do MMMM')}\n          </Label>\n          <Item.Group divided>\n            {activities.map(activity => (\n              <ActivityListItem key={activity.id} activity={activity} />\n            ))}\n          </Item.Group>\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityList);\n"]},"metadata":{},"sourceType":"module"}