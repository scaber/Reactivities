{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A rail is used to show accompanying content outside the boundaries of the main view of a site.\n */\n\nfunction Rail(props) {\n  var attached = props.attached,\n      children = props.children,\n      className = props.className,\n      close = props.close,\n      content = props.content,\n      dividing = props.dividing,\n      internal = props.internal,\n      position = props.position,\n      size = props.size;\n  var classes = cx('ui', position, size, useKeyOnly(attached, 'attached'), useKeyOnly(dividing, 'dividing'), useKeyOnly(internal, 'internal'), useKeyOrValueAndKey(close, 'close'), 'rail', className);\n  var rest = getUnhandledProps(Rail, props);\n  var ElementType = getElementType(Rail, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nRail.handledProps = [\"as\", \"attached\", \"children\", \"className\", \"close\", \"content\", \"dividing\", \"internal\", \"position\", \"size\"];\nRail.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A rail can appear attached to the main viewport. */\n  attached: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A rail can appear closer to the main viewport. */\n  close: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A rail can create a division between itself and a container. */\n  dividing: PropTypes.bool,\n\n  /** A rail can attach itself to the inside of a container. */\n  internal: PropTypes.bool,\n\n  /** A rail can be presented on the left or right side of a container. */\n  position: PropTypes.oneOf(SUI.FLOATS).isRequired,\n\n  /** A rail can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium'))\n} : {};\nexport default Rail;","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/semantic-ui-react/dist/es/elements/Rail/Rail.js"],"names":["_extends","_without","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useKeyOrValueAndKey","Rail","props","attached","children","className","close","content","dividing","internal","position","size","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","bool","node","string","oneOfType","oneOf","contentShorthand","FLOATS","isRequired","SIZES"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A rail is used to show accompanying content outside the boundaries of the main view of a site.\n */\n\nfunction Rail(props) {\n  var attached = props.attached,\n      children = props.children,\n      className = props.className,\n      close = props.close,\n      content = props.content,\n      dividing = props.dividing,\n      internal = props.internal,\n      position = props.position,\n      size = props.size;\n  var classes = cx('ui', position, size, useKeyOnly(attached, 'attached'), useKeyOnly(dividing, 'dividing'), useKeyOnly(internal, 'internal'), useKeyOrValueAndKey(close, 'close'), 'rail', className);\n  var rest = getUnhandledProps(Rail, props);\n  var ElementType = getElementType(Rail, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nRail.handledProps = [\"as\", \"attached\", \"children\", \"className\", \"close\", \"content\", \"dividing\", \"internal\", \"position\", \"size\"];\nRail.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A rail can appear attached to the main viewport. */\n  attached: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A rail can appear closer to the main viewport. */\n  close: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A rail can create a division between itself and a container. */\n  dividing: PropTypes.bool,\n\n  /** A rail can attach itself to the inside of a container. */\n  internal: PropTypes.bool,\n\n  /** A rail can be presented on the left or right side of a container. */\n  position: PropTypes.oneOf(SUI.FLOATS).isRequired,\n\n  /** A rail can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium'))\n} : {};\nexport default Rail;"]},"metadata":{},"sourceType":"module"}