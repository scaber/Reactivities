{"ast":null,"code":"import React from'react';import{Form,Label,Select}from'semantic-ui-react';var SelectInput=function SelectInput(_ref){var input=_ref.input,width=_ref.width,options=_ref.options,placeholder=_ref.placeholder,_ref$meta=_ref.meta,touched=_ref$meta.touched,error=_ref$meta.error;return/*#__PURE__*/React.createElement(Form.Field,{error:touched&&!!error,width:width},/*#__PURE__*/React.createElement(Select,{value:input.value,onChange:function onChange(e,data){return input.onChange(data.value);},placeholder:placeholder,options:options}),touched&&error&&/*#__PURE__*/React.createElement(Label,{basic:true,color:\"red\"},error));};export default SelectInput;","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/app/common/form/SelectInput.tsx"],"names":["React","Form","Label","Select","SelectInput","input","width","options","placeholder","meta","touched","error","value","e","data","onChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAAyBC,IAAzB,CAA+BC,KAA/B,CAAsCC,MAAtC,KAAoD,mBAApD,CAMA,GAAMC,CAAAA,WAA6B,CAAG,QAAhCA,CAAAA,WAAgC,MAM9B,IALJC,CAAAA,KAKI,MALJA,KAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,OAGI,MAHJA,OAGI,CAFJC,WAEI,MAFJA,WAEI,gBADJC,IACI,CADIC,OACJ,WADIA,OACJ,CADaC,KACb,WADaA,KACb,CACJ,mBACI,oBAAC,IAAD,CAAM,KAAN,EAAY,KAAK,CAAED,OAAO,EAAI,CAAC,CAACC,KAAhC,CAAuC,KAAK,CAAEL,KAA9C,eACA,oBAAC,MAAD,EACI,KAAK,CAAED,KAAK,CAACO,KADjB,CAEI,QAAQ,CAAE,kBAACC,CAAD,CAAIC,IAAJ,QAAaT,CAAAA,KAAK,CAACU,QAAN,CAAeD,IAAI,CAACF,KAApB,CAAb,EAFd,CAGI,WAAW,CAAEJ,WAHjB,CAII,OAAO,CAAED,OAJb,EADA,CAOCG,OAAO,EAAIC,KAAX,eACC,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,KAAK,CAAC,KAAnB,EACGA,KADH,CARF,CADJ,CAeH,CAtBD,CAwBA,cAAeP,CAAAA,WAAf","sourcesContent":["import React from 'react'\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label, Select } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLSelectElement>,\n    FormFieldProps {}\n\nconst SelectInput: React.FC<IProps> = ({\n    input,\n    width,\n    options,\n    placeholder,\n    meta: { touched, error }\n  }) => {\n    return (\n        <Form.Field error={touched && !!error} width={width}>\n        <Select \n            value={input.value}\n            onChange={(e, data) => input.onChange(data.value)}\n            placeholder={placeholder}\n            options={options}\n        />\n        {touched && error && (\n          <Label basic color='red'>\n            {error}\n          </Label>\n        )}\n      </Form.Field>\n    )\n}\n\nexport default SelectInput\n"]},"metadata":{},"sourceType":"module"}