{"ast":null,"code":"import toDate from '../../toDate/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js"],"names":["toDate","MILLISECONDS_IN_DAY","getUTCDayOfYear","dirtyDate","dirtyOptions","arguments","length","TypeError","date","timestamp","getTime","setUTCMonth","setUTCHours","startOfYearTimestamp","difference","Math","floor"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AAEA,IAAIC,mBAAmB,GAAG,QAA1B,C,CAEA;AACA;;AACA,eAAe,SAASC,eAAT,CAA0BC,SAA1B,EAAqCC,YAArC,EAAmD;AAChE,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,mCAAmCF,SAAS,CAACC,MAA7C,GAAsD,UAApE,CAAN;AACD;;AAED,MAAIE,IAAI,GAAGR,MAAM,CAACG,SAAD,EAAYC,YAAZ,CAAjB;AACA,MAAIK,SAAS,GAAGD,IAAI,CAACE,OAAL,EAAhB;AACAF,EAAAA,IAAI,CAACG,WAAL,CAAiB,CAAjB,EAAoB,CAApB;AACAH,EAAAA,IAAI,CAACI,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,MAAIC,oBAAoB,GAAGL,IAAI,CAACE,OAAL,EAA3B;AACA,MAAII,UAAU,GAAGL,SAAS,GAAGI,oBAA7B;AACA,SAAOE,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAGb,mBAAxB,IAA+C,CAAtD;AACD","sourcesContent":["import toDate from '../../toDate/index.js'\n\nvar MILLISECONDS_IN_DAY = 86400000\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function getUTCDayOfYear (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions)\n  var timestamp = date.getTime()\n  date.setUTCMonth(0, 1)\n  date.setUTCHours(0, 0, 0, 0)\n  var startOfYearTimestamp = date.getTime()\n  var difference = timestamp - startOfYearTimestamp\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1\n}\n"]},"metadata":{},"sourceType":"module"}