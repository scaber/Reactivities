{"ast":null,"code":"function mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n\n  var thing = key ? {} : obj;\n  var out = value.reduce(function (newObj, item) {\n    sExpr(item, newObj);\n    return newObj;\n  }, thing);\n\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n\n  var key = v.shift();\n\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n\n    obj[key] = v[0];\n    return;\n  }\n\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n\n    obj[key].push(v);\n    return;\n  }\n\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n\n      return;\n\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n\n      return;\n\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n\n    default:\n      i = -1;\n\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n\n      return mapit(obj, key, v);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}