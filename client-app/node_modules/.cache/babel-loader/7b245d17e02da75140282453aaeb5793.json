{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v22.1.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Bean, PostConstruct } from \"../../context/context\";\n\nvar ComponentMetadataProvider =\n/** @class */\nfunction () {\n  function ComponentMetadataProvider() {}\n\n  ComponentMetadataProvider.prototype.postConstruct = function () {\n    this.componentMetaData = {\n      dateComponent: {\n        mandatoryMethodList: ['getDate', 'setDate'],\n        optionalMethodList: ['afterGuiAttached']\n      },\n      detailCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: ['refresh']\n      },\n      headerComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      headerGroupComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      loadingCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      loadingOverlayComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      noRowsOverlayComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      floatingFilterComponent: {\n        mandatoryMethodList: ['onParentModelChanged'],\n        optionalMethodList: ['afterGuiAttached']\n      },\n      floatingFilterWrapperComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      cellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: ['refresh', 'afterGuiAttached'],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      cellEditor: {\n        mandatoryMethodList: ['getValue'],\n        optionalMethodList: ['isPopup', 'isCancelBeforeStart', 'isCancelAfterEnd', 'focusIn', 'focusOut', 'afterGuiAttached']\n      },\n      innerRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: ['afterGuiAttached'],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      fullWidthCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: ['refresh', 'afterGuiAttached'],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      pinnedRowCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: ['refresh', 'afterGuiAttached'],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      groupRowInnerRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: ['afterGuiAttached'],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      groupRowRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: ['afterGuiAttached'],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      filter: {\n        mandatoryMethodList: ['isFilterActive', 'doesFilterPass', 'getModel', 'setModel'],\n        optionalMethodList: ['afterGuiAttached', 'onNewRowsLoaded', 'getModelAsString', 'onFloatingFilterChanged']\n      },\n      filterComponent: {\n        mandatoryMethodList: ['isFilterActive', 'doesFilterPass', 'getModel', 'setModel'],\n        optionalMethodList: ['afterGuiAttached', 'onNewRowsLoaded', 'getModelAsString', 'onFloatingFilterChanged']\n      },\n      statusPanel: {\n        mandatoryMethodList: [],\n        optionalMethodList: ['afterGuiAttached']\n      },\n      toolPanel: {\n        mandatoryMethodList: [],\n        optionalMethodList: ['refresh', 'afterGuiAttached']\n      },\n      tooltipComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      }\n    };\n  };\n\n  ComponentMetadataProvider.prototype.retrieve = function (name) {\n    return this.componentMetaData[name];\n  };\n\n  __decorate([Autowired(\"agComponentUtils\")], ComponentMetadataProvider.prototype, \"agComponentUtils\", void 0);\n\n  __decorate([PostConstruct], ComponentMetadataProvider.prototype, \"postConstruct\", null);\n\n  ComponentMetadataProvider = __decorate([Bean(\"componentMetadataProvider\")], ComponentMetadataProvider);\n  return ComponentMetadataProvider;\n}();\n\nexport { ComponentMetadataProvider };","map":null,"metadata":{},"sourceType":"module"}