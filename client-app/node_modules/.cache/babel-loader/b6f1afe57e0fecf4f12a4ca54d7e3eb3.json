{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfileActivities.tsx\";\nimport React, { useEffect, useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Tab, Grid, Header, Card, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nconst panes = [{\n  menuItem: 'Future Events',\n  pane: {\n    key: 'futureEvents'\n  }\n}, {\n  menuItem: 'Past Events',\n  pane: {\n    key: 'pastEvents'\n  }\n}, {\n  menuItem: 'Hosting',\n  pane: {\n    key: 'hosted'\n  }\n}];\n\nconst ProfileEvents = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadUserActivities,\n    profile,\n    loadingActivities,\n    userActivities\n  } = rootStore.profileStore;\n  useEffect(() => {\n    loadUserActivities(profile.userName);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e, data) => {\n    let predicate;\n    debugger;\n\n    switch (data.activeIndex) {\n      case 1:\n        predicate = 'past';\n        break;\n\n      case 2:\n        predicate = 'hosting';\n        break;\n\n      default:\n        predicate = 'future';\n        break;\n    }\n\n    debugger;\n    loadUserActivities(profile.userName, predicate);\n  };\n\n  return /*#__PURE__*/React.createElement(Tab.Pane, {\n    loading: loadingActivities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    floated: \"left\",\n    icon: \"calendar\",\n    content: 'Activities',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    panes: panes,\n    menu: {\n      secondary: true,\n      pointing: true\n    },\n    onTabChange: (e, data) => handleTabChange(e, data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Card.Group, {\n    itemsPerRow: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, userActivities.map(activity => /*#__PURE__*/React.createElement(Card, {\n    as: Link,\n    to: `/activities/${activity.id}`,\n    key: activity.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: `/assets/categoryImages/${activity.category}.jpg`,\n    style: {\n      minHeight: 100,\n      objectFit: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, activity.title), /*#__PURE__*/React.createElement(Card.Meta, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, format(new Date(activity.date), 'do LLL')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, format(new Date(activity.date), 'h:mm a'))))))))));\n};\n\nexport default observer(ProfileEvents);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/profiles/ProfileActivities.tsx"],"names":["React","useEffect","useContext","observer","Tab","Grid","Header","Card","Image","Link","format","RootStoreContext","panes","menuItem","pane","key","ProfileEvents","rootStore","loadUserActivities","profile","loadingActivities","userActivities","profileStore","userName","handleTabChange","e","data","predicate","activeIndex","secondary","pointing","map","activity","id","category","minHeight","objectFit","title","Date","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IUserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\nconst panes = [\r\n  { menuItem: 'Future Events', pane: { key: 'futureEvents' } },\r\n  { menuItem: 'Past Events', pane: { key: 'pastEvents' } },\r\n  { menuItem: 'Hosting', pane: { key: 'hosted' } }\r\n];\r\n\r\nconst ProfileEvents = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities\r\n  } = rootStore.profileStore!;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.userName);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    data: TabProps\r\n  ) => {\r\n    let predicate;\r\n    debugger\r\n    switch (data.activeIndex) {\r\n      case 1:\r\n        predicate = 'past';\r\n        break;\r\n      case 2:\r\n        predicate = 'hosting';\r\n        break;\r\n      default:\r\n        predicate = 'future';\r\n        break;\r\n    }\r\n    debugger\r\n    loadUserActivities(profile!.userName, predicate);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated='left' icon='calendar' content={'Activities'} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: IUserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: 'cover' }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign='center'>\r\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEvents);\r\n"]},"metadata":{},"sourceType":"module"}