{"ast":null,"code":"import React from\"react\";import{Item,Button,Segment,Icon,Label}from\"semantic-ui-react\";import{Link}from\"react-router-dom\";import{format}from\"date-fns\";import{ActivityListItemAttendee}from\"./ActivityListItemAttendee\";var ActivityListItem=function ActivityListItem(_ref){var activity=_ref.activity;var host=activity.attendees.filter(function(x){return x.isHost;})[0];return/*#__PURE__*/React.createElement(Segment.Group,null,/*#__PURE__*/React.createElement(Segment,null,/*#__PURE__*/React.createElement(Item.Group,null,/*#__PURE__*/React.createElement(Item,null,/*#__PURE__*/React.createElement(Item.Image,{size:\"tiny\",circular:true,src:host.image||\"/assets/user.png\",style:{marginBottom:0}}),/*#__PURE__*/React.createElement(Item.Content,null,/*#__PURE__*/React.createElement(Item.Header,{as:\"a\"},activity.title),/*#__PURE__*/React.createElement(Item.Description,null,\"Hosted by \",' ',/*#__PURE__*/React.createElement(Link,{to:\"/profile/\".concat(host.userName)},\" \",host.display,\" \")),activity.isHost&&/*#__PURE__*/React.createElement(Item.Description,null,/*#__PURE__*/React.createElement(Label,{basic:true,color:\"orange\",content:\"You are hosting this activity\"})),activity.isGoing&&!activity.isHost&&/*#__PURE__*/React.createElement(Item.Description,null,/*#__PURE__*/React.createElement(Label,{basic:true,color:\"green\",content:\"You are going to this activity\"})))))),/*#__PURE__*/React.createElement(Segment,null,/*#__PURE__*/React.createElement(Icon,{name:\"clock\"}),\" \",format(activity.date,\"h:mm a\"),/*#__PURE__*/React.createElement(Icon,{name:\"marker\"}),\" \",activity.venue,\", \",activity.city),/*#__PURE__*/React.createElement(Segment,{secondary:true},/*#__PURE__*/React.createElement(ActivityListItemAttendee,{attendees:activity.attendees})),/*#__PURE__*/React.createElement(Segment,{clearing:true},/*#__PURE__*/React.createElement(\"span\",null,activity.description),/*#__PURE__*/React.createElement(Button,{as:Link,to:\"/activities/\".concat(activity.id),floated:\"right\",content:\"View\",color:\"blue\"})));};export default ActivityListItem;","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/activities/dashboard/ActivityListItem.tsx"],"names":["React","Item","Button","Segment","Icon","Label","Link","format","ActivityListItemAttendee","ActivityListItem","activity","host","attendees","filter","x","isHost","image","marginBottom","title","userName","display","isGoing","date","venue","city","description","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,OAAvB,CAAgCC,IAAhC,CAAsCC,KAAtC,KAAmD,mBAAnD,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,wBAAT,KAAyC,4BAAzC,CAEA,GAAMC,CAAAA,gBAAmD,CAAG,QAAtDA,CAAAA,gBAAsD,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC5E,GAAMC,CAAAA,IAAI,CAAGD,QAAQ,CAACE,SAAT,CAAmBC,MAAnB,CAA0B,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,MAAT,EAA1B,EAA2C,CAA3C,CAAb,CAEA,mBACE,oBAAC,OAAD,CAAS,KAAT,mBACE,oBAAC,OAAD,mBACE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,MADP,CAEE,QAAQ,KAFV,CAGE,GAAG,CAAEJ,IAAI,CAACK,KAAL,EAAc,kBAHrB,CAIE,KAAK,CAAE,CAAEC,YAAY,CAAE,CAAhB,CAJT,EADF,cAOE,oBAAC,IAAD,CAAM,OAAN,mBACE,oBAAC,IAAD,CAAM,MAAN,EAAa,EAAE,CAAC,GAAhB,EAAqBP,QAAQ,CAACQ,KAA9B,CADF,cAEE,oBAAC,IAAD,CAAM,WAAN,mBACa,GADb,cAEE,oBAAC,IAAD,EAAM,EAAE,oBAAcP,IAAI,CAACQ,QAAnB,CAAR,MAAyCR,IAAI,CAACS,OAA9C,KAFF,CAFF,CAMGV,QAAQ,CAACK,MAAT,eACC,oBAAC,IAAD,CAAM,WAAN,mBACE,oBAAC,KAAD,EACE,KAAK,KADP,CAEE,KAAK,CAAC,QAFR,CAGE,OAAO,CAAC,+BAHV,EADF,CAPJ,CAeGL,QAAQ,CAACW,OAAT,EAAoB,CAACX,QAAQ,CAACK,MAA9B,eACC,oBAAC,IAAD,CAAM,WAAN,mBACE,oBAAC,KAAD,EACE,KAAK,KADP,CAEE,KAAK,CAAC,OAFR,CAGE,OAAO,CAAC,gCAHV,EADF,CAhBJ,CAPF,CADF,CADF,CADF,cAsCE,oBAAC,OAAD,mBACE,oBAAC,IAAD,EAAM,IAAI,CAAC,OAAX,EADF,KACyBR,MAAM,CAACG,QAAQ,CAACY,IAAV,CAAgB,QAAhB,CAD/B,cAEE,oBAAC,IAAD,EAAM,IAAI,CAAC,QAAX,EAFF,KAE0BZ,QAAQ,CAACa,KAFnC,MAE4Cb,QAAQ,CAACc,IAFrD,CAtCF,cA0CE,oBAAC,OAAD,EAAS,SAAS,KAAlB,eACE,oBAAC,wBAAD,EAA0B,SAAS,CAAEd,QAAQ,CAACE,SAA9C,EADF,CA1CF,cA6CE,oBAAC,OAAD,EAAS,QAAQ,KAAjB,eACE,gCAAOF,QAAQ,CAACe,WAAhB,CADF,cAEE,oBAAC,MAAD,EACE,EAAE,CAAEnB,IADN,CAEE,EAAE,uBAAiBI,QAAQ,CAACgB,EAA1B,CAFJ,CAGE,OAAO,CAAC,OAHV,CAIE,OAAO,CAAC,MAJV,CAKE,KAAK,CAAC,MALR,EAFF,CA7CF,CADF,CA0DD,CA7DD,CA+DA,cAAejB,CAAAA,gBAAf","sourcesContent":["import React from \"react\";\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport { ActivityListItemAttendee } from \"./ActivityListItemAttendee\";\n\nconst ActivityListItem: React.FC<{ activity: IActivity }> = ({ activity }) => {\n  const host = activity.attendees.filter((x) => x.isHost)[0];\n    \n  return (\n    <Segment.Group>\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image\n              size=\"tiny\"\n              circular\n              src={host.image || \"/assets/user.png\"}\n              style={{ marginBottom: 0 }}\n            />\n            <Item.Content>\n              <Item.Header as=\"a\">{activity.title}</Item.Header>\n              <Item.Description>\n                Hosted by {' '}\n                <Link to={`/profile/${host.userName}`}> {host.display} </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color=\"orange\"\n                    content=\"You are hosting this activity\"\n                  />\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color=\"green\"\n                    content=\"You are going to this activity\"\n                  />\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <Icon name=\"clock\" /> {format(activity.date, \"h:mm a\")}\n        <Icon name=\"marker\" /> {activity.venue}, {activity.city}\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          floated=\"right\"\n          content=\"View\"\n          color=\"blue\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default ActivityListItem;\n"]},"metadata":{},"sourceType":"module"}