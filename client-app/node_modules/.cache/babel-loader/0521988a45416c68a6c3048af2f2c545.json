{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v22.1.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Bean } from \"../context/context\";\n\nvar StylingService =\n/** @class */\nfunction () {\n  function StylingService() {}\n\n  StylingService.prototype.processAllCellClasses = function (colDef, params, onApplicableClass, onNotApplicableClass) {\n    this.processClassRules(colDef.cellClassRules, params, onApplicableClass, onNotApplicableClass);\n    this.processStaticCellClasses(colDef, params, onApplicableClass);\n  };\n\n  StylingService.prototype.processClassRules = function (classRules, params, onApplicableClass, onNotApplicableClass) {\n    if (typeof classRules === 'object' && classRules !== null) {\n      var classNames = Object.keys(classRules);\n\n      for (var i = 0; i < classNames.length; i++) {\n        var className = classNames[i];\n        var rule = classRules[className];\n        var resultOfRule = void 0;\n\n        if (typeof rule === 'string') {\n          resultOfRule = this.expressionService.evaluate(rule, params);\n        } else if (typeof rule === 'function') {\n          resultOfRule = rule(params);\n        }\n\n        if (resultOfRule) {\n          onApplicableClass(className);\n        } else if (onNotApplicableClass) {\n          onNotApplicableClass(className);\n        }\n      }\n    }\n  };\n\n  StylingService.prototype.processStaticCellClasses = function (colDef, params, onApplicableClass) {\n    var cellClass = colDef.cellClass;\n\n    if (cellClass) {\n      var classOrClasses = void 0;\n\n      if (typeof colDef.cellClass === 'function') {\n        var cellClassFunc = colDef.cellClass;\n        classOrClasses = cellClassFunc(params);\n      } else {\n        classOrClasses = colDef.cellClass;\n      }\n\n      if (typeof classOrClasses === 'string') {\n        onApplicableClass(classOrClasses);\n      } else if (Array.isArray(classOrClasses)) {\n        classOrClasses.forEach(function (cssClassItem) {\n          onApplicableClass(cssClassItem);\n        });\n      }\n    }\n  };\n\n  __decorate([Autowired('expressionService')], StylingService.prototype, \"expressionService\", void 0);\n\n  StylingService = __decorate([Bean('stylingService')], StylingService);\n  return StylingService;\n}();\n\nexport { StylingService };","map":null,"metadata":{},"sourceType":"module"}