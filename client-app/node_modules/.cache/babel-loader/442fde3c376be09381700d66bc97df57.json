{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v22.1.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { RefSelector } from \"./componentAnnotations\";\nimport { PostConstruct, Autowired } from \"../context/context\";\nimport { Component } from \"./component\";\nimport { _ } from \"../utils\";\n\nvar AgPanel =\n/** @class */\nfunction (_super) {\n  __extends(AgPanel, _super);\n\n  function AgPanel(config) {\n    var _this = _super.call(this, AgPanel.TEMPLATE) || this;\n\n    _this.closable = true;\n    _this.positioned = false;\n    _this.dragStartPosition = {\n      x: 0,\n      y: 0\n    };\n    _this.position = {\n      x: 0,\n      y: 0\n    };\n    _this.size = {\n      width: undefined,\n      height: undefined\n    };\n    _this.config = config;\n    return _this;\n  }\n\n  AgPanel.prototype.postConstruct = function () {\n    var _this = this;\n\n    var _a = this.config,\n        component = _a.component,\n        closable = _a.closable,\n        hideTitleBar = _a.hideTitleBar,\n        title = _a.title,\n        minWidth = _a.minWidth,\n        width = _a.width,\n        minHeight = _a.minHeight,\n        height = _a.height,\n        centered = _a.centered,\n        x = _a.x,\n        y = _a.y;\n    var eGui = this.getGui();\n\n    if (component) {\n      this.setBodyComponent(component);\n    }\n\n    if (!hideTitleBar) {\n      if (title) {\n        this.setTitle(title);\n      }\n\n      this.setClosable(closable != null ? closable : this.closable);\n    } else {\n      _.addCssClass(this.eTitleBar, 'ag-hidden');\n    }\n\n    this.addDestroyableEventListener(this.eTitleBar, 'mousedown', function (e) {\n      if (eGui.contains(e.relatedTarget) || eGui.contains(document.activeElement) || _this.eTitleBarButtons.contains(e.target)) {\n        e.preventDefault();\n        return;\n      }\n\n      var focusEl = _this.eContentWrapper.querySelector('button, [href], input, select, textarea, [tabindex]');\n\n      if (focusEl) {\n        focusEl.focus();\n      }\n    });\n\n    if (this.positioned) {\n      return;\n    }\n\n    this.minHeight = minHeight != null ? minHeight : 250;\n    this.minWidth = minWidth != null ? minWidth : 250;\n    this.popupParent = this.popupService.getPopupParent();\n\n    if (width) {\n      this.setWidth(width);\n    }\n\n    if (height) {\n      this.setHeight(height);\n    }\n\n    if (this.renderComponent) {\n      this.renderComponent();\n    }\n\n    if (!width || !height) {\n      this.refreshSize();\n    }\n\n    if (centered) {\n      this.center();\n    } else if (x || y) {\n      this.offsetElement(x, y);\n    }\n\n    this.positioned = true;\n    this.eContentWrapper.style.height = '0';\n  };\n\n  AgPanel.prototype.renderComponent = function () {\n    var _this = this;\n\n    var eGui = this.getGui();\n    eGui.focus();\n\n    this.close = function () {\n      eGui.parentElement.removeChild(eGui);\n\n      _this.destroy();\n    };\n  };\n\n  AgPanel.prototype.updateDragStartPosition = function (x, y) {\n    this.dragStartPosition = {\n      x: x,\n      y: y\n    };\n  };\n\n  AgPanel.prototype.calculateMouseMovement = function (params) {\n    var parentRect = this.popupParent.getBoundingClientRect();\n    var e = params.e,\n        isLeft = params.isLeft,\n        isTop = params.isTop,\n        anywhereWithin = params.anywhereWithin,\n        topBuffer = params.topBuffer;\n    var movementX = e.clientX - this.dragStartPosition.x;\n    var movementY = e.clientY - this.dragStartPosition.y;\n    var width = this.getWidth();\n    var height = this.getHeight(); // skip if cursor is outside of popupParent horizontally\n\n    var skipX = parentRect.left >= e.clientX && this.position.x <= 0 || parentRect.right <= e.clientX && parentRect.right <= this.position.x + parentRect.left + width;\n\n    if (!skipX) {\n      if (isLeft) {\n        skipX = // skip if we are moving to the left and the cursor\n        // is positioned to the right of the left side anchor\n        movementX < 0 && e.clientX > this.position.x + parentRect.left || // skip if we are moving to the right and the cursor\n        // is positioned to the left of the dialog\n        movementX > 0 && e.clientX < this.position.x + parentRect.left;\n      } else {\n        if (anywhereWithin) {\n          // if anywhereWithin is true, we allow to move\n          // as long as the cursor is within the dialog\n          skipX = movementX < 0 && e.clientX > this.position.x + parentRect.left + width || movementX > 0 && e.clientX < this.position.x + parentRect.left;\n        } else {\n          skipX = // if the movement is bound to the right side of the dialog\n          // we skip if we are moving to the left and the cursor\n          // is to the right of the dialog\n          movementX < 0 && e.clientX > this.position.x + parentRect.left + width || // or skip if we are moving to the right and the cursor\n          // is to the left of the right side anchor\n          movementX > 0 && e.clientX < this.position.x + parentRect.left + width;\n        }\n      }\n    }\n\n    movementX = skipX ? 0 : movementX;\n    var skipY = // skip if cursor is outside of popupParent vertically\n    parentRect.top >= e.clientY && this.position.y <= 0 || parentRect.bottom <= e.clientY && parentRect.bottom <= this.position.y + parentRect.top + height || isTop && ( // skip if we are moving to towards top and the cursor is\n    // below the top anchor + topBuffer\n    // note: topBuffer is used when moving the dialog using the title bar\n    movementY < 0 && e.clientY > this.position.y + parentRect.top + (topBuffer || 0) || // skip if we are moving to the bottom and the cursor is\n    // above the top anchor\n    movementY > 0 && e.clientY < this.position.y + parentRect.top) || // we are anchored to the bottom of the dialog\n    !isTop && ( // skip if we are moving towards the top and the cursor\n    // is below the bottom anchor\n    movementY < 0 && e.clientY > this.position.y + parentRect.top + height || // skip if we are moving towards the bottom and the cursor\n    // is above the bottom anchor\n    movementY > 0 && e.clientY < this.position.y + parentRect.top + height);\n    movementY = skipY ? 0 : movementY;\n    return {\n      movementX: movementX,\n      movementY: movementY\n    };\n  };\n\n  AgPanel.prototype.refreshSize = function () {\n    var _a = this.size,\n        width = _a.width,\n        height = _a.height;\n\n    if (!width) {\n      this.setWidth(this.getGui().offsetWidth);\n    }\n\n    if (!height) {\n      this.setHeight(this.getGui().offsetHeight);\n    }\n  };\n\n  AgPanel.prototype.offsetElement = function (x, y) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    var ePopup = this.getGui();\n    this.popupService.positionPopup({\n      ePopup: ePopup,\n      x: x,\n      y: y,\n      minWidth: this.minWidth,\n      minHeight: this.minHeight,\n      keepWithinBounds: true\n    });\n    this.position.x = parseInt(ePopup.style.left, 10);\n    this.position.y = parseInt(ePopup.style.top, 10);\n  };\n\n  AgPanel.prototype.getHeight = function () {\n    return this.size.height;\n  };\n\n  AgPanel.prototype.setHeight = function (height) {\n    var eGui = this.getGui();\n    var isPercent = false;\n\n    if (typeof height === 'string' && height.indexOf('%') !== -1) {\n      _.setFixedHeight(eGui, height);\n\n      height = _.getAbsoluteHeight(eGui);\n      isPercent = true;\n    } else {\n      height = Math.max(this.minHeight, height);\n      var offsetParent = eGui.offsetParent;\n\n      if (offsetParent && offsetParent.clientHeight && height + this.position.y > offsetParent.clientHeight) {\n        height = offsetParent.clientHeight - this.position.y;\n      }\n    }\n\n    if (this.size.height === height) {\n      return;\n    }\n\n    this.size.height = height;\n\n    if (!isPercent) {\n      _.setFixedHeight(eGui, height);\n    } else {\n      eGui.style.maxHeight = 'unset';\n      eGui.style.minHeight = 'unset';\n    }\n  };\n\n  AgPanel.prototype.getWidth = function () {\n    return this.size.width;\n  };\n\n  AgPanel.prototype.setWidth = function (width) {\n    var eGui = this.getGui();\n    var isPercent = false;\n\n    if (typeof width === 'string' && width.indexOf('%') !== -1) {\n      _.setFixedWidth(eGui, width);\n\n      width = _.getAbsoluteWidth(eGui);\n      isPercent = true;\n    } else {\n      width = Math.max(this.minWidth, width);\n      var offsetParent = eGui.offsetParent;\n\n      if (offsetParent && offsetParent.clientWidth && width + this.position.x > offsetParent.clientWidth) {\n        width = offsetParent.clientWidth - this.position.x;\n      }\n    }\n\n    if (this.size.width === width) {\n      return;\n    }\n\n    this.size.width = width;\n\n    if (!isPercent) {\n      _.setFixedWidth(eGui, width);\n    } else {\n      eGui.style.maxWidth = 'unset';\n      eGui.style.minWidth = 'unset';\n    }\n  };\n\n  AgPanel.prototype.center = function () {\n    var eGui = this.getGui();\n    var x = eGui.offsetParent.clientWidth / 2 - this.getWidth() / 2;\n    var y = eGui.offsetParent.clientHeight / 2 - this.getHeight() / 2;\n    this.offsetElement(x, y);\n  };\n\n  AgPanel.prototype.setClosable = function (closable) {\n    if (closable !== this.closable) {\n      this.closable = closable;\n    }\n\n    if (closable) {\n      var closeButtonComp = this.closeButtonComp = new Component(AgPanel.CLOSE_BTN_TEMPLATE);\n      this.getContext().wireBean(closeButtonComp);\n      var eGui = closeButtonComp.getGui();\n      eGui.appendChild(_.createIconNoSpan('close', this.gridOptionsWrapper));\n      this.addTitleBarButton(closeButtonComp);\n      closeButtonComp.addDestroyableEventListener(eGui, 'click', this.onBtClose.bind(this));\n    } else if (this.closeButtonComp) {\n      var eGui = this.closeButtonComp.getGui();\n      eGui.parentElement.removeChild(eGui);\n      this.closeButtonComp.destroy();\n      this.closeButtonComp = undefined;\n    }\n  };\n\n  AgPanel.prototype.setBodyComponent = function (bodyComponent) {\n    bodyComponent.setParentComponent(this);\n    this.eContentWrapper.appendChild(bodyComponent.getGui());\n  };\n\n  AgPanel.prototype.addTitleBarButton = function (button, position) {\n    var eTitleBarButtons = this.eTitleBarButtons;\n    var buttons = eTitleBarButtons.children;\n    var len = buttons.length;\n\n    if (position == null) {\n      position = len;\n    }\n\n    position = Math.max(0, Math.min(position, len));\n    var eGui = button.getGui();\n\n    _.addCssClass(eGui, 'ag-button');\n\n    if (position === 0) {\n      eTitleBarButtons.insertAdjacentElement('afterbegin', eGui);\n    } else if (position === len) {\n      eTitleBarButtons.insertAdjacentElement('beforeend', eGui);\n    } else {\n      buttons[position - 1].insertAdjacentElement('afterend', eGui);\n    }\n\n    button.setParentComponent(this);\n  };\n\n  AgPanel.prototype.getBodyHeight = function () {\n    return _.getInnerHeight(this.eContentWrapper);\n  };\n\n  AgPanel.prototype.getBodyWidth = function () {\n    return _.getInnerWidth(this.eContentWrapper);\n  };\n\n  AgPanel.prototype.setTitle = function (title) {\n    this.eTitle.innerText = title;\n  }; // called when user hits the 'x' in the top right\n\n\n  AgPanel.prototype.onBtClose = function () {\n    this.close();\n  };\n\n  AgPanel.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    if (this.closeButtonComp) {\n      this.closeButtonComp.destroy();\n      this.closeButtonComp = undefined;\n    }\n\n    var eGui = this.getGui();\n\n    if (eGui && eGui.offsetParent) {\n      this.close();\n    }\n  };\n\n  AgPanel.TEMPLATE = \"<div class=\\\"ag-panel\\\" tabindex=\\\"-1\\\">\\n            <div ref=\\\"eTitleBar\\\" class=\\\"ag-title-bar ag-unselectable\\\">\\n                <span ref=\\\"eTitle\\\" class=\\\"ag-title-bar-title\\\"></span>\\n                <div ref=\\\"eTitleBarButtons\\\" class=\\\"ag-title-bar-buttons\\\"></div>\\n            </div>\\n            <div ref=\\\"eContentWrapper\\\" class=\\\"ag-panel-content-wrapper\\\"></div>\\n        </div>\";\n  AgPanel.CLOSE_BTN_TEMPLATE = \"<div class=\\\"ag-button\\\"></div>\";\n\n  __decorate([Autowired('popupService')], AgPanel.prototype, \"popupService\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], AgPanel.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([RefSelector('eContentWrapper')], AgPanel.prototype, \"eContentWrapper\", void 0);\n\n  __decorate([RefSelector('eTitleBar')], AgPanel.prototype, \"eTitleBar\", void 0);\n\n  __decorate([RefSelector('eTitleBarButtons')], AgPanel.prototype, \"eTitleBarButtons\", void 0);\n\n  __decorate([RefSelector('eTitle')], AgPanel.prototype, \"eTitle\", void 0);\n\n  __decorate([PostConstruct], AgPanel.prototype, \"postConstruct\", null);\n\n  return AgPanel;\n}(Component);\n\nexport { AgPanel };","map":null,"metadata":{},"sourceType":"module"}