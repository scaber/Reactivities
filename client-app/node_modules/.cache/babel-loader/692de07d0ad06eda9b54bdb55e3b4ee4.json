{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.NominatimSearch = void 0;\n\nrequire(\"antd/es/auto-complete/style\");\n\nvar _autoComplete = _interopRequireDefault(require(\"antd/es/auto-complete\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Logger = _interopRequireDefault(require(\"@terrestris/base-util/dist/Logger\"));\n\nvar _UrlUtil = _interopRequireDefault(require(\"@terrestris/base-util/dist/UrlUtil/UrlUtil\"));\n\nvar _proj = require(\"ol/proj\");\n\nvar _constants = require(\"../../constants\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Option = _autoComplete[\"default\"].Option;\n/**\n * The NominatimSearch.\n *\n * @class NominatimSearch\n * @extends React.Component\n */\n\nvar NominatimSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NominatimSearch, _React$Component);\n  /**\n   * The className added to this component.\n   * @private\n   */\n\n  /**\n   * Create the NominatimSearch.\n   *\n   * @param props The initial props.\n   * @constructs NominatimSearch\n   */\n\n\n  function NominatimSearch(props) {\n    var _this;\n\n    _classCallCheck(this, NominatimSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NominatimSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"nominatimsearch\"));\n\n    _this.state = {\n      searchTerm: '',\n      dataSource: []\n    };\n    _this.onUpdateInput = _this.onUpdateInput.bind(_assertThisInitialized(_this));\n    _this.onMenuItemSelected = _this.onMenuItemSelected.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * Called if the input of the AutoComplete is being updated. It sets the\n   * current inputValue as searchTerm and starts a search if the inputValue has\n   * a length of at least `this.props.minChars` (default 3).\n   *\n   * @param inputValue The inputValue. Undefined if clear btn\n   *                                      is pressed.\n   */\n\n\n  _createClass(NominatimSearch, [{\n    key: \"onUpdateInput\",\n    value: function onUpdateInput(inputValue) {\n      var _this2 = this;\n\n      var onClear = this.props.onClear;\n      this.setState({\n        dataSource: []\n      });\n      this.setState({\n        searchTerm: inputValue || ''\n      }, function () {\n        if (_this2.state.searchTerm.length >= _this2.props.minChars) {\n          _this2.doSearch();\n        }\n      });\n\n      if (!inputValue && onClear) {\n        onClear();\n      }\n    }\n    /**\n     * Perform the search.\n     */\n\n  }, {\n    key: \"doSearch\",\n    value: function doSearch() {\n      var baseParams = {\n        format: this.props.format,\n        viewbox: this.props.viewbox,\n        bounded: this.props.bounded,\n        polygon_geojson: this.props.polygon_geojson,\n        addressdetails: this.props.addressdetails,\n        limit: this.props.limit,\n        countrycodes: this.props.countrycodes,\n        q: this.state.searchTerm\n      };\n\n      var getRequestParams = _UrlUtil[\"default\"].objectToRequestString(baseParams);\n\n      fetch(\"\".concat(this.props.nominatimBaseUrl).concat(getRequestParams)).then(function (response) {\n        return response.json();\n      }).then(this.onFetchSuccess.bind(this))[\"catch\"](this.onFetchError.bind(this));\n    }\n    /**\n     * This function gets called on success of the nominatim fetch.\n     * It sets the response as dataSource.\n     *\n     * @param response The found features.\n     */\n\n  }, {\n    key: \"onFetchSuccess\",\n    value: function onFetchSuccess(response) {\n      this.setState({\n        dataSource: response\n      });\n    }\n    /**\n     * This function gets called when the nomintim fetch returns an error.\n     * It logs the error to the console.\n     *\n     * @param error The errorstring.\n     */\n\n  }, {\n    key: \"onFetchError\",\n    value: function onFetchError(error) {\n      _Logger[\"default\"].error(\"Error while requesting Nominatim: \".concat(error));\n    }\n    /**\n     * The function describes what to do when an item is selected.\n     *\n     * @param key The key of the selected option.\n     */\n\n  }, {\n    key: \"onMenuItemSelected\",\n    value: function onMenuItemSelected(key) {\n      var selected = this.state.dataSource.find(function (i) {\n        return i.place_id.toString() === key.toString();\n      });\n      this.props.onSelect(selected, this.props.map);\n    }\n    /**\n     * The render function.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          nominatimBaseUrl = _this$props.nominatimBaseUrl,\n          format = _this$props.format,\n          viewbox = _this$props.viewbox,\n          bounded = _this$props.bounded,\n          polygon_geojson = _this$props.polygon_geojson,\n          addressdetails = _this$props.addressdetails,\n          limit = _this$props.limit,\n          countrycodes = _this$props.countrycodes,\n          map = _this$props.map,\n          onSelect = _this$props.onSelect,\n          renderOption = _this$props.renderOption,\n          passThroughProps = _objectWithoutProperties(_this$props, [\"className\", \"nominatimBaseUrl\", \"format\", \"viewbox\", \"bounded\", \"polygon_geojson\", \"addressdetails\", \"limit\", \"countrycodes\", \"map\", \"onSelect\", \"renderOption\"]);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      return React.createElement(_autoComplete[\"default\"], _extends({\n        className: finalClassName,\n        allowClear: true,\n        placeholder: \"Ortsname, Stra\\xDFenname, Stadtteilname, POI usw.\",\n        dataSource: this.state.dataSource.map(renderOption.bind(this)),\n        onChange: this.onUpdateInput,\n        onSelect: this.onMenuItemSelected\n      }, passThroughProps));\n    }\n  }]);\n\n  return NominatimSearch;\n}(React.Component);\n\nexports.NominatimSearch = NominatimSearch;\n\n_defineProperty(NominatimSearch, \"defaultProps\", {\n  nominatimBaseUrl: 'https://nominatim.openstreetmap.org/search?',\n  format: 'json',\n  viewbox: '-180,90,180,-90',\n  bounded: 1,\n  polygon_geojson: 1,\n  addressdetails: 1,\n  limit: 10,\n  countrycodes: 'de',\n  minChars: 3,\n\n  /**\n   * Create an AutoComplete.Option from the given data.\n   *\n   * @param item The tuple as an object.\n   * @return The returned option\n   */\n  renderOption: function renderOption(item) {\n    return React.createElement(Option, {\n      key: item.place_id\n    }, item.display_name);\n  },\n\n  /**\n   * The default onSelect method if no onSelect prop is given. It zooms to the\n   * selected item.\n   *\n   * @param selected The selected item as it is returned by nominatim.\n   */\n  onSelect: function onSelect(selected, olMap) {\n    if (selected && selected.boundingbox) {\n      var olView = olMap.getView();\n      var extent = [selected.boundingbox[2], selected.boundingbox[0], selected.boundingbox[3], selected.boundingbox[1]];\n      extent = extent.map(function (coord) {\n        return parseFloat(coord);\n      });\n      extent = (0, _proj.transformExtent)(extent, 'EPSG:4326', olView.getProjection().getCode());\n      olView.fit(extent, {\n        duration: 500\n      });\n    }\n  },\n  style: {\n    width: 200\n  }\n});\n\nvar _default = NominatimSearch;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}