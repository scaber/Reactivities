{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfilePage.tsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport ProfileHeader from './ProfileHeader';\nimport { ProfileContent } from './ProfileContent';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { observer } from 'mobx-react-lite';\n\nconst ProfilePage = ({\n  match\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadingProfile,\n    profile,\n    loadProfile,\n    follow,\n    unfollow,\n    isCurrentUser,\n    loading,\n    setActiveTab\n  } = rootStore.profileStore;\n  useEffect(() => {\n    loadProfile(match.params.userName);\n  }, [loadProfile, match]);\n  if (loadingProfile) return /*#__PURE__*/React.createElement(LoadingComponent, {\n    content: \"Loading profile...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 30\n    }\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ProfileHeader, {\n    profile: profile,\n    isCurrentUser: isCurrentUser,\n    loading: loading,\n    follow: follow,\n    unfollow: unfollow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ProfileContent, {\n    setActiveTab: setActiveTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default observer(ProfilePage);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/profiles/ProfilePage.tsx"],"names":["React","useContext","useEffect","Grid","ProfileHeader","ProfileContent","RootStoreContext","LoadingComponent","observer","ProfilePage","match","rootStore","loadingProfile","profile","loadProfile","follow","unfollow","isCurrentUser","loading","setActiveTab","profileStore","params","userName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AAEA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAQA,MAAMC,WAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACnD,QAAMC,SAAS,GAAGV,UAAU,CAACK,gBAAD,CAA5B;AACA,QAAM;AACJM,IAAAA,cADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,OAPI;AAQJC,IAAAA;AARI,MASFR,SAAS,CAACS,YATd;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW,CAACJ,KAAK,CAACW,MAAN,CAAaC,QAAd,CAAX;AACD,GAFQ,EAEN,CAACR,WAAD,EAAcJ,KAAd,CAFM,CAAT;AAIA,MAAIE,cAAJ,EAAoB,oBAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEpB,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,aAAa,EAAEI,aAFjB;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,MAAM,EAAEH,MAJV;AAKE,IAAA,QAAQ,EAAEC,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,cAAD;AAAgB,IAAA,YAAY,EAAEG,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF;AAcD,CAjCD;;AAmCA,eAAeX,QAAQ,CAACC,WAAD,CAAvB","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport {ProfileContent} from './ProfileContent';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface RouteParams {\r\n    userName: string;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams> {}\r\n\r\nconst ProfilePage: React.FC<IProps> = ({ match }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadingProfile,\r\n    profile,\r\n    loadProfile,\r\n    follow,\r\n    unfollow,\r\n    isCurrentUser,\r\n    loading,\r\n    setActiveTab\r\n  } = rootStore.profileStore;\r\n \r\n  useEffect(() => {\r\n    loadProfile(match.params.userName);\r\n  }, [loadProfile, match]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content='Loading profile...' />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        <ProfileHeader\r\n          profile={profile!}\r\n          isCurrentUser={isCurrentUser}\r\n          loading={loading}\r\n          follow={follow}\r\n          unfollow={unfollow}\r\n        />\r\n        <ProfileContent setActiveTab={setActiveTab}  />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);"]},"metadata":{},"sourceType":"module"}