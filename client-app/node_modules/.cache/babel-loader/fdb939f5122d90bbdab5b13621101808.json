{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfileHeader.tsx\";\nimport React from 'react';\nimport { Segment, Item, Header, Button, Grid, Statistic, Divider, Reveal } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\n\nconst ProfileHeader = ({\n  profile,\n  isCurrentUser,\n  loading,\n  follow,\n  unfollow\n}) => {\n  return /*#__PURE__*/React.createElement(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Item.Image, {\n    avatar: true,\n    size: \"small\",\n    src: profile.image || '/assets/user.png',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Item.Content, {\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, profile.display))))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Statistic.Group, {\n    widths: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Statistic, {\n    label: \"Followers\",\n    value: profile.followersCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    label: \"Following\",\n    value: profile.followingCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), !isCurrentUser && /*#__PURE__*/React.createElement(Reveal, {\n    animated: \"move\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Reveal.Content, {\n    visible: true,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fluid: true,\n    color: \"teal\",\n    content: profile.following ? 'Following' : 'Not following',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Reveal.Content, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    fluid: true,\n    basic: true,\n    color: profile.following ? 'red' : 'green',\n    content: profile.following ? 'Unfollow' : 'Follow',\n    onClick: profile.following ? () => unfollow(profile.userName) : () => follow(profile.userName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default observer(ProfileHeader);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/profiles/ProfileHeader.tsx"],"names":["React","Segment","Item","Header","Button","Grid","Statistic","Divider","Reveal","observer","ProfileHeader","profile","isCurrentUser","loading","follow","unfollow","image","display","followersCount","followingCount","width","following","userName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Statistic,\r\n  Divider,\r\n  Reveal\r\n} from 'semantic-ui-react';\r\nimport { IProfile } from '../../app/models/profile';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n  isCurrentUser: boolean;\r\n  loading: boolean;\r\n  follow: (username: string) => void;\r\n  unfollow: (username: string) => void;\r\n}\r\n\r\nconst ProfileHeader: React.FC<IProps> = ({\r\n  profile,\r\n  isCurrentUser,\r\n  loading,\r\n  follow,\r\n  unfollow\r\n}) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size='small'\r\n                src={profile.image || '/assets/user.png'}\r\n              />\r\n              <Item.Content verticalAlign='middle'>\r\n                <Header as='h1'>{profile.display}</Header>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label='Followers' value={profile.followersCount} />\r\n            <Statistic label='Following' value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          {!isCurrentUser && (\r\n            <Reveal animated='move'>\r\n              <Reveal.Content visible style={{ width: '100%' }}>\r\n                <Button\r\n                  fluid\r\n                  color='teal'\r\n                  content={profile.following ? 'Following' : 'Not following'}\r\n                />\r\n              </Reveal.Content>\r\n              <Reveal.Content hidden>\r\n                <Button\r\n                  loading={loading}\r\n                  fluid\r\n                  basic\r\n                  color={profile.following ? 'red' : 'green'}\r\n                  content={profile.following ? 'Unfollow' : 'Follow'}\r\n                  onClick={\r\n                    profile.following\r\n                      ? () => unfollow(profile.userName)\r\n                      : () => follow(profile.userName)\r\n                  }\r\n                />\r\n              </Reveal.Content>\r\n            </Reveal>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileHeader);"]},"metadata":{},"sourceType":"module"}