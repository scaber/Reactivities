{"ast":null,"code":"import React,{useEffect,useContext}from'react';import{observer}from'mobx-react-lite';import{Tab,Grid,Header,Card,Image}from'semantic-ui-react';import{Link}from'react-router-dom';import{format}from'date-fns';import{RootStoreContext}from'../../app/stores/rootStore';var panes=[{menuItem:'Future Events',pane:{key:'futureEvents'}},{menuItem:'Past Events',pane:{key:'pastEvents'}},{menuItem:'Hosting',pane:{key:'hosted'}}];var ProfileEvents=function ProfileEvents(){var rootStore=useContext(RootStoreContext);var _ref=rootStore.profileStore,loadUserActivities=_ref.loadUserActivities,profile=_ref.profile,loadingActivities=_ref.loadingActivities,userActivities=_ref.userActivities;useEffect(function(){loadUserActivities(profile.userName);},[loadUserActivities,profile]);var handleTabChange=function handleTabChange(e,data){var predicate;switch(data.activeIndex){case 1:predicate='past';break;case 2:predicate='hosting';break;default:predicate='future';break;}loadUserActivities(profile.userName,predicate);};return/*#__PURE__*/React.createElement(Tab.Pane,{loading:loadingActivities},/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:16},/*#__PURE__*/React.createElement(Header,{floated:\"left\",icon:\"calendar\",content:'Activities'})),/*#__PURE__*/React.createElement(Grid.Column,{width:16},/*#__PURE__*/React.createElement(Tab,{panes:panes,menu:{secondary:true,pointing:true},onTabChange:function onTabChange(e,data){return handleTabChange(e,data);}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Card.Group,{itemsPerRow:4},userActivities.map(function(activity){return/*#__PURE__*/React.createElement(Card,{as:Link,to:\"/activities/\".concat(activity.id),key:activity.id},/*#__PURE__*/React.createElement(Image,{src:\"/assets/categoryImages/\".concat(activity.category,\".jpg\"),style:{minHeight:100,objectFit:'cover'}}),/*#__PURE__*/React.createElement(Card.Content,null,/*#__PURE__*/React.createElement(Card.Header,{textAlign:\"center\"},activity.title),/*#__PURE__*/React.createElement(Card.Meta,{textAlign:\"center\"},/*#__PURE__*/React.createElement(\"div\",null,format(new Date(activity.date),'do LLL')),/*#__PURE__*/React.createElement(\"div\",null,format(new Date(activity.date),'h:mm a')))));})))));};export default observer(ProfileEvents);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/profiles/ProfileActivities.tsx"],"names":["React","useEffect","useContext","observer","Tab","Grid","Header","Card","Image","Link","format","RootStoreContext","panes","menuItem","pane","key","ProfileEvents","rootStore","profileStore","loadUserActivities","profile","loadingActivities","userActivities","userName","handleTabChange","e","data","predicate","activeIndex","secondary","pointing","map","activity","id","category","minHeight","objectFit","title","Date","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IUserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\nconst panes = [\r\n  { menuItem: 'Future Events', pane: { key: 'futureEvents' } },\r\n  { menuItem: 'Past Events', pane: { key: 'pastEvents' } },\r\n  { menuItem: 'Hosting', pane: { key: 'hosted' } }\r\n];\r\n\r\nconst ProfileEvents = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities\r\n  } = rootStore.profileStore!;\r\n\r\n  useEffect(() => {\r\n     loadUserActivities(profile!.userName);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    data: TabProps\r\n  ) => {\r\n    let predicate;\r\n    \r\n    switch (data.activeIndex) {\r\n      case 1:\r\n        predicate = 'past';\r\n        break;\r\n      case 2:\r\n        predicate = 'hosting';\r\n        break;\r\n      default:\r\n        predicate = 'future';\r\n        break;\r\n    }\r\n     loadUserActivities(profile!.userName, predicate);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated='left' icon='calendar' content={'Activities'} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: IUserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: 'cover' }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign='center'>\r\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEvents);\r\n"]},"metadata":{},"sourceType":"module"}