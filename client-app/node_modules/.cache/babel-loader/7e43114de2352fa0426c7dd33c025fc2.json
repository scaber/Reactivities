{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfileHeader.tsx\";\nimport React from 'react';\nimport { Segment, Item, Header, Button, Grid, Statistic, Divider, Reveal } from 'semantic-ui-react';\n\nconst ProfileHeader = ({\n  activity\n}) => {\n  const host = activity.attendees.filter(x => x.isHost)[0];\n  return React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Item.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Item.Image, {\n    avatar: true,\n    size: \"small\",\n    src: host.image || \"/assets/user.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Item.Content, {\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"DisplayName\"))))), React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Statistic.Group, {\n    widths: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    label: \"Followers\",\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    label: \"Following\",\n    value: \"42\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Reveal, {\n    animated: \"move\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Reveal.Content, {\n    visible: true,\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fluid: true,\n    color: \"teal\",\n    content: \"Following\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(Reveal.Content, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fluid: true,\n    basic: true,\n    color: true ? 'red' : 'green',\n    content: true ? 'Unfollow' : 'Follow',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))))));\n};\n\nexport default ProfileHeader;","map":{"version":3,"sources":["C:\\Projects\\Reactivities\\client-app\\src\\features\\profiles\\ProfileHeader.tsx"],"names":["React","Segment","Item","Header","Button","Grid","Statistic","Divider","Reveal","ProfileHeader","activity","host","attendees","filter","x","isHost","image","width"],"mappings":";AAAC,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,IAAxC,EAA8CC,SAA9C,EAAyDC,OAAzD,EAAkEC,MAAlE,QAAgF,mBAAhF;;AAGC,MAAMC,aAAgD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3E,QAAMC,IAAI,GAAGD,QAAQ,CAACE,SAAT,CAAmBC,MAAnB,CAA2BC,CAAD,IAAOA,CAAC,CAACC,MAAnC,EAA2C,CAA3C,CAAb;AAEC,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,MAAM,MADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,GAAG,EAAEJ,IAAI,CAACK,KAAL,IAAc,kBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,aAAa,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CANF,CADF,CADF,CADF,EAeE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,KAAX;AAAiB,IAAA,MAAM,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,WAAjB;AAA6B,IAAA,KAAK,EAAC,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,WAAjB;AAA6B,IAAA,KAAK,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,OAAO,MAAvB;AAAwB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,KAAK,EAAE,OAAO,KAAP,GAAe,OAHxB;AAIE,IAAA,OAAO,EAAE,OAAO,UAAP,GAAoB,QAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CANF,CAfF,CADF,CADF;AA4CD,CA/CA;;AAiDD,eAAeR,aAAf","sourcesContent":[" import React from 'react';\r\n import { Segment, Item, Header, Button, Grid, Statistic, Divider, Reveal } from 'semantic-ui-react';\r\nimport { IActivity } from '../../app/models/activity';\r\n \r\n  const ProfileHeader: React.FC<{ activity: IActivity }> = ({ activity }) => {\r\n  const host = activity.attendees.filter((x) => x.isHost)[0];\r\n\r\n   return (\r\n     <Segment>\r\n       <Grid>\r\n         <Grid.Column width={12}>\r\n           <Item.Group>\r\n             <Item>\r\n               <Item.Image\r\n                 avatar\r\n                 size='small'\r\n                 src={host.image || \"/assets/user.png\"}\r\n               />\r\n               <Item.Content verticalAlign='middle'>\r\n                 <Header as='h1'>DisplayName</Header>\r\n               </Item.Content>\r\n             </Item>\r\n           </Item.Group>\r\n         </Grid.Column>\r\n         <Grid.Column width={4}>\r\n           <Statistic.Group widths={2}>\r\n             <Statistic label='Followers' value='5'/>\r\n             <Statistic label='Following' value='42'/>\r\n           </Statistic.Group>\r\n           <Divider/>\r\n           <Reveal animated='move'>\r\n             <Reveal.Content visible style={{ width: '100%' }}>\r\n               <Button\r\n                 fluid\r\n                 color='teal'\r\n                 content='Following'\r\n               />\r\n             </Reveal.Content>\r\n             <Reveal.Content hidden>\r\n               <Button\r\n                 fluid\r\n                 basic\r\n                 color={true ? 'red' : 'green'}\r\n                 content={true ? 'Unfollow' : 'Follow'}\r\n               />\r\n             </Reveal.Content>\r\n           </Reveal>\r\n         </Grid.Column>\r\n       </Grid>\r\n     </Segment>\r\n   );\r\n };\r\n \r\n export default ProfileHeader;\r\n "]},"metadata":{},"sourceType":"module"}