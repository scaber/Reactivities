{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v22.1.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired } from '../context/context';\nimport { AgAbstractInputField } from './agAbstractInputField';\nimport { _ } from '../utils';\n\nvar AgCheckbox =\n/** @class */\nfunction (_super) {\n  __extends(AgCheckbox, _super);\n\n  function AgCheckbox() {\n    var _this = _super.call(this) || this;\n\n    _this.className = 'ag-checkbox';\n    _this.nativeInputClassName = 'ag-native-checkbox';\n    _this.displayTag = 'input';\n    _this.inputType = 'checkbox';\n    _this.labelAlignment = 'right';\n    _this.iconMap = {\n      selected: 'checkboxChecked',\n      unselected: 'checkboxUnchecked',\n      indeterminate: 'checkboxIndeterminate'\n    };\n    _this.selected = false;\n    _this.readOnly = false;\n    _this.passive = false;\n\n    _this.setTemplate(_this.TEMPLATE.replace(/%displayField%/g, _this.displayTag));\n\n    return _this;\n  }\n\n  AgCheckbox.prototype.postConstruct = function () {\n    _super.prototype.postConstruct.call(this);\n\n    if (!this.gridOptionsWrapper.useNativeCheckboxes()) {\n      _.addCssClass(this.eInput, 'ag-hidden');\n\n      this.addIconsPlaceholder();\n      this.updateIcons();\n    } else {\n      _.addCssClass(this.eInput, this.nativeInputClassName);\n    }\n  };\n\n  AgCheckbox.prototype.addInputListeners = function () {\n    var _this = this;\n\n    if (this.gridOptionsWrapper.useNativeCheckboxes()) {\n      this.addDestroyableEventListener(this.eInput, 'click', this.onCheckboxClick.bind(this));\n    } else {\n      this.addDestroyableEventListener(this.getGui(), 'click', function (e) {\n        return _this.onClick(e);\n      });\n      this.addDestroyableEventListener(this.eInput, 'change', function (e) {\n        return _this.setValue(e.target.checked, true);\n      });\n    }\n  };\n\n  AgCheckbox.prototype.getNextValue = function () {\n    return this.selected === undefined ? true : !this.selected;\n  };\n\n  AgCheckbox.prototype.setPassive = function (passive) {\n    this.passive = passive;\n  };\n\n  AgCheckbox.prototype.isReadOnly = function () {\n    return this.readOnly;\n  };\n\n  AgCheckbox.prototype.setReadOnly = function (readOnly) {\n    this.eInput.readOnly = readOnly;\n    this.readOnly = readOnly;\n    this.updateIcons();\n  };\n\n  AgCheckbox.prototype.toggle = function () {\n    var nextValue = this.getNextValue();\n\n    if (this.passive) {\n      this.dispatchChange(nextValue);\n    } else {\n      this.setValue(nextValue);\n    }\n  };\n\n  AgCheckbox.prototype.getValue = function () {\n    return this.isSelected();\n  };\n\n  AgCheckbox.prototype.setValue = function (value, silent) {\n    this.setSelected(value, silent);\n    return this;\n  };\n\n  AgCheckbox.prototype.isSelected = function () {\n    return this.selected;\n  };\n\n  AgCheckbox.prototype.setSelected = function (selected, silent) {\n    if (this.selected === selected) {\n      return;\n    }\n\n    this.selected = typeof selected === 'boolean' ? selected : undefined;\n    this.eInput.checked = this.selected;\n    this.eInput.indeterminate = this.selected === undefined;\n    this.updateIcons();\n\n    if (!silent) {\n      this.dispatchChange(this.selected);\n    }\n  };\n\n  AgCheckbox.prototype.getIconName = function () {\n    var value = this.getValue();\n    var prop = value === undefined ? 'indeterminate' : value ? 'selected' : 'unselected';\n    var readOnlyStr = this.isReadOnly() ? 'ReadOnly' : '';\n    return \"\" + this.iconMap[prop] + readOnlyStr;\n  };\n\n  AgCheckbox.prototype.updateIcons = function () {\n    if (!this.gridOptionsWrapper.useNativeCheckboxes()) {\n      _.clearElement(this.eIconEl);\n\n      this.eIconEl.appendChild(_.createIconNoSpan(this.getIconName(), this.gridOptionsWrapper, null));\n    }\n  };\n\n  AgCheckbox.prototype.dispatchChange = function (selected) {\n    this.dispatchEvent({\n      type: AgCheckbox.EVENT_CHANGED,\n      selected: selected\n    });\n  };\n\n  AgCheckbox.prototype.addIconsPlaceholder = function () {\n    var iconDiv = document.createElement('div');\n    this.eWrapper.appendChild(iconDiv);\n    this.eIconEl = iconDiv;\n  };\n\n  AgCheckbox.prototype.onClick = function (event) {\n    // if we don't set the path, then won't work in Edge, as once the <span> is removed from the dom,\n    // it's not possible to calculate the path by following the parent's chain. in other browser (eg\n    // chrome) there is event.path for this purpose, but missing in Edge.\n    _.addAgGridEventPath(event);\n\n    if (!this.readOnly) {\n      this.toggle();\n    }\n  };\n\n  AgCheckbox.prototype.onCheckboxClick = function (e) {\n    this.selected = e.target.checked;\n    this.dispatchChange(this.selected);\n  };\n\n  __decorate([Autowired('gridOptionsWrapper')], AgCheckbox.prototype, \"gridOptionsWrapper\", void 0);\n\n  return AgCheckbox;\n}(AgAbstractInputField);\n\nexport { AgCheckbox };","map":null,"metadata":{},"sourceType":"module"}