{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A menu can contain a sub menu.\n */\n\nfunction MenuMenu(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      position = props.position;\n  var classes = cx(position, 'menu', className);\n  var rest = getUnhandledProps(MenuMenu, props);\n  var ElementType = getElementType(MenuMenu, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMenuMenu.handledProps = [\"as\", \"children\", \"className\", \"content\", \"position\"];\nMenuMenu.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A sub menu can take left or right position. */\n  position: PropTypes.oneOf(['left', 'right'])\n} : {};\nexport default MenuMenu;","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/semantic-ui-react/dist/es/collections/Menu/MenuMenu.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","MenuMenu","props","children","className","content","position","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","oneOf"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,QAAkF,WAAlF;AACA;;;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,QAAQ,GAAGJ,KAAK,CAACI,QAHrB;AAIA,MAAIC,OAAO,GAAGb,EAAE,CAACY,QAAD,EAAW,MAAX,EAAmBF,SAAnB,CAAhB;AACA,MAAII,IAAI,GAAGR,iBAAiB,CAACC,QAAD,EAAWC,KAAX,CAA5B;AACA,MAAIO,WAAW,GAAGV,cAAc,CAACE,QAAD,EAAWC,KAAX,CAAhC;AACA,SAAON,KAAK,CAACc,aAAN,CAAoBD,WAApB,EAAiChB,QAAQ,CAAC,EAAD,EAAKe,IAAL,EAAW;AACzDJ,IAAAA,SAAS,EAAEG;AAD8C,GAAX,CAAzC,EAEHV,aAAa,CAACc,KAAd,CAAoBR,QAApB,IAAgCE,OAAhC,GAA0CF,QAFvC,CAAP;AAGD;;AAEDF,QAAQ,CAACW,YAAT,GAAwB,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,UAA3C,CAAxB;AACAX,QAAQ,CAACY,SAAT,GAAqBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC3D;AACAC,EAAAA,EAAE,EAAEnB,eAAe,CAACmB,EAFuC;;AAI3D;AACAd,EAAAA,QAAQ,EAAER,SAAS,CAACuB,IALuC;;AAO3D;AACAd,EAAAA,SAAS,EAAET,SAAS,CAACwB,MARsC;;AAU3D;AACAd,EAAAA,OAAO,EAAEP,eAAe,CAACsB,gBAXkC;;AAa3D;AACAd,EAAAA,QAAQ,EAAEX,SAAS,CAAC0B,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB;AAdiD,CAAxC,GAejB,EAfJ;AAgBA,eAAepB,QAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A menu can contain a sub menu.\n */\n\nfunction MenuMenu(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      position = props.position;\n  var classes = cx(position, 'menu', className);\n  var rest = getUnhandledProps(MenuMenu, props);\n  var ElementType = getElementType(MenuMenu, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMenuMenu.handledProps = [\"as\", \"children\", \"className\", \"content\", \"position\"];\nMenuMenu.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A sub menu can take left or right position. */\n  position: PropTypes.oneOf(['left', 'right'])\n} : {};\nexport default MenuMenu;"]},"metadata":{},"sourceType":"module"}