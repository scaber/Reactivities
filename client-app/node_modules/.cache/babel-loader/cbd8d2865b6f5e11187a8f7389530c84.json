{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setUTCISODay;\n\nvar _index = require('../toInteger/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../../toDate/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\n\nfunction setUTCISODay(dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var day = (0, _index2.default)(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = (0, _index4.default)(dirtyDate, dirtyOptions);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/date-fns/_lib/setUTCISODay/index.js"],"names":["Object","defineProperty","exports","value","default","setUTCISODay","_index","require","_index2","_interopRequireDefault","_index3","_index4","obj","__esModule","dirtyDate","dirtyDay","dirtyOptions","arguments","length","TypeError","day","weekStartsOn","date","currentDay","getUTCDay","remainder","dayIndex","diff","setUTCDate","getUTCDate","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,MAAD,CAApC;;AAEA,IAAII,OAAO,GAAGH,OAAO,CAAC,uBAAD,CAArB;;AAEA,IAAII,OAAO,GAAGF,sBAAsB,CAACC,OAAD,CAApC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD,C,CAE/F;AACA;;;AACA,SAASP,YAAT,CAAsBS,SAAtB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyD;AACvD,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UAArE,CAAN;AACD;;AAED,MAAIE,GAAG,GAAG,CAAC,GAAGZ,OAAO,CAACJ,OAAZ,EAAqBW,QAArB,CAAV;;AAEA,MAAIK,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACjBA,IAAAA,GAAG,GAAGA,GAAG,GAAG,CAAZ;AACD;;AAED,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,IAAI,GAAG,CAAC,GAAGX,OAAO,CAACP,OAAZ,EAAqBU,SAArB,EAAgCE,YAAhC,CAAX;AACA,MAAIO,UAAU,GAAGD,IAAI,CAACE,SAAL,EAAjB;AAEA,MAAIC,SAAS,GAAGL,GAAG,GAAG,CAAtB;AACA,MAAIM,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAjC;AAEA,MAAIE,IAAI,GAAG,CAACD,QAAQ,GAAGL,YAAX,GAA0B,CAA1B,GAA8B,CAA/B,IAAoCD,GAApC,GAA0CG,UAArD;AAEAD,EAAAA,IAAI,CAACM,UAAL,CAAgBN,IAAI,CAACO,UAAL,KAAoBF,IAApC;AACA,SAAOL,IAAP;AACD;;AACDQ,MAAM,CAAC5B,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setUTCISODay;\n\nvar _index = require('../toInteger/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../../toDate/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction setUTCISODay(dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var day = (0, _index2.default)(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = (0, _index4.default)(dirtyDate, dirtyOptions);\n  var currentDay = date.getUTCDay();\n\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}