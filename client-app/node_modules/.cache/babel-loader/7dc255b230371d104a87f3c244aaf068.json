{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v22.1.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from \"../widgets/component\";\nimport { Autowired, PostConstruct } from \"../context/context\";\nimport { RefSelector } from \"../widgets/componentAnnotations\";\nimport { Events } from \"../events\";\nimport { _ } from \"../utils\";\nimport { Constants } from \"../constants\";\n\nvar PaginationComp =\n/** @class */\nfunction (_super) {\n  __extends(PaginationComp, _super);\n\n  function PaginationComp() {\n    return _super.call(this) || this;\n  }\n\n  PaginationComp.prototype.postConstruct = function () {\n    var isRtl = this.gridOptionsWrapper.isEnableRtl();\n    this.setTemplate(this.getTemplate());\n    this.btFirst.insertAdjacentElement('afterbegin', _.createIconNoSpan(isRtl ? 'last' : 'first', this.gridOptionsWrapper));\n    this.btPrevious.insertAdjacentElement('afterbegin', _.createIconNoSpan(isRtl ? 'next' : 'previous', this.gridOptionsWrapper));\n    this.btNext.insertAdjacentElement('afterbegin', _.createIconNoSpan(isRtl ? 'previous' : 'next', this.gridOptionsWrapper));\n    this.btLast.insertAdjacentElement('afterbegin', _.createIconNoSpan(isRtl ? 'first' : 'last', this.gridOptionsWrapper));\n\n    if (this.rowModel.getType() === Constants.ROW_MODEL_TYPE_SERVER_SIDE) {\n      this.serverSideRowModel = this.rowModel;\n    }\n\n    var isPaging = this.gridOptionsWrapper.isPagination();\n    var paginationPanelEnabled = isPaging && !this.gridOptionsWrapper.isSuppressPaginationPanel();\n\n    if (!paginationPanelEnabled) {\n      this.setDisplayed(false);\n      return;\n    }\n\n    this.addDestroyableEventListener(this.eventService, Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n    this.addDestroyableEventListener(this.btFirst, 'click', this.onBtFirst.bind(this));\n    this.addDestroyableEventListener(this.btLast, 'click', this.onBtLast.bind(this));\n    this.addDestroyableEventListener(this.btNext, 'click', this.onBtNext.bind(this));\n    this.addDestroyableEventListener(this.btPrevious, 'click', this.onBtPrevious.bind(this));\n    this.onPaginationChanged();\n  };\n\n  PaginationComp.prototype.onPaginationChanged = function () {\n    this.enableOrDisableButtons();\n    this.updateRowLabels();\n    this.setCurrentPageLabel();\n    this.setTotalLabels();\n  };\n\n  PaginationComp.prototype.setCurrentPageLabel = function () {\n    var pagesExist = this.paginationProxy.getTotalPages() > 0;\n    var currentPage = this.paginationProxy.getCurrentPage();\n    var toDisplay = pagesExist ? currentPage + 1 : 0;\n    this.lbCurrent.innerHTML = this.formatNumber(toDisplay);\n  };\n\n  PaginationComp.prototype.formatNumber = function (value) {\n    var userFunc = this.gridOptionsWrapper.getPaginationNumberFormatterFunc();\n\n    if (userFunc) {\n      return userFunc({\n        value: value\n      });\n    } else {\n      return _.formatNumberCommas(value);\n    }\n  };\n\n  PaginationComp.prototype.getTemplate = function () {\n    var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n    var strPage = localeTextFunc('page', 'Page');\n    var strTo = localeTextFunc('to', 'to');\n    var strOf = localeTextFunc('of', 'of');\n    var strFirst = localeTextFunc('first', 'First');\n    var strPrevious = localeTextFunc('previous', 'Previous');\n    var strNext = localeTextFunc('next', 'Next');\n    var strLast = localeTextFunc('last', 'Last');\n    return \"<div class=\\\"ag-paging-panel ag-unselectable\\\">\\n                <span ref=\\\"eSummaryPanel\\\" class=\\\"ag-paging-row-summary-panel\\\">\\n                    <span ref=\\\"lbFirstRowOnPage\\\"></span> \" + strTo + \" <span ref=\\\"lbLastRowOnPage\\\"></span> \" + strOf + \" <span ref=\\\"lbRecordCount\\\"></span>\\n                </span>\\n                <span class=\\\"ag-paging-page-summary-panel\\\">\\n                    <div ref=\\\"btFirst\\\" class=\\\"ag-paging-button\\\">\\n                        <button type=\\\"button\\\">\" + strFirst + \"</button>\\n                    </div>\\n                    <div ref=\\\"btPrevious\\\" class=\\\"ag-paging-button\\\">\\n                        <button type=\\\"button\\\">\" + strPrevious + \"</button>\\n                    </div>\\n                    \" + strPage + \" <span ref=\\\"lbCurrent\\\"></span> \" + strOf + \" <span ref=\\\"lbTotal\\\"></span>\\n                    <div ref=\\\"btNext\\\" class=\\\"ag-paging-button\\\">\\n                        <button type=\\\"button\\\">\" + strNext + \"</button>\\n                    </div>\\n                    <div ref=\\\"btLast\\\" class=\\\"ag-paging-button\\\">\\n                        <button type=\\\"button\\\">\" + strLast + \"</button>\\n                    </div>\\n                </span>\\n            </div>\";\n  };\n\n  PaginationComp.prototype.onBtNext = function () {\n    this.paginationProxy.goToNextPage();\n  };\n\n  PaginationComp.prototype.onBtPrevious = function () {\n    this.paginationProxy.goToPreviousPage();\n  };\n\n  PaginationComp.prototype.onBtFirst = function () {\n    this.paginationProxy.goToFirstPage();\n  };\n\n  PaginationComp.prototype.onBtLast = function () {\n    this.paginationProxy.goToLastPage();\n  };\n\n  PaginationComp.prototype.enableOrDisableButtons = function () {\n    var currentPage = this.paginationProxy.getCurrentPage();\n    var maxRowFound = this.paginationProxy.isLastPageFound();\n    var totalPages = this.paginationProxy.getTotalPages();\n    var disablePreviousAndFirst = currentPage === 0;\n\n    _.addOrRemoveCssClass(this.btPrevious, 'ag-disabled', disablePreviousAndFirst);\n\n    _.addOrRemoveCssClass(this.btFirst, 'ag-disabled', disablePreviousAndFirst);\n\n    var zeroPagesToDisplay = this.isZeroPagesToDisplay();\n    var onLastPage = maxRowFound && currentPage === totalPages - 1;\n    var disableNext = onLastPage || zeroPagesToDisplay;\n\n    _.addOrRemoveCssClass(this.btNext, 'ag-disabled', disableNext);\n\n    var disableLast = !maxRowFound || zeroPagesToDisplay || currentPage === totalPages - 1;\n\n    _.addOrRemoveCssClass(this.btLast, 'ag-disabled', disableLast);\n  };\n\n  PaginationComp.prototype.updateRowLabels = function () {\n    var currentPage = this.paginationProxy.getCurrentPage();\n    var pageSize = this.paginationProxy.getPageSize();\n    var maxRowFound = this.paginationProxy.isLastPageFound();\n    var rowCount = this.paginationProxy.isLastPageFound() ? this.paginationProxy.getMasterRowCount() : null;\n    var startRow;\n    var endRow;\n\n    if (this.isZeroPagesToDisplay()) {\n      startRow = 0;\n      endRow = 0;\n    } else {\n      startRow = pageSize * currentPage + 1;\n      endRow = startRow + pageSize - 1;\n\n      if (maxRowFound && endRow > rowCount) {\n        endRow = rowCount;\n      }\n    }\n\n    this.lbFirstRowOnPage.innerHTML = this.formatNumber(startRow);\n\n    if (this.serverSideRowModel && this.serverSideRowModel.isLoading()) {\n      this.lbLastRowOnPage.innerHTML = '?';\n    } else {\n      this.lbLastRowOnPage.innerHTML = this.formatNumber(endRow);\n    }\n  };\n\n  PaginationComp.prototype.isZeroPagesToDisplay = function () {\n    var maxRowFound = this.paginationProxy.isLastPageFound();\n    var totalPages = this.paginationProxy.getTotalPages();\n    return maxRowFound && totalPages === 0;\n  };\n\n  PaginationComp.prototype.setTotalLabels = function () {\n    var lastPageFound = this.paginationProxy.isLastPageFound();\n    var totalPages = this.paginationProxy.getTotalPages();\n    var rowCount = this.paginationProxy.isLastPageFound() ? this.paginationProxy.getMasterRowCount() : null;\n\n    if (lastPageFound) {\n      this.lbTotal.innerHTML = this.formatNumber(totalPages);\n      this.lbRecordCount.innerHTML = this.formatNumber(rowCount);\n    } else {\n      var moreText = this.gridOptionsWrapper.getLocaleTextFunc()('more', 'more');\n      this.lbTotal.innerHTML = moreText;\n      this.lbRecordCount.innerHTML = moreText;\n    }\n  };\n\n  __decorate([Autowired('gridOptionsWrapper')], PaginationComp.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('eventService')], PaginationComp.prototype, \"eventService\", void 0);\n\n  __decorate([Autowired('paginationProxy')], PaginationComp.prototype, \"paginationProxy\", void 0);\n\n  __decorate([Autowired('rowRenderer')], PaginationComp.prototype, \"rowRenderer\", void 0);\n\n  __decorate([Autowired('rowModel')], PaginationComp.prototype, \"rowModel\", void 0);\n\n  __decorate([RefSelector('btFirst')], PaginationComp.prototype, \"btFirst\", void 0);\n\n  __decorate([RefSelector('btPrevious')], PaginationComp.prototype, \"btPrevious\", void 0);\n\n  __decorate([RefSelector('btNext')], PaginationComp.prototype, \"btNext\", void 0);\n\n  __decorate([RefSelector('btLast')], PaginationComp.prototype, \"btLast\", void 0);\n\n  __decorate([RefSelector('lbRecordCount')], PaginationComp.prototype, \"lbRecordCount\", void 0);\n\n  __decorate([RefSelector('lbFirstRowOnPage')], PaginationComp.prototype, \"lbFirstRowOnPage\", void 0);\n\n  __decorate([RefSelector('lbLastRowOnPage')], PaginationComp.prototype, \"lbLastRowOnPage\", void 0);\n\n  __decorate([RefSelector('eSummaryPanel')], PaginationComp.prototype, \"eSummaryPanel\", void 0);\n\n  __decorate([RefSelector('lbCurrent')], PaginationComp.prototype, \"lbCurrent\", void 0);\n\n  __decorate([RefSelector('lbTotal')], PaginationComp.prototype, \"lbTotal\", void 0);\n\n  __decorate([PostConstruct], PaginationComp.prototype, \"postConstruct\", null);\n\n  return PaginationComp;\n}(Component);\n\nexport { PaginationComp };","map":null,"metadata":{},"sourceType":"module"}