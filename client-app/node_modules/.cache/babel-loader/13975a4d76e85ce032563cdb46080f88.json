{"ast":null,"code":"import React from'react';import{Message}from'semantic-ui-react';var ErrorMessage=function ErrorMessage(_ref){var error=_ref.error,text=_ref.text;return/*#__PURE__*/React.createElement(Message,{error:true},/*#__PURE__*/React.createElement(Message.Header,null,error.statusText),error.data&&Object.keys(error.data.errors).length>0&&/*#__PURE__*/React.createElement(Message.List,null,Object.values(error.data.errors).flat().map(function(err,i){return/*#__PURE__*/React.createElement(Message.Item,{key:i},err);})),text&&/*#__PURE__*/React.createElement(Message.Content,{content:text}));};export default ErrorMessage;","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/app/common/form/ErrorMessage.tsx"],"names":["React","Message","ErrorMessage","error","text","statusText","data","Object","keys","errors","length","values","flat","map","err","i"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,OAAT,KAAwB,mBAAxB,CAOA,GAAMC,CAAAA,YAA8B,CAAG,QAAjCA,CAAAA,YAAiC,MAAqB,IAAlBC,CAAAA,KAAkB,MAAlBA,KAAkB,CAAXC,IAAW,MAAXA,IAAW,CAC1D,mBACE,oBAAC,OAAD,EAAS,KAAK,KAAd,eACE,oBAAC,OAAD,CAAS,MAAT,MAAiBD,KAAK,CAACE,UAAvB,CADF,CAEGF,KAAK,CAACG,IAAN,EAAcC,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACG,IAAN,CAAWG,MAAvB,EAA+BC,MAA/B,CAAwC,CAAtD,eACC,oBAAC,OAAD,CAAS,IAAT,MACGH,MAAM,CAACI,MAAP,CAAcR,KAAK,CAACG,IAAN,CAAWG,MAAzB,EAAiCG,IAAjC,GAAwCC,GAAxC,CAA4C,SAACC,GAAD,CAAMC,CAAN,qBAC3C,oBAAC,OAAD,CAAS,IAAT,EAAc,GAAG,CAAEA,CAAnB,EAAuBD,GAAvB,CAD2C,EAA5C,CADH,CAHJ,CASGV,IAAI,eAAI,oBAAC,OAAD,CAAS,OAAT,EAAiB,OAAO,CAAEA,IAA1B,EATX,CADF,CAaD,CAdD,CAgBA,cAAeF,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport { AxiosResponse } from 'axios';\nimport { Message } from 'semantic-ui-react';\n\ninterface IProps {\n  error: AxiosResponse;\n  text?: string;\n}\n\nconst ErrorMessage: React.FC<IProps> = ({ error, text }) => {\n  return (\n    <Message error>\n      <Message.Header>{error.statusText}</Message.Header>\n      {error.data && Object.keys(error.data.errors).length > 0 && (\n        <Message.List>\n          {Object.values(error.data.errors).flat().map((err, i) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n      {text && <Message.Content content={text} />}\n    </Message>\n  );\n};\n\nexport default ErrorMessage;\n"]},"metadata":{},"sourceType":"module"}