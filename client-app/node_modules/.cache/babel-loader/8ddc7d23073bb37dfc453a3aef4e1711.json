{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _closest = _interopRequireDefault(require(\"dom-helpers/query/closest\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _uncontrollable = _interopRequireDefault(require(\"uncontrollable\"));\n\nvar _Widget = _interopRequireDefault(require(\"./Widget\"));\n\nvar _WidgetPicker = _interopRequireDefault(require(\"./WidgetPicker\"));\n\nvar _Select = _interopRequireDefault(require(\"./Select\"));\n\nvar _Popup = _interopRequireDefault(require(\"./Popup\"));\n\nvar _MultiselectInput = _interopRequireDefault(require(\"./MultiselectInput\"));\n\nvar _MultiselectTagList = _interopRequireDefault(require(\"./MultiselectTagList\"));\n\nvar _List = _interopRequireDefault(require(\"./List\"));\n\nvar _AddToListOption = _interopRequireDefault(require(\"./AddToListOption\"));\n\nvar _ = require(\"./util/_\");\n\nvar Filter = _interopRequireWildcard(require(\"./util/Filter\"));\n\nvar Props = _interopRequireWildcard(require(\"./util/Props\"));\n\nvar _messages = require(\"./messages\");\n\nvar CustomPropTypes = _interopRequireWildcard(require(\"./util/PropTypes\"));\n\nvar _reduceToListState = _interopRequireWildcard(require(\"./util/reduceToListState\"));\n\nvar _getAccessors = _interopRequireDefault(require(\"./util/getAccessors\"));\n\nvar _focusManager = _interopRequireDefault(require(\"./util/focusManager\"));\n\nvar _scrollManager = _interopRequireDefault(require(\"./util/scrollManager\"));\n\nvar _interaction = require(\"./util/interaction\");\n\nvar _widgetHelpers = require(\"./util/widgetHelpers\");\n\nvar _Icon = require(\"./Icon\");\n\nvar _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _class3, _temp;\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nfunction _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and set to use loose mode. ' + 'To use proposal-class-properties in spec mode with decorators, wait for ' + 'the next major version of decorators in stage 2.');\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar CREATE_OPTION = {};\nvar ENTER = 13;\nvar INSERT = 'insert';\nvar REMOVE = 'remove';\n\nvar propTypes = _extends({}, Filter.propTypes, {\n  data: _propTypes.default.array,\n  //-- controlled props --\n  value: _propTypes.default.array,\n\n  /**\n   * @type {function (\n   *  dataItems: ?any[],\n   *  metadata: {\n   *    dataItem: any,\n   *    action: 'insert' | 'remove',\n   *    originalEvent: SyntheticEvent,\n   *    lastValue: ?any[],\n   *    searchTerm: ?string\n   *  }\n   * ): void}\n   */\n  onChange: _propTypes.default.func,\n  searchTerm: _propTypes.default.string,\n\n  /**\n   * @type {function (\n   *  searchTerm: ?string,\n   *  metadata: {\n   *    action: 'clear' | 'input',\n   *    lastSearchTerm: ?string,\n   *    originalEvent: SyntheticEvent,\n   *  }\n   * ): void}\n   */\n  onSearch: _propTypes.default.func,\n  open: _propTypes.default.bool,\n  onToggle: _propTypes.default.func,\n  //-------------------------------------------\n  valueField: CustomPropTypes.accessor,\n  textField: CustomPropTypes.accessor,\n  tagComponent: CustomPropTypes.elementType,\n  itemComponent: CustomPropTypes.elementType,\n  listComponent: CustomPropTypes.elementType,\n  groupComponent: CustomPropTypes.elementType,\n  groupBy: CustomPropTypes.accessor,\n  allowCreate: _propTypes.default.oneOf([true, false, 'onFilter']),\n\n  /**\n   *\n   * @type { (dataItem: ?any, metadata: { originalEvent: SyntheticEvent }) => void }\n   */\n  onSelect: _propTypes.default.func,\n\n  /**\n   * @type { (searchTerm: string) => void }\n   */\n  onCreate: _propTypes.default.func,\n  busy: _propTypes.default.bool,\n\n  /** Specify the element used to render the select (down arrow) icon. */\n  selectIcon: _propTypes.default.node,\n\n  /** Specify the element used to render the busy indicator */\n  busySpinner: _propTypes.default.node,\n  dropUp: _propTypes.default.bool,\n  popupTransition: CustomPropTypes.elementType,\n\n  /** Adds a css class to the input container element. */\n  containerClassName: _propTypes.default.string,\n  inputProps: _propTypes.default.object,\n  listProps: _propTypes.default.object,\n  autoFocus: _propTypes.default.bool,\n  placeholder: _propTypes.default.string,\n\n  /** Continue to show the input placeholder even if tags are selected */\n  showPlaceholderWithValues: _propTypes.default.bool,\n  disabled: CustomPropTypes.disabled.acceptsArray,\n  readOnly: CustomPropTypes.disabled,\n  isRtl: _propTypes.default.bool,\n  messages: _propTypes.default.shape({\n    open: CustomPropTypes.message,\n    emptyList: CustomPropTypes.message,\n    emptyFilter: CustomPropTypes.message,\n    createOption: CustomPropTypes.message,\n    tagsLabel: CustomPropTypes.message,\n    selectedItems: CustomPropTypes.message,\n    noneSelected: CustomPropTypes.message,\n    removeLabel: CustomPropTypes.message\n  })\n  /**\n   * ---\n   * shortcuts:\n   *   - { key: left arrow, label: move focus to previous tag }\n   *   - { key: right arrow, label: move focus to next tag }\n   *   - { key: delete, deselect focused tag }\n   *   - { key: backspace, deselect next tag }\n   *   - { key: alt + up arrow, label: close Multiselect }\n   *   - { key: down arrow, label: open Multiselect, and move focus to next item }\n   *   - { key: up arrow, label: move focus to previous item }\n   *   - { key: home, label: move focus to first item }\n   *   - { key: end, label: move focus to last item }\n   *   - { key: enter, label: select focused item }\n   *   - { key: ctrl + enter, label: create new tag from current searchTerm }\n   *   - { key: any key, label: search list for item starting with key }\n   * ---\n   *\n   * A select listbox alternative.\n   *\n   * @public\n   */\n\n});\n\nvar Multiselect = (0, _reactLifecyclesCompat.polyfill)(_class = (_class2 = (_temp = _class3 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Multiselect, _React$Component);\n\n  function Multiselect() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleFocusDidChange = function (focused) {\n      if (focused) return _this.focus();\n\n      _this.close();\n\n      _this.clearSearch();\n\n      if (_this.tagsRef) _this.setState({\n        focusedTag: null\n      });\n    };\n\n    _this.handleDelete = function (dataItem, event) {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          readOnly = _this$props.readOnly;\n      if (disabled == true || readOnly) return;\n\n      _this.focus();\n\n      _this.change(dataItem, event, REMOVE);\n    };\n\n    _this.handleSearchKeyDown = function (e) {\n      if (e.key === 'Backspace' && e.target.value && !_this._deletingText) _this._deletingText = true;\n    };\n\n    _this.handleSearchKeyUp = function (e) {\n      if (e.key === 'Backspace' && _this._deletingText) _this._deletingText = false;\n    };\n\n    _this.handleInputChange = function (e) {\n      _this.search(e.target.value, e, 'input');\n\n      _this.open();\n    };\n\n    _initializerDefineProperty(_this, \"handleClick\", _descriptor, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"handleDoubleClick\", _descriptor2, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"handleSelect\", _descriptor3, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"handleCreate\", _descriptor4, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"handleKeyDown\", _descriptor5, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.attachListRef = function (ref) {\n      return _this.listRef = ref;\n    };\n\n    _this.attachTagsRef = function (ref) {\n      return _this.tagsRef = ref;\n    };\n\n    _this.attachInputRef = function (ref) {\n      return _this.inputRef = ref;\n    };\n\n    _this.inputId = (0, _widgetHelpers.instanceId)(_assertThisInitialized(_assertThisInitialized(_this)), '_input');\n    _this.tagsId = (0, _widgetHelpers.instanceId)(_assertThisInitialized(_assertThisInitialized(_this)), '_taglist');\n    _this.notifyId = (0, _widgetHelpers.instanceId)(_assertThisInitialized(_assertThisInitialized(_this)), '_notify_area');\n    _this.listId = (0, _widgetHelpers.instanceId)(_assertThisInitialized(_assertThisInitialized(_this)), '_listbox');\n    _this.createId = (0, _widgetHelpers.instanceId)(_assertThisInitialized(_assertThisInitialized(_this)), '_createlist_option');\n    _this.activeTagId = (0, _widgetHelpers.instanceId)(_assertThisInitialized(_assertThisInitialized(_this)), '_taglist_active_tag');\n    _this.activeOptionId = (0, _widgetHelpers.instanceId)(_assertThisInitialized(_assertThisInitialized(_this)), '_listbox_active_option');\n    _this.handleScroll = (0, _scrollManager.default)(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.focusManager = (0, _focusManager.default)(_assertThisInitialized(_assertThisInitialized(_this)), {\n      didHandle: _this.handleFocusDidChange\n    });\n    _this.state = {\n      focusedTag: null\n    };\n    return _this;\n  }\n\n  Multiselect.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var data = nextProps.data,\n        searchTerm = nextProps.searchTerm,\n        messages = nextProps.messages,\n        minLength = nextProps.minLength,\n        caseSensitive = nextProps.caseSensitive,\n        filter = nextProps.filter;\n    var focusedItem = prevState.focusedItem,\n        focusedTag = prevState.focusedTag;\n    var accessors = (0, _getAccessors.default)(nextProps);\n    var valueChanged = nextProps.value !== prevState.lastValue;\n    var values = (0, _.makeArray)(nextProps.value);\n    var dataItems = valueChanged ? values.map(function (item) {\n      return accessors.findOrSelf(data, item);\n    }) : prevState.dataItems;\n    data = data.filter(function (i) {\n      return !values.some(function (v) {\n        return accessors.matches(i, v);\n      });\n    });\n    var lengthWithoutValues = data.length;\n    data = Filter.filter(data, {\n      filter: filter,\n      searchTerm: searchTerm,\n      minLength: minLength,\n      caseSensitive: caseSensitive,\n      textField: accessors.text\n    });\n    var list = (0, _reduceToListState.default)(data, prevState.list, {\n      nextProps: nextProps\n    });\n    var tagList = (0, _reduceToListState.default)(dataItems, prevState.tagList, {\n      nextProps: nextProps,\n      getDataState: _reduceToListState.defaultGetDataState\n    });\n    var nextFocusedItem = ~data.indexOf(focusedItem) ? focusedItem : data[0];\n    return {\n      data: data,\n      dataItems: dataItems,\n      list: list,\n      tagList: tagList,\n      accessors: accessors,\n      lengthWithoutValues: lengthWithoutValues,\n      lastValue: nextProps.value,\n      messages: (0, _messages.getMessages)(messages),\n      focusedTag: valueChanged ? list.nextEnabled(~dataItems.indexOf(focusedTag) ? focusedTag : null) : focusedTag,\n      focusedItem: valueChanged || prevState.focusedItem === undefined ? list.nextEnabled(nextFocusedItem) : nextFocusedItem\n    };\n  };\n\n  var _proto = Multiselect.prototype;\n\n  _proto.renderInput = function renderInput(ownedIds) {\n    var _this$props2 = this.props,\n        searchTerm = _this$props2.searchTerm,\n        maxLength = _this$props2.maxLength,\n        tabIndex = _this$props2.tabIndex,\n        busy = _this$props2.busy,\n        autoFocus = _this$props2.autoFocus,\n        inputProps = _this$props2.inputProps,\n        open = _this$props2.open;\n    var _this$state = this.state,\n        focusedItem = _this$state.focusedItem,\n        focusedTag = _this$state.focusedTag;\n    var disabled = this.props.disabled === true;\n    var readOnly = this.props.readOnly === true;\n    var active;\n    if (!open) active = focusedTag ? this.activeTagId : '';else if (focusedItem || this.allowCreate()) active = this.activeOptionId;\n    return _react.default.createElement(_MultiselectInput.default, _extends({}, inputProps, {\n      autoFocus: autoFocus,\n      tabIndex: tabIndex || 0,\n      role: \"listbox\",\n      \"aria-expanded\": !!open,\n      \"aria-busy\": !!busy,\n      \"aria-owns\": ownedIds,\n      \"aria-haspopup\": true,\n      \"aria-activedescendant\": active || null,\n      value: searchTerm,\n      maxLength: maxLength,\n      disabled: disabled,\n      readOnly: readOnly,\n      placeholder: this.getPlaceholder(),\n      onKeyDown: this.handleSearchKeyDown,\n      onKeyUp: this.handleSearchKeyUp,\n      onChange: this.handleInputChange,\n      ref: this.attachInputRef\n    }));\n  };\n\n  _proto.renderList = function renderList() {\n    var inputId = this.inputId,\n        activeOptionId = this.activeOptionId,\n        listId = this.listId;\n    var _this$props3 = this.props,\n        open = _this$props3.open,\n        searchTerm = _this$props3.searchTerm,\n        optionComponent = _this$props3.optionComponent,\n        itemComponent = _this$props3.itemComponent,\n        groupComponent = _this$props3.groupComponent,\n        listProps = _this$props3.listProps;\n    var _this$state2 = this.state,\n        focusedItem = _this$state2.focusedItem,\n        list = _this$state2.list,\n        lengthWithoutValues = _this$state2.lengthWithoutValues,\n        accessors = _this$state2.accessors,\n        data = _this$state2.data,\n        messages = _this$state2.messages;\n    var List = this.props.listComponent;\n    return _react.default.createElement(List, _extends({}, listProps, {\n      id: listId,\n      activeId: activeOptionId,\n      data: data,\n      dataState: list.dataState,\n      isDisabled: list.isDisabled,\n      searchTerm: searchTerm,\n      textAccessor: accessors.text,\n      valueAccessor: accessors.value,\n      itemComponent: itemComponent,\n      groupComponent: groupComponent,\n      optionComponent: optionComponent,\n      focusedItem: focusedItem,\n      onSelect: this.handleSelect,\n      onMove: this.handleScroll,\n      \"aria-live\": \"polite\",\n      \"aria-labelledby\": inputId,\n      \"aria-hidden\": !open,\n      ref: this.attachListRef,\n      messages: {\n        emptyList: lengthWithoutValues ? messages.emptyFilter : messages.emptyList\n      }\n    }));\n  };\n\n  _proto.renderNotificationArea = function renderNotificationArea() {\n    var _this$state3 = this.state,\n        focused = _this$state3.focused,\n        dataItems = _this$state3.dataItems,\n        accessors = _this$state3.accessors,\n        messages = _this$state3.messages;\n    var itemLabels = dataItems.map(function (item) {\n      return accessors.text(item);\n    });\n    return _react.default.createElement(\"span\", {\n      id: this.notifyId,\n      role: \"status\",\n      className: \"rw-sr\",\n      \"aria-live\": \"assertive\",\n      \"aria-atomic\": \"true\",\n      \"aria-relevant\": \"additions removals text\"\n    }, focused && (dataItems.length ? messages.selectedItems(itemLabels) : messages.noneSelected()));\n  };\n\n  _proto.renderTags = function renderTags() {\n    var _this$props4 = this.props,\n        readOnly = _this$props4.readOnly,\n        disabled = _this$props4.disabled;\n    var _this$state4 = this.state,\n        focusedTag = _this$state4.focusedTag,\n        dataItems = _this$state4.dataItems,\n        accessors = _this$state4.accessors,\n        messages = _this$state4.messages;\n    var Component = this.props.tagComponent;\n    return _react.default.createElement(_MultiselectTagList.default, {\n      id: this.tagsId,\n      activeId: this.activeTagId,\n      textAccessor: accessors.text,\n      valueAccessor: accessors.value,\n      label: messages.tagsLabel(),\n      value: dataItems,\n      readOnly: readOnly,\n      disabled: disabled,\n      focusedItem: focusedTag,\n      onDelete: this.handleDelete,\n      valueComponent: Component,\n      ref: this.attachTagsRef\n    });\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props5 = this.props,\n        className = _this$props5.className,\n        busy = _this$props5.busy,\n        dropUp = _this$props5.dropUp,\n        open = _this$props5.open,\n        searchTerm = _this$props5.searchTerm,\n        selectIcon = _this$props5.selectIcon,\n        busySpinner = _this$props5.busySpinner,\n        containerClassName = _this$props5.containerClassName,\n        popupTransition = _this$props5.popupTransition;\n    var _this$state5 = this.state,\n        focused = _this$state5.focused,\n        focusedItem = _this$state5.focusedItem,\n        dataItems = _this$state5.dataItems,\n        messages = _this$state5.messages;\n    var elementProps = Props.pickElementProps(this);\n    var shouldRenderTags = !!dataItems.length,\n        shouldRenderPopup = (0, _widgetHelpers.isFirstFocusedRender)(this),\n        allowCreate = this.allowCreate();\n    var inputOwns = this.listId + \" \" + this.notifyId + \" \" + (shouldRenderTags ? this.tagsId : '') + (allowCreate ? this.createId : '');\n    var disabled = this.props.disabled === true;\n    var readOnly = this.props.readOnly === true;\n    return _react.default.createElement(_Widget.default, _extends({}, elementProps, {\n      open: open,\n      dropUp: dropUp,\n      focused: focused,\n      disabled: disabled,\n      readOnly: readOnly,\n      onKeyDown: this.handleKeyDown,\n      onBlur: this.focusManager.handleBlur,\n      onFocus: this.focusManager.handleFocus,\n      className: (0, _classnames.default)(className, 'rw-multiselect')\n    }), this.renderNotificationArea(messages), _react.default.createElement(_WidgetPicker.default, {\n      onClick: this.handleClick,\n      onTouchEnd: this.handleClick,\n      onDoubleClick: this.handleDoubleClick,\n      className: (0, _classnames.default)(containerClassName, 'rw-widget-input')\n    }, _react.default.createElement(\"div\", null, shouldRenderTags && this.renderTags(messages), this.renderInput(inputOwns)), _react.default.createElement(_Select.default, {\n      busy: busy,\n      spinner: busySpinner,\n      icon: focused ? selectIcon : null,\n      \"aria-hidden\": \"true\",\n      role: \"presentational\",\n      disabled: disabled || readOnly\n    })), shouldRenderPopup && _react.default.createElement(_Popup.default, {\n      dropUp: dropUp,\n      open: open,\n      transition: popupTransition,\n      onEntering: function onEntering() {\n        return _this2.listRef.forceUpdate();\n      }\n    }, _react.default.createElement(\"div\", null, this.renderList(), allowCreate && _react.default.createElement(_AddToListOption.default, {\n      id: this.createId,\n      searchTerm: searchTerm,\n      onSelect: this.handleCreate,\n      focused: !focusedItem || focusedItem === CREATE_OPTION\n    }, messages.createOption(this.props)))));\n  };\n\n  _proto.change = function change(dataItem, originalEvent, action) {\n    var _this$props6 = this.props,\n        onChange = _this$props6.onChange,\n        searchTerm = _this$props6.searchTerm,\n        lastValue = _this$props6.value;\n    var dataItems = this.state.dataItems;\n\n    switch (action) {\n      case INSERT:\n        dataItems = dataItems.concat(dataItem);\n        break;\n\n      case REMOVE:\n        dataItems = dataItems.filter(function (d) {\n          return d !== dataItem;\n        });\n        break;\n    }\n\n    (0, _widgetHelpers.notify)(onChange, [dataItems, {\n      action: action,\n      dataItem: dataItem,\n      originalEvent: originalEvent,\n      lastValue: lastValue,\n      searchTerm: searchTerm\n    }]);\n    this.clearSearch(originalEvent);\n  };\n\n  _proto.clearSearch = function clearSearch(originalEvent) {\n    this.search('', originalEvent, 'clear');\n  };\n\n  _proto.search = function search(searchTerm, originalEvent, action) {\n    if (action === void 0) {\n      action = 'input';\n    }\n\n    var _this$props7 = this.props,\n        onSearch = _this$props7.onSearch,\n        lastSearchTerm = _this$props7.searchTerm;\n    if (searchTerm !== lastSearchTerm) (0, _widgetHelpers.notify)(onSearch, [searchTerm, {\n      action: action,\n      lastSearchTerm: lastSearchTerm,\n      originalEvent: originalEvent\n    }]);\n  };\n\n  _proto.focus = function focus() {\n    if (this.inputRef) this.inputRef.focus();\n  };\n\n  _proto.toggle = function toggle() {\n    this.props.open ? this.close() : this.open();\n  };\n\n  _proto.open = function open() {\n    if (!this.props.open) (0, _widgetHelpers.notify)(this.props.onToggle, true);\n  };\n\n  _proto.close = function close() {\n    if (this.props.open) (0, _widgetHelpers.notify)(this.props.onToggle, false);\n  };\n\n  _proto.allowCreate = function allowCreate() {\n    var _this$props8 = this.props,\n        searchTerm = _this$props8.searchTerm,\n        onCreate = _this$props8.onCreate,\n        allowCreate = _this$props8.allowCreate;\n    return !!(onCreate && (allowCreate === true || allowCreate === 'onFilter' && searchTerm) && !this.hasExtactMatch());\n  };\n\n  _proto.hasExtactMatch = function hasExtactMatch() {\n    var _this$props9 = this.props,\n        searchTerm = _this$props9.searchTerm,\n        caseSensitive = _this$props9.caseSensitive;\n    var _this$state6 = this.state,\n        data = _this$state6.data,\n        dataItems = _this$state6.dataItems,\n        accessors = _this$state6.accessors;\n\n    var lower = function lower(text) {\n      return caseSensitive ? text : text.toLowerCase();\n    };\n\n    var eq = function eq(v) {\n      return lower(accessors.text(v)) === lower(searchTerm);\n    }; // if there is an exact match on textFields:\n    // \"john\" => { name: \"john\" }, don't show\n\n\n    return dataItems.some(eq) || data.some(eq);\n  };\n\n  _proto.getPlaceholder = function getPlaceholder() {\n    var _this$props10 = this.props,\n        value = _this$props10.value,\n        placeholder = _this$props10.placeholder,\n        showPlaceholderWithValues = _this$props10.showPlaceholderWithValues;\n    return (value && value.length && !showPlaceholderWithValues ? '' : placeholder) || '';\n  };\n\n  return Multiselect;\n}(_react.default.Component), _class3.propTypes = propTypes, _class3.defaultProps = {\n  data: [],\n  allowCreate: 'onFilter',\n  filter: 'startsWith',\n  value: [],\n  searchTerm: '',\n  selectIcon: _Icon.caretDown,\n  listComponent: _List.default,\n  showPlaceholderWithValues: false\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"handleClick\", [_interaction.widgetEditable], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function (_ref) {\n      var target = _ref.target;\n\n      _this3.focus();\n\n      if ((0, _closest.default)(target, '.rw-select')) _this3.toggle();else _this3.open();\n    };\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"handleDoubleClick\", [_interaction.widgetEditable], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return function () {\n      if (!_this4.inputRef) return;\n\n      _this4.focus();\n\n      _this4.inputRef.select();\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"handleSelect\", [_interaction.widgetEditable], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this5 = this;\n\n    return function (dataItem, originalEvent) {\n      if (dataItem === undefined || dataItem === CREATE_OPTION) {\n        _this5.handleCreate(_this5.props.searchTerm, originalEvent);\n\n        return;\n      }\n\n      (0, _widgetHelpers.notify)(_this5.props.onSelect, [dataItem, {\n        originalEvent: originalEvent\n      }]);\n\n      _this5.change(dataItem, originalEvent, INSERT);\n\n      _this5.focus();\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"handleCreate\", [_interaction.widgetEditable], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this6 = this;\n\n    return function (searchTerm, event) {\n      if (searchTerm === void 0) {\n        searchTerm = '';\n      }\n\n      (0, _widgetHelpers.notify)(_this6.props.onCreate, searchTerm);\n\n      _this6.clearSearch(event);\n\n      _this6.focus();\n    };\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"handleKeyDown\", [_interaction.widgetEditable], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this7 = this;\n\n    return function (event) {\n      var _this7$props = _this7.props,\n          open = _this7$props.open,\n          searchTerm = _this7$props.searchTerm,\n          onKeyDown = _this7$props.onKeyDown;\n      var key = event.key,\n          keyCode = event.keyCode,\n          altKey = event.altKey,\n          ctrlKey = event.ctrlKey;\n      var _this7$state = _this7.state,\n          focusedTag = _this7$state.focusedTag,\n          focusedItem = _this7$state.focusedItem,\n          list = _this7$state.list,\n          tagList = _this7$state.tagList;\n      var createIsFocused = focusedItem === CREATE_OPTION;\n\n      var canCreate = _this7.allowCreate();\n\n      var focusTag = function focusTag(tag) {\n        return _this7.setState({\n          focusedTag: tag\n        });\n      };\n\n      var focusItem = function focusItem(item) {\n        return _this7.setState({\n          focusedItem: item,\n          focusedTag: null\n        });\n      };\n\n      (0, _widgetHelpers.notify)(onKeyDown, [event]);\n      if (event.defaultPrevented) return;\n\n      if (key === 'ArrowDown') {\n        event.preventDefault();\n        if (!open) return _this7.open();\n        var next = list.next(focusedItem);\n        var creating = createIsFocused || canCreate && focusedItem === next;\n        focusItem(creating ? CREATE_OPTION : next);\n      } else if (key === 'ArrowUp' && (open || altKey)) {\n        event.preventDefault();\n        if (altKey) return _this7.close();\n        focusItem(createIsFocused ? list.last() : list.prev(focusedItem));\n      } else if (key === 'End') {\n        event.preventDefault();\n        if (open) focusItem(list.last());else focusTag(tagList.last());\n      } else if (key === 'Home') {\n        event.preventDefault();\n        if (open) focusItem(list.first());else focusTag(tagList.first());\n      } else if (open && keyCode === ENTER) {\n        // using keyCode to ignore enter for japanese IME\n        event.preventDefault();\n        if (ctrlKey && canCreate) return _this7.handleCreate(searchTerm, event);\n\n        _this7.handleSelect(focusedItem, event);\n      } else if (key === 'Escape') {\n        open ? _this7.close() : tagList && focusTag(null);\n      } else if (!searchTerm && !_this7._deletingText) {\n        if (key === 'ArrowLeft') {\n          focusTag(tagList.prev(focusedTag) || tagList.last());\n        } else if (key === 'ArrowRight' && focusedTag) {\n          var nextTag = tagList.next(focusedTag);\n          focusTag(nextTag === focusedTag ? null : nextTag);\n        } else if (key === 'Delete' && !tagList.isDisabled(focusedTag)) {\n          _this7.handleDelete(focusedTag, event);\n        } else if (key === 'Backspace') {\n          _this7.handleDelete(tagList.last(), event);\n        } else if (key === ' ' && !open) {\n          event.preventDefault();\n\n          _this7.open();\n        }\n      }\n    };\n  }\n})), _class2)) || _class;\n\nvar _default = (0, _uncontrollable.default)(Multiselect, {\n  open: 'onToggle',\n  value: 'onChange',\n  searchTerm: 'onSearch'\n}, ['focus']);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}