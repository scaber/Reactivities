{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _temp;\n\nimport { observable, action, computed, runInAction, reaction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { history } from \"../..\";\nimport { toast } from \"react-toastify\";\nimport { setActivityProps, createAttendee } from \"../common/util/util\";\nimport { HubConnectionBuilder, LogLevel } from \"@aspnet/signalr\";\nconst LIMIT = 2;\n;\nlet ActivityStore = (_dec = observable.ref, (_class = (_temp = class ActivityStore {\n  constructor(rootStore) {\n    this.rootStore = void 0;\n\n    _initializerDefineProperty(this, \"activityRegistry\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"activity\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"loadingInitial\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"submitting\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"target\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"loading\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"hubConnection\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"activityCount\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"page\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"predicate\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"setPredicate\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"setPage\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"createHubConnection\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"stopHubConnection\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"addComment\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"loadActivities\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"loadActivity\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"clearActivity\", _descriptor18, this);\n\n    this.getActivity = id => {\n      return this.activityRegistry.get(id);\n    };\n\n    _initializerDefineProperty(this, \"createActivity\", _descriptor19, this);\n\n    _initializerDefineProperty(this, \"editActivity\", _descriptor20, this);\n\n    _initializerDefineProperty(this, \"deleteActivity\", _descriptor21, this);\n\n    _initializerDefineProperty(this, \"attendActivity\", _descriptor22, this);\n\n    _initializerDefineProperty(this, \"cancelAttendance\", _descriptor23, this);\n\n    this.rootStore = rootStore;\n    reaction(() => this.predicate.keys(), () => {\n      this.page = 0;\n      this.activityRegistry.clear();\n      this.loadActivities();\n    });\n  }\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append('limit', String(LIMIT));\n    params.append('offset', `${this.page ? this.page * LIMIT : 0}`);\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate') {\n        params.append(key, value.toISOString());\n      } else {\n        params.append(key, value);\n      }\n    });\n    return params;\n  }\n\n  get totalPages() {\n    return Math.ceil(this.activityCount / LIMIT);\n  }\n\n  get activitiesByDate() {\n    return this.groupActivitiesByDate(Array.from(this.activityRegistry.values()));\n  }\n\n  groupActivitiesByDate(activities) {\n    const sortedActivities = activities.sort((a, b) => a.date.getTime() - b.date.getTime());\n    return Object.entries(sortedActivities.reduce((activities, activity) => {\n      const date = activity.date.toISOString().split(\"T\")[0];\n      activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n      return activities;\n    }, {}));\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"activityRegistry\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return new Map();\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"activity\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"loadingInitial\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"submitting\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"target\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"loading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"hubConnection\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"activityCount\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"page\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"predicate\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return new Map();\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"setPredicate\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (predicate, value) => {\n      this.predicate.clear();\n\n      if (predicate !== 'all') {\n        this.predicate.set(predicate, value);\n      }\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"axiosParams\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"axiosParams\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"totalPages\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"totalPages\"), _class.prototype), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"setPage\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return page => {\n      this.page = page;\n    };\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"createHubConnection\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.hubConnection = new HubConnectionBuilder().withUrl(\"http://localhost:5000/chat\", {\n        accessTokenFactory: () => this.rootStore.commonStore.token\n      }).configureLogging(LogLevel.Information).build();\n      this.hubConnection.start().then(() => console.log(this.hubConnection.state)).catch(error => console.log(\"Error establishing connection : \", error));\n      this.hubConnection.on('ReceiveComment', comment => {\n        runInAction(() => {\n          this.activity.comments.push(comment);\n        });\n      });\n    };\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"stopHubConnection\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.hubConnection.stop();\n    };\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"addComment\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async values => {\n      values.activityId = this.activity.id;\n\n      try {\n        await this.hubConnection.invoke('SendComment', values);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"activitiesByDate\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"activitiesByDate\"), _class.prototype), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"loadActivities\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      this.loadingInitial = true;\n\n      try {\n        const activitiesEnvelope = await agent.Activities.list(this.axiosParams);\n        const {\n          activities,\n          activityCount\n        } = activitiesEnvelope;\n        runInAction(\"loading activities\", () => {\n          activities.forEach(activity => {\n            setActivityProps(activity, this.rootStore.userStore.user);\n            this.activityRegistry.set(activity.id, activity);\n          });\n          this.activityCount = activityCount;\n          this.loadingInitial = false;\n        });\n      } catch (error) {\n        runInAction(\"load activities error\", () => {\n          this.loadingInitial = false;\n        });\n      }\n    };\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"loadActivity\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async id => {\n      let activity = this.getActivity(id);\n\n      if (activity) {\n        this.activity = activity;\n        return activity;\n      } else {\n        this.loadingInitial = true;\n\n        try {\n          activity = await agent.Activities.details(id);\n          runInAction(\"getting activity\", () => {\n            setActivityProps(activity, this.rootStore.userStore.user);\n            this.activity = activity;\n            this.activityRegistry.set(activity.id, activity);\n            this.loadingInitial = false;\n          });\n          return activity;\n        } catch (error) {\n          runInAction(\"get activity error\", () => {\n            this.loadingInitial = false;\n          });\n          console.log(error);\n        }\n      }\n    };\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"clearActivity\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.activity = null;\n    };\n  }\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"createActivity\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async activity => {\n      this.submitting = true;\n\n      try {\n        await agent.Activities.create(activity);\n        const attendee = createAttendee(this.rootStore.userStore.user);\n        attendee.isHost = true;\n        let attendees = [];\n        attendees.push(attendee);\n        activity.attendees = attendees;\n        activity.comments = [];\n        activity.isHost = true;\n        runInAction(\"create activity\", () => {\n          this.activityRegistry.set(activity.id, activity);\n          this.submitting = false;\n        });\n        history.push(`/activities/${activity.id}`);\n      } catch (error) {\n        runInAction(\"create activity error\", () => {\n          this.submitting = false;\n        });\n        toast.error(\"Problem submitting data\");\n        console.log(error.response);\n      }\n    };\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"editActivity\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async activity => {\n      this.submitting = true;\n\n      try {\n        await agent.Activities.update(activity);\n        runInAction(\"editing activity\", () => {\n          this.activityRegistry.set(activity.id, activity);\n          this.activity = activity;\n          this.submitting = false;\n        });\n        history.push(`/activities/${activity.id}`);\n      } catch (error) {\n        runInAction(\"edit activity error\", () => {\n          this.submitting = false;\n        });\n        toast.error(\"Problem submitting data\");\n        console.log(error);\n      }\n    };\n  }\n}), _descriptor21 = _applyDecoratedDescriptor(_class.prototype, \"deleteActivity\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async (event, id) => {\n      this.submitting = true;\n      this.target = event.currentTarget.name;\n\n      try {\n        await agent.Activities.delete(id);\n        runInAction(\"deleting activity\", () => {\n          this.activityRegistry.delete(id);\n          this.submitting = false;\n          this.target = \"\";\n        });\n      } catch (error) {\n        runInAction(\"delete activity error\", () => {\n          this.submitting = false;\n          this.target = \"\";\n        });\n        console.log(error);\n      }\n    };\n  }\n}), _descriptor22 = _applyDecoratedDescriptor(_class.prototype, \"attendActivity\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const attendee = createAttendee(this.rootStore.userStore.user);\n      this.loading = true;\n\n      try {\n        await agent.Activities.attend(this.activity.id);\n        runInAction(() => {\n          if (this.activity) {\n            this.activity.attendees.push(attendee);\n            this.activity.isGoing = true;\n            this.activityRegistry.set(this.activity.id, this.activity);\n            this.loading = false;\n          }\n        });\n      } catch (error) {\n        runInAction(() => {\n          this.loading = false;\n        });\n        toast.error(\"Problem signing up to activity\");\n      }\n    };\n  }\n}), _descriptor23 = _applyDecoratedDescriptor(_class.prototype, \"cancelAttendance\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      this.loading = true;\n\n      try {\n        await agent.Activities.unattend(this.activity.id);\n        runInAction(() => {\n          if (this.activity) {\n            this.activity.attendees = this.activity.attendees.filter(a => a.userName !== this.rootStore.userStore.user.username);\n            this.activity.isGoing = false;\n            this.activityRegistry.set(this.activity.id, this.activity);\n            this.loading = false;\n          }\n        });\n      } catch (error) {\n        runInAction(() => {\n          this.loading = false;\n        });\n        toast.error(\"Problem cancelling activity\");\n      }\n    };\n  }\n})), _class));\nexport { ActivityStore as default };","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/app/stores/activityStore.ts"],"names":["observable","action","computed","runInAction","reaction","agent","history","toast","setActivityProps","createAttendee","HubConnectionBuilder","LogLevel","LIMIT","ActivityStore","ref","constructor","rootStore","getActivity","id","activityRegistry","get","predicate","keys","page","clear","loadActivities","axiosParams","params","URLSearchParams","append","String","forEach","value","key","toISOString","totalPages","Math","ceil","activityCount","activitiesByDate","groupActivitiesByDate","Array","from","values","activities","sortedActivities","sort","a","b","date","getTime","Object","entries","reduce","activity","split","Map","set","hubConnection","withUrl","accessTokenFactory","commonStore","token","configureLogging","Information","build","start","then","console","log","state","catch","error","on","comment","comments","push","stop","activityId","invoke","loadingInitial","activitiesEnvelope","Activities","list","userStore","user","details","submitting","create","attendee","isHost","attendees","response","update","event","target","currentTarget","name","delete","loading","attend","isGoing","unattend","filter","userName","username"],"mappings":"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","sourcesContent":["import { observable, action, computed, runInAction, reaction } from \"mobx\";\nimport { SyntheticEvent } from \"react\";\nimport { IActivity } from \"../models/activity\";\nimport agent from \"../api/agent\";\nimport { history } from \"../..\";\nimport { toast } from \"react-toastify\";\nimport { RootStore } from \"./rootStore\";\nimport { setActivityProps, createAttendee } from \"../common/util/util\";\n\nimport { HubConnection, HubConnectionBuilder, LogLevel } from \"@aspnet/signalr\";\n\n\nconst LIMIT=2;\n;\nexport default class ActivityStore {\n  rootStore: RootStore;\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n\n    reaction(\n      ()=> this.predicate.keys(),\n      ()=> {\n        this.page=0;\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    )\n  }\n\n  @observable activityRegistry = new Map();\n  @observable activity: IActivity | null = null;\n  @observable loadingInitial = false;\n  @observable submitting = false;\n  @observable target = \"\";\n  @observable loading = false;\n  @observable.ref hubConnection: HubConnection | null = null;\n\n  @observable activityCount=0 ;\n  @observable page=0 ;\n  @observable predicate=new Map();\n\n\n  @action setPredicate =(predicate: string,value: string | Date) => {\n    this.predicate.clear();\n    if (predicate !=='all') {\n      this.predicate.set(predicate,value);\n    }\n  }\n\n\n  @computed get axiosParams () {\n    const params =new  URLSearchParams();\n    params.append('limit',String(LIMIT));\n    params.append('offset',`${this.page ? this.page*LIMIT : 0}`);\n    this.predicate.forEach((value,key)=> {\n      if (key ==='startDate') {\n        params.append(key,value.toISOString());\n\n      }\n      else{\n        params.append(key,value);\n      }\n    })\n    return params;\n  }\n\n\n  @computed get totalPages () {\n    return Math.ceil(this.activityCount/LIMIT);\n  }\n  @action setPage = (page: number) => {\n    this.page =page;\n  }\n\n  @action createHubConnection = () => {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(\"http://localhost:5000/chat\", {\n        accessTokenFactory: () => this.rootStore.commonStore.token!,\n      })\n      .configureLogging(LogLevel.Information)\n      .build();\n    this.hubConnection\n      .start()\n      .then(() => console.log(this.hubConnection!.state))\n      .catch((error) => console.log(\"Error establishing connection : \", error));\n\n      this.hubConnection.on('ReceiveComment',comment => {\n        runInAction(() => {\n          this.activity!.comments.push(comment); \n        })\n      })\n  };\n\n  @action stopHubConnection = () => {\n    this.hubConnection!.stop();\n  }\n\n  @action addComment = async (values :any) => {\n    values.activityId=this.activity!.id;\n\n    try {\n      await this.hubConnection!.invoke('SendComment', values)\n    } catch (error) {\n      console.error(error);\n      \n    }\n  }\n\n  @computed get activitiesByDate() {\n    return this.groupActivitiesByDate(\n      Array.from(this.activityRegistry.values())\n    );\n  }\n\n  groupActivitiesByDate(activities: IActivity[]) {\n    const sortedActivities = activities.sort(\n      (a, b) => a.date.getTime() - b.date.getTime()\n    );\n    return Object.entries(\n      sortedActivities.reduce((activities, activity) => {\n        const date = activity.date.toISOString().split(\"T\")[0];\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: IActivity[] })\n    );\n  }\n\n  @action loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const activitiesEnvelope = await agent.Activities.list(this.axiosParams);\n      const {activities,activityCount} =activitiesEnvelope;\n      runInAction(\"loading activities\", () => {\n        activities.forEach((activity) => {\n          setActivityProps(activity, this.rootStore.userStore.user!);\n          this.activityRegistry.set(activity.id, activity);\n        });\n        this.activityCount=activityCount;\n        this.loadingInitial = false;\n      });\n    } catch (error) {\n      runInAction(\"load activities error\", () => {\n        this.loadingInitial = false;\n      });\n    }\n  };\n\n  @action loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.activity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        runInAction(\"getting activity\", () => {\n          setActivityProps(activity, this.rootStore.userStore.user!);\n          this.activity = activity;\n          this.activityRegistry.set(activity.id, activity);\n          this.loadingInitial = false;\n        });\n        return activity;\n      } catch (error) {\n        runInAction(\"get activity error\", () => {\n          this.loadingInitial = false;\n        });\n        console.log(error);\n      }\n    }\n  };\n\n  @action clearActivity = () => {\n    this.activity = null;\n  };\n\n  getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  @action createActivity = async (activity: IActivity) => {\n    this.submitting = true;\n    try {\n      await agent.Activities.create(activity);\n      const attendee = createAttendee(this.rootStore.userStore.user!);\n      attendee.isHost = true;\n      let attendees = [];\n      attendees.push(attendee);\n      activity.attendees = attendees;\n      activity.comments=[];\n      activity.isHost = true;\n      runInAction(\"create activity\", () => {\n        this.activityRegistry.set(activity.id, activity);\n        this.submitting = false;\n      });\n      history.push(`/activities/${activity.id}`);\n    } catch (error) {\n      runInAction(\"create activity error\", () => {\n        this.submitting = false;\n      });\n      toast.error(\"Problem submitting data\");\n      console.log(error.response);\n    }\n  };\n\n  @action editActivity = async (activity: IActivity) => {\n    this.submitting = true;\n    try {\n      await agent.Activities.update(activity);\n      runInAction(\"editing activity\", () => {\n        this.activityRegistry.set(activity.id, activity);\n        this.activity = activity;\n        this.submitting = false;\n      });\n      history.push(`/activities/${activity.id}`);\n    } catch (error) {\n      runInAction(\"edit activity error\", () => {\n        this.submitting = false;\n      });\n      toast.error(\"Problem submitting data\");\n      console.log(error);\n    }\n  };\n\n  @action deleteActivity = async (\n    event: SyntheticEvent<HTMLButtonElement>,\n    id: string\n  ) => {\n    this.submitting = true;\n    this.target = event.currentTarget.name;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(\"deleting activity\", () => {\n        this.activityRegistry.delete(id);\n        this.submitting = false;\n        this.target = \"\";\n      });\n    } catch (error) {\n      runInAction(\"delete activity error\", () => {\n        this.submitting = false;\n        this.target = \"\";\n      });\n      console.log(error);\n    }\n  };\n\n  @action attendActivity = async () => {\n    const attendee = createAttendee(this.rootStore.userStore.user!);\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.activity!.id);\n      runInAction(() => {\n        if (this.activity) {\n          this.activity.attendees.push(attendee);\n          this.activity.isGoing = true;\n          this.activityRegistry.set(this.activity.id, this.activity);\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => {\n        this.loading = false;\n      });\n      toast.error(\"Problem signing up to activity\");\n    }\n  };\n  @action cancelAttendance = async () => {\n    this.loading = true;\n\n    try {\n      await agent.Activities.unattend(this.activity!.id);\n\n      runInAction(() => {\n        if (this.activity) {\n          this.activity.attendees = this.activity.attendees.filter(\n            (a) => a.userName !== this.rootStore.userStore.user!.username\n          );\n          this.activity.isGoing = false;\n          this.activityRegistry.set(this.activity.id, this.activity);\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => {\n        this.loading = false;\n      });\n      toast.error(\"Problem cancelling activity\");\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}