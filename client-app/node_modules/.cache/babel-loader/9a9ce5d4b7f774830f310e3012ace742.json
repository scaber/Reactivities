{"ast":null,"code":"import React,{useContext,useEffect}from'react';import{Grid}from'semantic-ui-react';import ProfileHeader from'./ProfileHeader';import{ProfileContent}from'./ProfileContent';import{RootStoreContext}from'../../app/stores/rootStore';import LoadingComponent from'../../app/layout/LoadingComponent';import{observer}from'mobx-react-lite';var ProfilePage=function ProfilePage(_ref){var match=_ref.match;var rootStore=useContext(RootStoreContext);var _rootStore$profileSto=rootStore.profileStore,loadingProfile=_rootStore$profileSto.loadingProfile,profile=_rootStore$profileSto.profile,loadProfile=_rootStore$profileSto.loadProfile,follow=_rootStore$profileSto.follow,unfollow=_rootStore$profileSto.unfollow,isCurrentUser=_rootStore$profileSto.isCurrentUser,loading=_rootStore$profileSto.loading,setActiveTab=_rootStore$profileSto.setActiveTab;useEffect(function(){loadProfile(match.params.userName);},[loadProfile,match]);if(loadingProfile)return/*#__PURE__*/React.createElement(LoadingComponent,{content:\"Loading profile...\"});return/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:16},/*#__PURE__*/React.createElement(ProfileHeader,{profile:profile,isCurrentUser:isCurrentUser,loading:loading,follow:follow,unfollow:unfollow}),/*#__PURE__*/React.createElement(ProfileContent,{setActiveTab:setActiveTab})));};export default observer(ProfilePage);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/profiles/ProfilePage.tsx"],"names":["React","useContext","useEffect","Grid","ProfileHeader","ProfileContent","RootStoreContext","LoadingComponent","observer","ProfilePage","match","rootStore","profileStore","loadingProfile","profile","loadProfile","follow","unfollow","isCurrentUser","loading","setActiveTab","params","userName"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAAQC,cAAR,KAA6B,kBAA7B,CAEA,OAASC,gBAAT,KAAiC,4BAAjC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,mCAA7B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CAQA,GAAMC,CAAAA,WAA6B,CAAG,QAAhCA,CAAAA,WAAgC,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CACnD,GAAMC,CAAAA,SAAS,CAAGV,UAAU,CAACK,gBAAD,CAA5B,CADmD,0BAW/CK,SAAS,CAACC,YAXqC,CAGjDC,cAHiD,uBAGjDA,cAHiD,CAIjDC,OAJiD,uBAIjDA,OAJiD,CAKjDC,WALiD,uBAKjDA,WALiD,CAMjDC,MANiD,uBAMjDA,MANiD,CAOjDC,QAPiD,uBAOjDA,QAPiD,CAQjDC,aARiD,uBAQjDA,aARiD,CASjDC,OATiD,uBASjDA,OATiD,CAUjDC,YAViD,uBAUjDA,YAViD,CAanDlB,SAAS,CAAC,UAAM,CACda,WAAW,CAACL,KAAK,CAACW,MAAN,CAAaC,QAAd,CAAX,CACD,CAFQ,CAEN,CAACP,WAAD,CAAcL,KAAd,CAFM,CAAT,CAIA,GAAIG,cAAJ,CAAoB,mBAAO,oBAAC,gBAAD,EAAkB,OAAO,CAAC,oBAA1B,EAAP,CAEpB,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,EAApB,eACE,oBAAC,aAAD,EACE,OAAO,CAAEC,OADX,CAEE,aAAa,CAAEI,aAFjB,CAGE,OAAO,CAAEC,OAHX,CAIE,MAAM,CAAEH,MAJV,CAKE,QAAQ,CAAEC,QALZ,EADF,cAQE,oBAAC,cAAD,EAAgB,YAAY,CAAEG,YAA9B,EARF,CADF,CADF,CAcD,CAjCD,CAmCA,cAAeZ,CAAAA,QAAQ,CAACC,WAAD,CAAvB","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport {ProfileContent} from './ProfileContent';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface RouteParams {\r\n    userName: string;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams> {}\r\n\r\nconst ProfilePage: React.FC<IProps> = ({ match }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadingProfile,\r\n    profile,\r\n    loadProfile,\r\n    follow,\r\n    unfollow,\r\n    isCurrentUser,\r\n    loading,\r\n    setActiveTab\r\n  } = rootStore.profileStore;\r\n \r\n  useEffect(() => {\r\n    loadProfile(match.params.userName);\r\n  }, [loadProfile, match]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content='Loading profile...' />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        <ProfileHeader\r\n          profile={profile!}\r\n          isCurrentUser={isCurrentUser}\r\n          loading={loading}\r\n          follow={follow}\r\n          unfollow={unfollow}\r\n        />\r\n        <ProfileContent setActiveTab={setActiveTab}  />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);"]},"metadata":{},"sourceType":"module"}