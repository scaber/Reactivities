{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A dropdown menu can contain dividers to separate related content.\n */\n\nfunction DropdownDivider(props) {\n  var className = props.className;\n  var classes = cx('divider', className);\n  var rest = getUnhandledProps(DropdownDivider, props);\n  var ElementType = getElementType(DropdownDivider, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nDropdownDivider.handledProps = [\"as\", \"className\"];\nDropdownDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default DropdownDivider;","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownDivider.js"],"names":["_extends","cx","PropTypes","React","customPropTypes","getElementType","getUnhandledProps","DropdownDivider","props","className","classes","rest","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","as","string"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,QAAmE,WAAnE;AACA;;;;AAIA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AACA,MAAIC,OAAO,GAAGT,EAAE,CAAC,SAAD,EAAYQ,SAAZ,CAAhB;AACA,MAAIE,IAAI,GAAGL,iBAAiB,CAACC,eAAD,EAAkBC,KAAlB,CAA5B;AACA,MAAII,WAAW,GAAGP,cAAc,CAACE,eAAD,EAAkBC,KAAlB,CAAhC;AACA,SAAOL,KAAK,CAACU,aAAN,CAAoBD,WAApB,EAAiCZ,QAAQ,CAAC,EAAD,EAAKW,IAAL,EAAW;AACzDF,IAAAA,SAAS,EAAEC;AAD8C,GAAX,CAAzC,CAAP;AAGD;;AAEDH,eAAe,CAACO,YAAhB,GAA+B,CAAC,IAAD,EAAO,WAAP,CAA/B;AACAP,eAAe,CAACQ,SAAhB,GAA4BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAClE;AACAC,EAAAA,EAAE,EAAEf,eAAe,CAACe,EAF8C;;AAIlE;AACAV,EAAAA,SAAS,EAAEP,SAAS,CAACkB;AAL6C,CAAxC,GAMxB,EANJ;AAOA,eAAeb,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A dropdown menu can contain dividers to separate related content.\n */\n\nfunction DropdownDivider(props) {\n  var className = props.className;\n  var classes = cx('divider', className);\n  var rest = getUnhandledProps(DropdownDivider, props);\n  var ElementType = getElementType(DropdownDivider, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nDropdownDivider.handledProps = [\"as\", \"className\"];\nDropdownDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default DropdownDivider;"]},"metadata":{},"sourceType":"module"}