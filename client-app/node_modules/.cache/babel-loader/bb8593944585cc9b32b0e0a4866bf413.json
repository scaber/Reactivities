{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityListItem.tsx\";\nimport React from \"react\";\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { ActivityListItemAttendee } from \"./ActivityListItemAttendee\";\n\nconst ActivityListItem = ({\n  activity\n}) => {\n  const host = activity.attendees.filter(x => x.isHost)[0];\n  debugger;\n  return React.createElement(Segment.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Item.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Item.Image, {\n    size: \"tiny\",\n    circular: true,\n    src: host.image || \"/assets/user.png\",\n    style: {\n      marginBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Item.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Item.Header, {\n    as: \"a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, activity.title), React.createElement(Item.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Hosted by \", ' ', React.createElement(Link, {\n    to: \"/profile/\".concat(host.userName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" \", host.display, \" \")), activity.isHost && React.createElement(Item.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Label, {\n    basic: true,\n    color: \"orange\",\n    content: \"You are hosting this activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), activity.isGoing && !activity.isHost && React.createElement(Item.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Label, {\n    basic: true,\n    color: \"orange\",\n    content: \"You are going to this activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })))))), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"clock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), \" \", format(activity.date, \"h:mm a\"), React.createElement(Icon, {\n    name: \"marker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \" \", activity.venue, \", \", activity.city), React.createElement(Segment, {\n    secondary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(ActivityListItemAttendee, {\n    attendees: activity.attendees,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Segment, {\n    clearing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, activity.description), React.createElement(Button, {\n    as: Link,\n    to: \"/activities/\".concat(activity.id),\n    floated: \"right\",\n    content: \"View\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n};\n\nexport default ActivityListItem;","map":{"version":3,"sources":["C:\\Projects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx"],"names":["React","Item","Button","Segment","Icon","Label","Link","format","ActivityListItemAttendee","ActivityListItem","activity","host","attendees","filter","x","isHost","image","marginBottom","title","userName","display","isGoing","date","venue","city","description","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport { ActivityListItemAttendee } from \"./ActivityListItemAttendee\";\n\nconst ActivityListItem: React.FC<{ activity: IActivity }> = ({ activity }) => {\n  const host = activity.attendees.filter((x) => x.isHost)[0];\n  debugger\n  return (\n    <Segment.Group>\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image\n              size=\"tiny\"\n              circular\n              src={host.image || \"/assets/user.png\"}\n              style={{ marginBottom: 0 }}\n            />\n            <Item.Content>\n              <Item.Header as=\"a\">{activity.title}</Item.Header>\n              <Item.Description>\n                Hosted by {' '}\n                <Link to={`/profile/${host.userName}`}> {host.display} </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color=\"orange\"\n                    content=\"You are hosting this activity\"\n                  />\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color=\"orange\"\n                    content=\"You are going to this activity\"\n                  />\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <Icon name=\"clock\" /> {format(activity.date, \"h:mm a\")}\n        <Icon name=\"marker\" /> {activity.venue}, {activity.city}\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          floated=\"right\"\n          content=\"View\"\n          color=\"blue\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default ActivityListItem;\n"]},"metadata":{},"sourceType":"module"}