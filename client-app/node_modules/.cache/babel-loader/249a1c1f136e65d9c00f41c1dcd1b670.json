{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfileFollowing.tsx\";\nimport React, { useContext } from 'react';\nimport { Tab, Grid, Header, Card } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport ProfileCard from './ProfileCard';\n\nconst ProfileFollowings = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    profile,\n    followings,\n    loadFollowings,\n    loading\n  } = rootStore.profileStore;\n  return /*#__PURE__*/React.createElement(Tab.Pane, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    floated: \"left\",\n    icon: \"user\",\n    content: true ? `People following ${profile.display}` : `People ${profile.display} is following`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Group, {\n    itemsPerRow: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, followings.map(profile => /*#__PURE__*/React.createElement(ProfileCard, {\n    key: profile.userName,\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nexport default ProfileFollowings;","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/profiles/ProfileFollowing.tsx"],"names":["React","useContext","Tab","Grid","Header","Card","RootStoreContext","ProfileCard","ProfileFollowings","rootStore","profile","followings","loadFollowings","loading","profileStore","display","map","userName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAA6C,OAA7C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,IAA5B,QAAwC,mBAAxC;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,SAAS,GAAGR,UAAU,CAACK,gBAAD,CAA5B;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAUC,IAAAA,UAAV;AAAqBC,IAAAA,cAArB;AAAoCC,IAAAA;AAApC,MAAgDJ,SAAS,CAACK,YAAhE;AAKA,sBACE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,OAAO,EAAED,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,OAAO,EACL,OACK,oBAAmBH,OAAO,CAAEK,OAAQ,EADzC,GAEK,UAASL,OAAO,CAAEK,OAAQ,eANnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAYE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,WAAW,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,UAAU,CAACK,GAAX,CAAgBN,OAAD,iBAClB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACO,QAA1B;AAAoC,IAAA,OAAO,EAAEP,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CADL,CADF,CAZF,CADF,CADF;AA0BD,CAjCD;;AAmCA,eAAeF,iBAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { Tab, Grid, Header, Card } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nconst ProfileFollowings = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { profile,followings,loadFollowings,loading } = rootStore.profileStore;\r\n\r\n \r\n \r\n\r\n  return (\r\n    <Tab.Pane loading={loading}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated='left'\r\n            icon='user'\r\n            content={\r\n              true\r\n                ? `People following ${profile!.display}`\r\n                : `People ${profile!.display} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={5}>\r\n              {followings.map((profile) => (\r\n            <ProfileCard key={profile.userName} profile={profile} />\r\n\r\n              ))}\r\n            \r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default ProfileFollowings;\r\n"]},"metadata":{},"sourceType":"module"}