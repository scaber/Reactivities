{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v22.1.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { RefSelector } from \"../../../widgets/componentAnnotations\";\nimport { _ } from \"../../../utils\";\nimport { SimpleFilter, ConditionPosition } from \"../simpleFilter\";\nimport { ScalerFilter } from \"../scalerFilter\";\n\nvar NumberFilter =\n/** @class */\nfunction (_super) {\n  __extends(NumberFilter, _super);\n\n  function NumberFilter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NumberFilter.prototype.mapRangeFromModel = function (filterModel) {\n    return {\n      from: filterModel.filter,\n      to: filterModel.filterTo\n    };\n  };\n\n  NumberFilter.prototype.getDefaultDebounceMs = function () {\n    return 500;\n  };\n\n  NumberFilter.prototype.resetUiToDefaults = function () {\n    _super.prototype.resetUiToDefaults.call(this);\n\n    this.eValueFrom1.value = null;\n    this.eValueFrom2.value = null;\n    this.eValueTo1.value = null;\n    this.eValueTo2.value = null;\n  };\n\n  NumberFilter.prototype.setConditionIntoUi = function (model, position) {\n    var positionOne = position === ConditionPosition.One;\n    var eValueFrom = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n    var eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n    eValueFrom.value = model ? '' + model.filter : null;\n    eValueTo.value = model ? '' + model.filterTo : null;\n  };\n\n  NumberFilter.prototype.setValueFromFloatingFilter = function (value) {\n    this.eValueFrom1.value = value;\n    this.eValueFrom2.value = null;\n    this.eValueTo1.value = null;\n    this.eValueTo2.value = null;\n  };\n\n  NumberFilter.prototype.comparator = function () {\n    return function (left, right) {\n      if (left === right) {\n        return 0;\n      }\n\n      if (left < right) {\n        return 1;\n      }\n\n      if (left > right) {\n        return -1;\n      }\n    };\n  };\n\n  NumberFilter.prototype.setParams = function (params) {\n    _super.prototype.setParams.call(this, params);\n\n    this.addValueChangedListeners();\n  };\n\n  NumberFilter.prototype.addValueChangedListeners = function () {\n    var _this = this;\n\n    var listener = function () {\n      return _this.onUiChanged();\n    };\n\n    this.addDestroyableEventListener(this.eValueFrom1, 'input', listener);\n    this.addDestroyableEventListener(this.eValueFrom2, 'input', listener);\n    this.addDestroyableEventListener(this.eValueTo1, 'input', listener);\n    this.addDestroyableEventListener(this.eValueTo2, 'input', listener);\n  };\n\n  NumberFilter.prototype.afterGuiAttached = function () {\n    this.eValueFrom1.focus();\n  };\n\n  NumberFilter.prototype.getDefaultFilterOptions = function () {\n    return NumberFilter.DEFAULT_FILTER_OPTIONS;\n  };\n\n  NumberFilter.prototype.createValueTemplate = function (position) {\n    var positionOne = position === ConditionPosition.One;\n    var pos = positionOne ? '1' : '2';\n    var translate = this.translate.bind(this);\n    return \"<div class=\\\"ag-filter-body\\\" ref=\\\"eCondition\" + pos + \"Body\\\" role=\\\"presentation\\\">\\n            <div class=\\\"ag-input-wrapper\\\" role=\\\"presentation\\\">\\n                <input class=\\\"ag-filter-filter\\\" ref=\\\"eValueFrom\" + pos + \"\\\" type=\\\"text\\\" placeholder=\\\"\" + translate('filterOoo') + \"\\\"/>\\n            </div>\\n             <div class=\\\"ag-input-wrapper ag-filter-number-to\\\" ref=\\\"ePanel\" + pos + \"\\\" role=\\\"presentation\\\">\\n                <input class=\\\"ag-filter-filter\\\" ref=\\\"eValueTo\" + pos + \"\\\" type=\\\"text\\\" placeholder=\\\"\" + translate('filterOoo') + \"\\\"/>\\n            </div>\\n        </div>\";\n  };\n\n  NumberFilter.prototype.isConditionUiComplete = function (position) {\n    var positionOne = position === ConditionPosition.One;\n    var option = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n    var eValue = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n    var eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n    var value = this.stringToFloat(eValue.value);\n    var valueTo = this.stringToFloat(eValueTo.value);\n\n    if (option === SimpleFilter.EMPTY) {\n      return false;\n    }\n\n    if (this.doesFilterHaveHiddenInput(option)) {\n      return true;\n    }\n\n    if (option === SimpleFilter.IN_RANGE) {\n      return value != null && valueTo != null;\n    } else {\n      return value != null;\n    }\n  };\n\n  NumberFilter.prototype.areSimpleModelsEqual = function (aSimple, bSimple) {\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\n  }; // needed for creating filter model\n\n\n  NumberFilter.prototype.getFilterType = function () {\n    return NumberFilter.FILTER_TYPE;\n  };\n\n  NumberFilter.prototype.stringToFloat = function (value) {\n    var filterText = _.makeNull(value);\n\n    if (filterText && filterText.trim() === '') {\n      filterText = null;\n    }\n\n    var newFilter;\n\n    if (filterText !== null && filterText !== undefined) {\n      newFilter = parseFloat(filterText);\n    } else {\n      newFilter = null;\n    }\n\n    return newFilter;\n  };\n\n  NumberFilter.prototype.createCondition = function (position) {\n    var positionOne = position === ConditionPosition.One;\n    var type = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n    var eValue = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n    var value = this.stringToFloat(eValue.value);\n    var eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n    var valueTo = this.stringToFloat(eValueTo.value);\n    var model = {\n      filterType: NumberFilter.FILTER_TYPE,\n      type: type\n    };\n\n    if (!this.doesFilterHaveHiddenInput(type)) {\n      model.filter = value;\n      model.filterTo = valueTo; // FIX - should only populate this when filter choice has 'to' option\n    }\n\n    return model;\n  };\n\n  NumberFilter.prototype.updateUiVisibility = function () {\n    _super.prototype.updateUiVisibility.call(this);\n\n    var showFrom1 = this.showValueFrom(this.getCondition1Type());\n\n    _.setDisplayed(this.eValueFrom1, showFrom1);\n\n    var showTo1 = this.showValueTo(this.getCondition1Type());\n\n    _.setDisplayed(this.eValueTo1, showTo1);\n\n    var showFrom2 = this.showValueFrom(this.getCondition2Type());\n\n    _.setDisplayed(this.eValueFrom2, showFrom2);\n\n    var showTo2 = this.showValueTo(this.getCondition2Type());\n\n    _.setDisplayed(this.eValueTo2, showTo2);\n  };\n\n  NumberFilter.FILTER_TYPE = 'number';\n  NumberFilter.DEFAULT_FILTER_OPTIONS = [ScalerFilter.EQUALS, ScalerFilter.NOT_EQUAL, ScalerFilter.LESS_THAN, ScalerFilter.LESS_THAN_OR_EQUAL, ScalerFilter.GREATER_THAN, ScalerFilter.GREATER_THAN_OR_EQUAL, ScalerFilter.IN_RANGE];\n\n  __decorate([RefSelector('eValueFrom1')], NumberFilter.prototype, \"eValueFrom1\", void 0);\n\n  __decorate([RefSelector('eValueFrom2')], NumberFilter.prototype, \"eValueFrom2\", void 0);\n\n  __decorate([RefSelector('eValueTo1')], NumberFilter.prototype, \"eValueTo1\", void 0);\n\n  __decorate([RefSelector('eValueTo2')], NumberFilter.prototype, \"eValueTo2\", void 0);\n\n  return NumberFilter;\n}(ScalerFilter);\n\nexport { NumberFilter };","map":null,"metadata":{},"sourceType":"module"}