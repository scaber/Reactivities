{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v22.1.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Bean } from \"../context/context\";\n\nvar CellPositionUtils =\n/** @class */\nfunction () {\n  function CellPositionUtils() {}\n\n  CellPositionUtils.prototype.createId = function (cellPosition) {\n    var rowIndex = cellPosition.rowIndex,\n        rowPinned = cellPosition.rowPinned,\n        column = cellPosition.column;\n    return this.createIdFromValues(rowIndex, column, rowPinned);\n  };\n\n  CellPositionUtils.prototype.createIdFromValues = function (rowIndex, column, rowPinned) {\n    return rowIndex + \".\" + (rowPinned == null ? 'null' : rowPinned) + \".\" + column.getId();\n  };\n\n  CellPositionUtils.prototype.equals = function (cellA, cellB) {\n    var colsMatch = cellA.column === cellB.column;\n    var floatingMatch = cellA.rowPinned === cellB.rowPinned;\n    var indexMatch = cellA.rowIndex === cellB.rowIndex;\n    return colsMatch && floatingMatch && indexMatch;\n  };\n\n  CellPositionUtils = __decorate([Bean('cellPositionUtils')], CellPositionUtils);\n  return CellPositionUtils;\n}();\n\nexport { CellPositionUtils };","map":null,"metadata":{},"sourceType":"module"}