{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\app\\\\common\\\\photoUpload\\\\PhotoUploadWidget.tsx\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Header, Grid, Button } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nexport const PhotoUploadWidget = ({\n  loading,\n  uploadPhoto\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        files = _useState2[0],\n        setFiles = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        image = _useState4[0],\n        setImage = _useState4[1];\n\n  useEffect(() => {\n    return () => {\n      files.forEach(file => URL.revokeObjectURL(file.preview));\n    };\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Header, {\n    color: \"teal\",\n    sub: true,\n    content: \"Step 1 - Add Photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(PhotoWidgetDropzone, {\n    setFiles: setFiles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Header, {\n    sub: true,\n    color: \"teal\",\n    content: \"Step 2 - Resize image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), files.length > 0 && React.createElement(PhotoWidgetCropper, {\n    setImage: setImage,\n    imagePreview: files[0].preview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Header, {\n    sub: true,\n    color: \"teal\",\n    content: \"Step 3 - Preview & Upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), files.length > 0 && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"img-preview\",\n    style: {\n      minHeight: \"200px\",\n      overflow: \"hidden\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Button.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Button, {\n    positive: true,\n    icon: \"check\",\n    loading: loading,\n    onClick: () => uploadPhoto(image),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Button, {\n    icon: \"close\",\n    disabled: loading,\n    onClick: () => setFiles([]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))))));\n};\nexport default observer(PhotoUploadWidget);","map":{"version":3,"sources":["C:\\Projects\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoUploadWidget.tsx"],"names":["React","Fragment","useState","useEffect","Header","Grid","Button","observer","PhotoWidgetDropzone","PhotoWidgetCropper","PhotoUploadWidget","loading","uploadPhoto","files","setFiles","image","setImage","forEach","file","URL","revokeObjectURL","preview","length","minHeight","overflow"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Header, Grid, Image, Button } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\n\r\ninterface IProps {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\nexport const PhotoUploadWidget: React.FC<IProps> = ({\r\n  loading,\r\n  uploadPhoto,\r\n}) => {\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [image, setImage] = useState<Blob | null>(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid>\r\n        <Grid.Column width={4}>\r\n          <Header color=\"teal\" sub content=\"Step 1 - Add Photo\" />\r\n          <PhotoWidgetDropzone setFiles={setFiles} />\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n          {files.length > 0 && (\r\n            <PhotoWidgetCropper\r\n              setImage={setImage}\r\n              imagePreview={files[0].preview}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n          {files.length > 0 && (\r\n            <Fragment>\r\n              <div\r\n                className=\"img-preview\"\r\n                style={{ minHeight: \"200px\", overflow: \"hidden\" }}\r\n              ></div>\r\n              <Button.Group>\r\n                <Button\r\n                  positive\r\n                  icon=\"check\"\r\n                  loading={loading}\r\n                  onClick={() => uploadPhoto(image!)}\r\n                />\r\n                 <Button\r\n                   \r\n                  icon=\"close\"\r\n                  disabled={loading}\r\n                  onClick={() => setFiles([])}\r\n                />\r\n              </Button.Group>\r\n            </Fragment>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(PhotoUploadWidget);\r\n"]},"metadata":{},"sourceType":"module"}