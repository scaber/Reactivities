{"ast":null,"code":"import React,{useContext}from\"react\";import{Segment,Item,Header,Button,Image}from\"semantic-ui-react\";import{observer}from\"mobx-react-lite\";import{Link}from\"react-router-dom\";import{format}from\"date-fns\";import{RootStoreContext}from\"../../../app/stores/rootStore\";var activityImageStyle={filter:\"brightness(30%)\"};var activityImageTextStyle={position:\"absolute\",bottom:\"5%\",left:\"5%\",width:\"100%\",height:\"auto\",color:\"white\"};var ActivityDetailedHeader=function ActivityDetailedHeader(_ref){var activity=_ref.activity;var rootStore=useContext(RootStoreContext);var _rootStore$activitySt=rootStore.activityStore,attendActivity=_rootStore$activitySt.attendActivity,cancelAttendance=_rootStore$activitySt.cancelAttendance,loading=_rootStore$activitySt.loading;var host=activity.attendees.filter(function(x){return x.isHost;})[0];return/*#__PURE__*/React.createElement(Segment.Group,null,/*#__PURE__*/React.createElement(Segment,{basic:true,attached:\"top\",style:{padding:\"0\"}},/*#__PURE__*/React.createElement(Image,{src:\"/assets/categoryImages/\".concat(activity.category,\".jpg\"),fluid:true,style:activityImageStyle}),/*#__PURE__*/React.createElement(Segment,{style:activityImageTextStyle,basic:true},/*#__PURE__*/React.createElement(Item.Group,null,/*#__PURE__*/React.createElement(Item,null,/*#__PURE__*/React.createElement(Item.Content,null,/*#__PURE__*/React.createElement(Header,{size:\"huge\",content:activity.title,style:{color:\"white\"}}),/*#__PURE__*/React.createElement(\"p\",null,format(activity.date,\"eeee do MMMM\")),/*#__PURE__*/React.createElement(\"p\",null,\"Hosted by \",' ',/*#__PURE__*/React.createElement(Link,{to:\"/profile/\".concat(host.userName)},/*#__PURE__*/React.createElement(\"strong\",null,host.display)))))))),/*#__PURE__*/React.createElement(Segment,{clearing:true,attached:\"bottom\"},activity.isHost?/*#__PURE__*/React.createElement(Button,{as:Link,to:\"/manage/\".concat(activity.id),color:\"orange\",floated:\"right\"},\"Manage Event\"):activity.isGoing?/*#__PURE__*/React.createElement(Button,{loading:loading,onClick:cancelAttendance},\"Cancel attendance\"):/*#__PURE__*/React.createElement(Button,{loading:loading,onClick:attendActivity,color:\"teal\"},\"Join Activity\")));};export default observer(ActivityDetailedHeader);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/activities/details/ActivityDetailedHeader.tsx"],"names":["React","useContext","Segment","Item","Header","Button","Image","observer","Link","format","RootStoreContext","activityImageStyle","filter","activityImageTextStyle","position","bottom","left","width","height","color","ActivityDetailedHeader","activity","rootStore","activityStore","attendActivity","cancelAttendance","loading","host","attendees","x","isHost","padding","category","title","date","userName","display","id","isGoing"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,OAAT,CAAkBC,IAAlB,CAAwBC,MAAxB,CAAgCC,MAAhC,CAAwCC,KAAxC,KAAqD,mBAArD,CAEA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,CACzBC,MAAM,CAAE,iBADiB,CAA3B,CAIA,GAAMC,CAAAA,sBAAsB,CAAG,CAC7BC,QAAQ,CAAE,UADmB,CAE7BC,MAAM,CAAE,IAFqB,CAG7BC,IAAI,CAAE,IAHuB,CAI7BC,KAAK,CAAE,MAJsB,CAK7BC,MAAM,CAAE,MALqB,CAM7BC,KAAK,CAAE,OANsB,CAA/B,CASA,GAAMC,CAAAA,sBAAyD,CAAG,QAA5DA,CAAAA,sBAA4D,MAE5D,IADJC,CAAAA,QACI,MADJA,QACI,CACJ,GAAMC,CAAAA,SAAS,CAAGrB,UAAU,CAACS,gBAAD,CAA5B,CADI,0BAEkDY,SAAS,CAACC,aAF5D,CAEIC,cAFJ,uBAEIA,cAFJ,CAEoBC,gBAFpB,uBAEoBA,gBAFpB,CAEsCC,OAFtC,uBAEsCA,OAFtC,CAGJ,GAAMC,CAAAA,IAAI,CAAGN,QAAQ,CAACO,SAAT,CAAmBhB,MAAnB,CAA0B,SAACiB,CAAD,QAAOA,CAAAA,CAAC,CAACC,MAAT,EAA1B,EAA2C,CAA3C,CAAb,CAEA,mBACE,oBAAC,OAAD,CAAS,KAAT,mBACE,oBAAC,OAAD,EAAS,KAAK,KAAd,CAAe,QAAQ,CAAC,KAAxB,CAA8B,KAAK,CAAE,CAAEC,OAAO,CAAE,GAAX,CAArC,eACE,oBAAC,KAAD,EACE,GAAG,kCAA4BV,QAAQ,CAACW,QAArC,QADL,CAEE,KAAK,KAFP,CAGE,KAAK,CAAErB,kBAHT,EADF,cAME,oBAAC,OAAD,EAAS,KAAK,CAAEE,sBAAhB,CAAwC,KAAK,KAA7C,eACE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,OAAN,mBACE,oBAAC,MAAD,EACE,IAAI,CAAC,MADP,CAEE,OAAO,CAAEQ,QAAQ,CAACY,KAFpB,CAGE,KAAK,CAAE,CAAEd,KAAK,CAAE,OAAT,CAHT,EADF,cAME,6BAAIV,MAAM,CAACY,QAAQ,CAACa,IAAV,CAAgB,cAAhB,CAAV,CANF,cAOE,0CACa,GADb,cAEE,oBAAC,IAAD,EAAM,EAAE,oBAAcP,IAAI,CAACQ,QAAnB,CAAR,eACA,kCAASR,IAAI,CAACS,OAAd,CADA,CAFF,CAPF,CADF,CADF,CADF,CANF,CADF,cA4BE,oBAAC,OAAD,EAAS,QAAQ,KAAjB,CAAkB,QAAQ,CAAC,QAA3B,EACGf,QAAQ,CAACS,MAAT,cACC,oBAAC,MAAD,EACE,EAAE,CAAEtB,IADN,CAEE,EAAE,mBAAaa,QAAQ,CAACgB,EAAtB,CAFJ,CAGE,KAAK,CAAC,QAHR,CAIE,OAAO,CAAC,OAJV,iBADD,CASGhB,QAAQ,CAACiB,OAAT,cACF,oBAAC,MAAD,EAAQ,OAAO,CAAEZ,OAAjB,CAA0B,OAAO,CAAED,gBAAnC,sBADE,cAKF,oBAAC,MAAD,EAAQ,OAAO,CAAEC,OAAjB,CAA0B,OAAO,CAAEF,cAAnC,CAAmD,KAAK,CAAC,MAAzD,kBAfJ,CA5BF,CADF,CAmDD,CA1DD,CA4DA,cAAejB,CAAAA,QAAQ,CAACa,sBAAD,CAAvB","sourcesContent":["import React, { useContext } from \"react\";\nimport { Segment, Item, Header, Button, Image } from \"semantic-ui-react\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity }> = ({\n  activity,\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const { attendActivity, cancelAttendance, loading } = rootStore.activityStore;\n  const host = activity.attendees.filter((x) => x.isHost)[0];\n\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date, \"eeee do MMMM\")}</p>\n                <p>\n                  Hosted by {' '} \n                  <Link to={`/profile/${host.userName}`}>\n                  <strong>{host.display}</strong>\n                  </Link> \n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <Button\n            as={Link}\n            to={`/manage/${activity.id}`}\n            color=\"orange\"\n            floated=\"right\"\n          >\n            Manage Event\n          </Button>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={cancelAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button loading={loading} onClick={attendActivity} color=\"teal\">\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityDetailedHeader);\n"]},"metadata":{},"sourceType":"module"}