{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inDOM = _interopRequireDefault(require(\"dom-helpers/util/inDOM\"));\n\nvar _activeElement = _interopRequireDefault(require(\"dom-helpers/activeElement\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _Input = _interopRequireDefault(require(\"./Input\"));\n\nvar Props = _interopRequireWildcard(require(\"./util/Props\"));\n\nvar CustomPropTypes = _interopRequireWildcard(require(\"./util/PropTypes\"));\n\nvar _localizers = require(\"./util/localizers\");\n\nvar _class, _class2, _temp;\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar getFormat = function getFormat(props) {\n  return _localizers.number.getFormat('default', props.format);\n};\n\nvar isSign = function isSign(val) {\n  return (val || '').trim() === '-';\n};\n\nfunction isPaddedZeros(str, culture) {\n  var localeChar = _localizers.number.decimalChar(null, culture);\n\n  var _str$split = str.split(localeChar),\n      _ = _str$split[0],\n      decimals = _str$split[1];\n\n  return !!(decimals && decimals.match(/0+$/));\n}\n\nfunction isAtDelimiter(num, str, culture) {\n  var localeChar = _localizers.number.decimalChar(null, culture),\n      lastIndex = str.length - 1,\n      char;\n\n  if (str.length < 1) return false;\n  char = str[lastIndex];\n  return !!(char === localeChar && str.indexOf(char) === lastIndex);\n}\n\nvar NumberPickerInput = (0, _reactLifecyclesCompat.polyfill)(_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(NumberPickerInput, _React$Component);\n\n  function NumberPickerInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {};\n\n    _this.handleBlur = function (event) {\n      var str = _this.state.stringValue,\n          number = _this.parseNumber(str); // if number is below the min\n      // we need to flush low values and decimal stops, onBlur means i'm done inputing\n\n\n      if (_this.isIntermediateValue(number, str)) {\n        if (isNaN(number)) {\n          number = null;\n        }\n\n        _this.props.onChange(number, event);\n      }\n    };\n\n    _this.handleChange = function (event) {\n      var _this$props = _this.props,\n          value = _this$props.value,\n          onChange = _this$props.onChange;\n\n      var stringValue = event.target.value,\n          numberValue = _this.parseNumber(stringValue);\n\n      var isIntermediate = _this.isIntermediateValue(numberValue, stringValue);\n\n      if (stringValue == null || stringValue.trim() === '') {\n        _this.setStringValue('');\n\n        onChange(null, event);\n        return;\n      } // order here matters a lot\n\n\n      if (isIntermediate) {\n        _this.setStringValue(stringValue);\n      } else if (numberValue !== value) {\n        onChange(numberValue, event);\n      } else if (stringValue != _this.state.stringValue) {\n        _this.setStringValue(stringValue);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = NumberPickerInput.prototype;\n\n  _proto.getSnapshotBeforeUpdate = function getSnapshotBeforeUpdate(_ref) {\n    var editing = _ref.editing;\n    return {\n      reselectText: !editing && this.props.editing && this.isSelectingAllText()\n    };\n  };\n\n  NumberPickerInput.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var value = nextProps.value,\n        culture = nextProps.culture,\n        editing = nextProps.editing;\n\n    var decimal = _localizers.number.decimalChar(null, culture);\n\n    var format = getFormat(nextProps);\n    if (value == null || isNaN(value)) value = '';else value = editing ? ('' + value).replace('.', decimal) : _localizers.number.format(value, format, culture);\n    var stringValue = '' + value;\n    if (prevState.lastValueFromProps !== stringValue) return {\n      stringValue: stringValue,\n      lastValueFromProps: stringValue\n    };\n    return null;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(_, __, _ref2) {\n    var reselectText = _ref2.reselectText;\n    if (reselectText) (0, _reactDom.findDOMNode)(this).select();\n  }; // this intermediate state is for when one runs into\n  // the decimal or are typing the number\n\n\n  _proto.setStringValue = function setStringValue(stringValue) {\n    this.setState({\n      stringValue: stringValue\n    });\n  };\n\n  _proto.isIntermediateValue = function isIntermediateValue(num, str) {\n    var _this$props2 = this.props,\n        culture = _this$props2.culture,\n        min = _this$props2.min;\n    return !!(num < min || isSign(str) || isAtDelimiter(num, str, culture) || isPaddedZeros(str, culture));\n  };\n\n  _proto.isSelectingAllText = function isSelectingAllText() {\n    var node = _inDOM.default && (0, _reactDom.findDOMNode)(this);\n    return _inDOM.default && (0, _activeElement.default)() === node && node.selectionStart === 0 && node.selectionEnd === node.value.length;\n  };\n\n  _proto.parseNumber = function parseNumber(strVal) {\n    var _this$props3 = this.props,\n        culture = _this$props3.culture,\n        userParse = _this$props3.parse;\n\n    var delimChar = _localizers.number.decimalChar(null, culture);\n\n    if (userParse) return userParse(strVal, culture);\n    strVal = strVal.replace(delimChar, '.');\n    strVal = parseFloat(strVal);\n    return strVal;\n  };\n\n  _proto.render = function render() {\n    var _this$props4 = this.props,\n        disabled = _this$props4.disabled,\n        readOnly = _this$props4.readOnly,\n        placeholder = _this$props4.placeholder,\n        min = _this$props4.min,\n        max = _this$props4.max;\n    var value = this.state.stringValue;\n    var props = Props.omitOwn(this);\n    return _react.default.createElement(_Input.default, _extends({}, props, {\n      className: \"rw-widget-input\",\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      \"aria-valuenow\": value,\n      \"aria-valuemin\": isFinite(min) ? min : null,\n      \"aria-valuemax\": isFinite(max) ? max : null,\n      disabled: disabled,\n      readOnly: readOnly,\n      placeholder: placeholder,\n      value: value\n    }));\n  };\n\n  return NumberPickerInput;\n}(_react.default.Component), _class2.defaultProps = {\n  value: null,\n  editing: false\n}, _class2.propTypes = {\n  value: _propTypes.default.number,\n  editing: _propTypes.default.bool,\n  placeholder: _propTypes.default.string,\n  format: CustomPropTypes.numberFormat,\n  parse: _propTypes.default.func,\n  culture: _propTypes.default.string,\n  min: _propTypes.default.number,\n  max: _propTypes.default.number,\n  disabled: CustomPropTypes.disabled,\n  readOnly: CustomPropTypes.disabled,\n  onChange: _propTypes.default.func.isRequired\n}, _temp)) || _class;\n\nvar _default = NumberPickerInput;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}