{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\app\\\\common\\\\photoUpload\\\\PhotoUploadWidget.tsx\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Header, Grid } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\nexport const PhotoUploadWidget = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        files = _useState2[0],\n        setFiles = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        image = _useState4[0],\n        setImage = _useState4[1];\n\n  useEffect(() => {\n    return () => {\n      files.forEach(file => URL.revokeObjectURL(file.preview));\n    };\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Header, {\n    color: \"teal\",\n    sub: true,\n    content: \"Step 1 - Add Photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(PhotoWidgetDropzone, {\n    setFiles: setFiles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Header, {\n    sub: true,\n    color: \"teal\",\n    content: \"Step 2 - Resize image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), files.length > 0 && React.createElement(PhotoWidgetCropper, {\n    setImage: setImage,\n    imagePreview: files[0].preview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Header, {\n    sub: true,\n    color: \"teal\",\n    content: \"Step 3 - Preview & Upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), files.length > 0 && React.createElement(\"div\", {\n    className: \"img-preview\",\n    style: {\n      minHeight: '200px',\n      overflow: 'hidden'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n};\nexport default observer(PhotoUploadWidget);","map":{"version":3,"sources":["C:\\Projects\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoUploadWidget.tsx"],"names":["React","Fragment","useState","useEffect","Header","Grid","observer","PhotoWidgetDropzone","PhotoWidgetCropper","PhotoUploadWidget","files","setFiles","image","setImage","forEach","file","URL","revokeObjectURL","preview","length","minHeight","overflow"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAAmC,mBAAnC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAK;AAAA,oBACVP,QAAQ,CAAQ,EAAR,CADE;AAAA;AAAA,QAC3BQ,KAD2B;AAAA,QACrBC,QADqB;;AAAA,qBAEVT,QAAQ,CAAc,IAAd,CAFE;AAAA;AAAA,QAE3BU,KAF2B;AAAA,QAErBC,QAFqB;;AAIlCV,EAAAA,SAAS,CAAC,MAAM;AACX,WAAO,MAAM;AACVO,MAAAA,KAAK,CAACI,OAAN,CAAcC,IAAI,IAAGC,GAAG,CAACC,eAAJ,CAAoBF,IAAI,CAACG,OAAzB,CAArB;AACH,KAFA;AAGJ,GAJQ,CAAT;AAMA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,GAAG,MAAxB;AAAyB,IAAA,OAAO,EAAC,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,EAAEP,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,GAAG,MAAX;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAC,uBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,KAAK,CAACS,MAAN,GAAc,CAAd,IACD,oBAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEN,QAA9B;AAAwC,IAAA,YAAY,EAAEH,KAAK,CAAC,CAAD,CAAL,CAASQ,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CANF,EAWE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,GAAG,MAAX;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAC,2BAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEIR,KAAK,CAACS,MAAN,GAAc,CAAd,IACD;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE,OAAZ;AAAoBC,MAAAA,QAAQ,EAAC;AAA7B,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CAZF,CADF,CADJ;AAsBH,CAhCM;AAkCP,eAAef,QAAQ,CAACG,iBAAD,CAAvB","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Header, Grid,Image } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\n\r\nexport const PhotoUploadWidget = () =>{\r\n    const [files,setFiles] =useState<any[]>([]);\r\n    const [image,setImage] =useState<Blob | null>(null);\r\n\r\n    useEffect(() => {\r\n         return () => {\r\n            files.forEach(file=> URL.revokeObjectURL(file.preview))\r\n        }\r\n    })\r\n     \r\n    return (\r\n        <Fragment>\r\n          <Grid> \r\n            <Grid.Column width={4}>\r\n              <Header color='teal' sub content='Step 1 - Add Photo' />\r\n              <PhotoWidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n              <Header sub color='teal' content='Step 2 - Resize image' />\r\n              {files.length >0 &&\r\n              <PhotoWidgetCropper setImage={setImage} imagePreview={files[0].preview}/>}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n              <Header sub color='teal' content='Step 3 - Preview & Upload' />\r\n               {files.length >0 && \r\n               <div className='img-preview' style={{minHeight: '200px',overflow:'hidden'}}></div>}\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Fragment>\r\n      )\r\n} \r\n\r\nexport default observer(PhotoUploadWidget);\r\n"]},"metadata":{},"sourceType":"module"}