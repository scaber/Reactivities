{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityDashboard.tsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport ActivityList from './ActivityList';\nimport { observer } from 'mobx-react-lite';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\n\nconst ActivityDashboard = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadActivities,\n    loadingInitial,\n    setPage,\n    page,\n    totalPages\n  } = rootStore.activityStore;\n  const [loadingNext, setloadingNext] = useState(false);\n\n  const handleGetNext = () => {\n    setloadingNext(true);\n    setPage(page + 1);\n    loadActivities().then(() => setloadingNext(false));\n  };\n\n  useEffect(() => {\n    loadActivities();\n  }, [loadActivities]);\n  if (loadingInitial) return /*#__PURE__*/React.createElement(LoadingComponent, {\n    content: \"Loading activities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActivityList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    floated: \"right\",\n    content: \"More ..\",\n    positive: true,\n    disabled: totalPages === page + 1,\n    onClick: handleGetNext,\n    loading: loadingNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Activity filters\")));\n};\n\nexport default observer(ActivityDashboard);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/activities/dashboard/ActivityDashboard.tsx"],"names":["React","useContext","useEffect","useState","Grid","Button","ActivityList","observer","LoadingComponent","RootStoreContext","ActivityDashboard","rootStore","loadActivities","loadingInitial","setPage","page","totalPages","activityStore","loadingNext","setloadingNext","handleGetNext","then"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AAEA,MAAMC,iBAA2B,GAAG,MAAM;AAExC,QAAMC,SAAS,GAAGV,UAAU,CAACQ,gBAAD,CAA5B;AACA,QAAM;AAACG,IAAAA,cAAD;AAAiBC,IAAAA,cAAjB;AAAgCC,IAAAA,OAAhC;AAAwCC,IAAAA,IAAxC;AAA6CC,IAAAA;AAA7C,MAA2DL,SAAS,CAACM,aAA3E;AAEA,QAAK,CAACC,WAAD,EAAaC,cAAb,IAA+BhB,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMiB,aAAa,GAAG,MAAM;AAC1BD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAL,IAAAA,OAAO,CAACC,IAAI,GAAC,CAAN,CAAP;AACAH,IAAAA,cAAc,GAAGS,IAAjB,CAAsB,MAAMF,cAAc,CAAC,KAAD,CAA1C;AACD,GAJD;;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,MAAIC,cAAJ,EACE,oBAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEF,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AACA,IAAA,OAAO,EAAC,OADR;AAEA,IAAA,OAAO,EAAC,SAFR;AAGA,IAAA,QAAQ,MAHR;AAIA,IAAA,QAAQ,EAAEG,UAAU,KAAKD,IAAI,GAAC,CAJ9B;AAKA,IAAA,OAAO,EAAEK,aALT;AAMA,IAAA,OAAO,EAAEF,WANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAYE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAZF,CADF;AAkBD,CAvCD;;AAyCA,eAAeX,QAAQ,CAACG,iBAAD,CAAvB","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport ActivityList from './ActivityList';\nimport { observer } from 'mobx-react-lite';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\n\nconst ActivityDashboard: React.FC = () => {\n\n  const rootStore = useContext(RootStoreContext);\n  const {loadActivities, loadingInitial,setPage,page,totalPages} = rootStore.activityStore;\n\n  const[loadingNext,setloadingNext] = useState(false);\n\n  const handleGetNext = () => {\n    setloadingNext(true);\n    setPage(page+1);\n    loadActivities().then(() => setloadingNext(false))\n  }\n\n\n  useEffect(() => {\n    loadActivities();\n  }, [loadActivities]);\n\n  if (loadingInitial)\n    return <LoadingComponent content='Loading activities' />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityList />\n        <Button\n        floated='right'\n        content='More ..'\n        positive\n        disabled={totalPages === page+1}\n        onClick={handleGetNext}\n        loading={loadingNext}\n        />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <h2>Activity filters</h2>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDashboard);\n"]},"metadata":{},"sourceType":"module"}