{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"antd/es/slider/style\");\n\nvar _slider = _interopRequireDefault(require(\"antd/es/slider\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _constants = require(\"../../constants\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Slider that changes opacity on a set of layers.\n *\n * @class The MultiLayerSlider\n * @extends React.Component\n */\n\n\nvar MultiLayerSlider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MultiLayerSlider, _React$Component);\n  /**\n   * The className added to this component.\n   * @private\n   */\n\n  /**\n   * The constructor.\n   *\n   * @constructs MultiLayerSlider\n   * @param props The properties.\n   */\n\n\n  function MultiLayerSlider(props) {\n    var _this;\n\n    _classCallCheck(this, MultiLayerSlider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiLayerSlider).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"multilayerslider\"));\n\n    var layers = props.layers;\n    layers.forEach(function (l) {\n      return l.setOpacity(0);\n    });\n    layers[0].setOpacity(1);\n    return _this;\n  }\n  /**\n   * Formats the tip for the slider.\n   * @param value The slider value\n   * @return The formatted tip value\n   */\n\n\n  _createClass(MultiLayerSlider, [{\n    key: \"formatTip\",\n    value: function formatTip(value) {\n      var layers = this.props.layers;\n      var layerIdx = this.getLayerIndexForSliderValue(value);\n      var tip;\n\n      if (layers[layerIdx]) {\n        var opacity = Math.round(layers[layerIdx].get('opacity') * 100);\n        var layer = layers[layerIdx];\n        var layername = layer.get('name') || layer.get('title');\n        tip = \"\".concat(layername, \" \").concat(opacity, \"%\");\n      }\n\n      return tip;\n    }\n    /**\n     * Called when the value of the slider changed.\n     */\n\n  }, {\n    key: \"valueUpdated\",\n    value: function valueUpdated(value) {\n      var layerIdx = this.getLayerIndexForSliderValue(value);\n      var opacity = this.getOpacityForValue(value);\n      var layers = this.props.layers; // set all opacities to 0 first\n\n      layers.forEach(function (l) {\n        return l.setOpacity(0);\n      });\n\n      if (layers[layerIdx]) {\n        layers[layerIdx].setOpacity(1 - opacity);\n      }\n\n      if (layers[layerIdx - 1] && opacity > 0.5) {\n        layers[layerIdx - 1].setOpacity(opacity - 0.5);\n      }\n\n      if (layers[layerIdx + 1]) {\n        layers[layerIdx + 1].setOpacity(opacity);\n      }\n    }\n    /**\n     * Gets the opacity for a given slider value\n     * @param value The current slider value\n     * @return The opacity\n     */\n\n  }, {\n    key: \"getOpacityForValue\",\n    value: function getOpacityForValue(value) {\n      var layers = this.props.layers;\n      var length = layers.length - 1;\n      var ticksPerLayer = Math.round(100 / length);\n      var idx = Math.floor(value / ticksPerLayer);\n      var opacity = value / ticksPerLayer - (idx > length ? length : idx);\n      return opacity > 1 ? 1 : opacity;\n    }\n    /**\n     * Gets the matching index of the layer array for a given slider value\n     * @param value the current slider value\n     * @return The layer array index\n     */\n\n  }, {\n    key: \"getLayerIndexForSliderValue\",\n    value: function getLayerIndexForSliderValue(value) {\n      var layers = this.props.layers;\n      var length = layers.length - 1;\n      var ticksPerLayer = Math.round(100 / length);\n      var idx = Math.floor(value / ticksPerLayer);\n      return idx > length ? length : idx;\n    }\n    /**\n     * Creates the marks used with the slider based on the layers names.\n     * @return The marks object\n     */\n\n  }, {\n    key: \"getMarks\",\n    value: function getMarks() {\n      var marks = {};\n      var layers = this.props.layers;\n      var length = layers.length - 1;\n      layers.forEach(function (layer, index) {\n        var layername = layer.get('name') || layer.get('title') || 'Layer ' + index + 1;\n        var idx = Math.round(100 / length * index);\n        marks[idx] = layername;\n      });\n      return marks;\n    }\n    /**\n     * The render function.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          layers = _this$props.layers,\n          defaultValue = _this$props.defaultValue,\n          className = _this$props.className,\n          passThroughProps = _objectWithoutProperties(_this$props, [\"layers\", \"defaultValue\", \"className\"]);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      return React.createElement(_slider[\"default\"], _extends({\n        className: finalClassName,\n        marks: this.getMarks(),\n        defaultValue: defaultValue,\n        min: 0,\n        max: 100,\n        tipFormatter: this.formatTip.bind(this),\n        onChange: this.valueUpdated.bind(this)\n      }, passThroughProps));\n    }\n  }]);\n\n  return MultiLayerSlider;\n}(React.Component);\n\n_defineProperty(MultiLayerSlider, \"defaultProps\", {\n  defaultValue: 0\n});\n\nvar _default = MultiLayerSlider;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}