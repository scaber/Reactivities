{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Geolocation = _interopRequireDefault(require(\"ol/Geolocation\"));\n\nvar _LineString = _interopRequireDefault(require(\"ol/geom/LineString\"));\n\nvar _Feature = _interopRequireDefault(require(\"ol/Feature\"));\n\nvar _Point = _interopRequireDefault(require(\"ol/geom/Point\"));\n\nvar _Vector = _interopRequireDefault(require(\"ol/layer/Vector\"));\n\nvar _Vector2 = _interopRequireDefault(require(\"ol/source/Vector\"));\n\nvar _Style = _interopRequireDefault(require(\"ol/style/Style\"));\n\nvar _Icon = _interopRequireDefault(require(\"ol/style/Icon\"));\n\nvar _ToggleButton = _interopRequireDefault(require(\"../ToggleButton/ToggleButton\"));\n\nvar _MapUtil = _interopRequireDefault(require(\"@terrestris/ol-util/dist/MapUtil/MapUtil\"));\n\nvar _MathUtil = _interopRequireDefault(require(\"@terrestris/base-util/dist/MathUtil/MathUtil\"));\n\nvar _constants = require(\"../../constants\");\n\nvar _geolocationMarker = _interopRequireDefault(require(\"./geolocation-marker.png\"));\n\nvar _geolocationMarkerHeading = _interopRequireDefault(require(\"./geolocation-marker-heading.png\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * The GeoLocationButton.\n *\n * @class The GeoLocationButton\n * @extends React.Component\n */\n\n\nvar GeoLocationButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GeoLocationButton, _React$Component);\n  /**\n   * The className added to this component.\n   *\n   * @private\n   */\n\n  /**\n   * The feature marking the current location.\n   */\n\n  /**\n   * The OpenLayers geolocation interaction.\n   */\n\n  /**\n   * The layer containing the markerFeature.\n   */\n\n  /**\n   * The styleFunction for the geoLocationLayer. Shows a marker with arrow when\n   * heading is not 0.\n   */\n\n  /**\n   * The default properties.\n   */\n\n  /**\n   * Creates the MeasureButton.\n   *\n   * @constructs MeasureButton\n   */\n\n\n  function GeoLocationButton(props) {\n    var _this;\n\n    _classCallCheck(this, GeoLocationButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GeoLocationButton).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_className\", \"\".concat(_constants.CSS_PREFIX, \"geolocationbutton\"));\n\n    _defineProperty(_assertThisInitialized(_this), \"_markerFeature\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"_geoLocationInteraction\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"_geoLocationLayer\", new _Vector[\"default\"]({\n      name: 'react-geo_geolocationlayer',\n      source: new _Vector2[\"default\"]()\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleFunction\", function (feature) {\n      var heading = feature.get('heading');\n      var src = heading !== 0 ? _geolocationMarkerHeading[\"default\"] : _geolocationMarker[\"default\"];\n      var rotation = heading !== 0 ? heading * Math.PI / 180 : 0;\n      return [new _Style[\"default\"]({\n        image: new _Icon[\"default\"]({\n          rotation: rotation,\n          src: src\n        })\n      })];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_positions\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onGeolocationChange\", function () {\n      var position = _this._geoLocationInteraction.getPosition();\n\n      var accuracy = _this._geoLocationInteraction.getAccuracy();\n\n      var heading = _this._geoLocationInteraction.getHeading() || 0;\n      var speed = _this._geoLocationInteraction.getSpeed() || 0;\n      var x = position[0];\n      var y = position[1];\n\n      var fCoords = _this._positions.getCoordinates();\n\n      var previous = fCoords[fCoords.length - 1];\n      var prevHeading = previous && previous[2];\n\n      if (prevHeading) {\n        var headingDiff = heading - _MathUtil[\"default\"].mod(prevHeading); // force the rotation change to be less than 180Â°\n\n\n        if (Math.abs(headingDiff) > Math.PI) {\n          var sign = headingDiff >= 0 ? 1 : -1;\n          headingDiff = -sign * (2 * Math.PI - Math.abs(headingDiff));\n        }\n\n        heading = prevHeading + headingDiff;\n      }\n\n      _this._positions.appendCoordinate([x, y, heading, Date.now()]); // only keep the 20 last coordinates\n\n\n      _this._positions.setCoordinates(_this._positions.getCoordinates().slice(-20));\n\n      _this.updateView();\n\n      _this.props.onGeolocationChange({\n        position: position,\n        accuracy: accuracy,\n        heading: heading,\n        speed: speed\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onGeolocationError\", function (error) {\n      _this.props.onError(error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function (pressed) {\n      var _this$props = _this.props,\n          showMarker = _this$props.showMarker,\n          trackingOptions = _this$props.trackingOptions,\n          map = _this$props.map;\n      var view = map.getView();\n\n      if (!pressed) {\n        if (_this._geoLocationInteraction) {\n          _this._geoLocationInteraction.un('change', _this.onGeolocationChange);\n\n          _this._geoLocationInteraction = null;\n        }\n\n        if (_this._markerFeature) {\n          _this._markerFeature = undefined;\n\n          _this._geoLocationLayer.getSource().clear();\n        }\n\n        return;\n      } // Geolocation Control\n\n\n      _this._geoLocationInteraction = new _Geolocation[\"default\"]({\n        projection: view.getProjection(),\n        trackingOptions: trackingOptions\n      });\n\n      _this._geoLocationInteraction.setTracking(true);\n\n      if (showMarker) {\n        if (!_this._markerFeature) {\n          _this._markerFeature = new _Feature[\"default\"]();\n        }\n\n        if (!_this._geoLocationLayer.getSource().getFeatures().includes(_this._markerFeature)) {\n          _this._geoLocationLayer.getSource().addFeature(_this._markerFeature);\n        }\n\n        var heading = _this._geoLocationInteraction.getHeading() || 0;\n        var speed = _this._geoLocationInteraction.getSpeed() || 0;\n\n        _this._markerFeature.set('speed', speed);\n\n        _this._markerFeature.set('heading', heading);\n      } // add listeners\n\n\n      _this._geoLocationInteraction.on('change', _this.onGeolocationChange);\n\n      _this._geoLocationInteraction.on('error', _this.onGeolocationError);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCenterWithHeading\", function (position, rotation, resolution) {\n      var size = _this.props.map.getSize();\n\n      var height = size[1];\n      return [position[0] - Math.sin(rotation) * height * resolution * 1 / 4, position[1] + Math.cos(rotation) * height * resolution * 1 / 4];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateView\", function () {\n      var view = _this.props.map.getView();\n\n      var deltaMean = 500; // the geolocation sampling period mean in ms\n\n      var previousM = 0; // use sampling period to get a smooth transition\n\n      var m = Date.now() - deltaMean * 1.5;\n      m = Math.max(m, previousM);\n      previousM = m; // interpolate position along positions LineString\n\n      var c = _this._positions.getCoordinateAtM(m, true);\n\n      if (c) {\n        if (_this.props.follow) {\n          view.setCenter(_this.getCenterWithHeading(c, -c[2], view.getResolution()));\n          view.setRotation(-c[2]);\n        }\n\n        if (_this.props.showMarker) {\n          var pointGeometry = new _Point[\"default\"]([c[0], c[1]]);\n\n          _this._markerFeature.setGeometry(pointGeometry);\n        }\n      }\n    });\n\n    var _this$props2 = _this.props,\n        _map = _this$props2.map,\n        _showMarker = _this$props2.showMarker;\n\n    var allLayers = _MapUtil[\"default\"].getAllLayers(_map);\n\n    _this._positions = new _LineString[\"default\"]([], 'XYZM');\n\n    _this._geoLocationLayer.setStyle(_this._styleFunction);\n\n    if (!allLayers.includes(_this._geoLocationLayer)) {\n      _map.addLayer(_this._geoLocationLayer);\n    }\n\n    _this.state = {};\n\n    if (_showMarker) {\n      _this._markerFeature = new _Feature[\"default\"]();\n\n      _this._geoLocationLayer.getSource().addFeature(_this._markerFeature);\n    }\n\n    return _this;\n  }\n  /**\n   * Adds the markerFeature if not already done and adds it to the geoLocation\n   * layer.\n   */\n\n\n  _createClass(GeoLocationButton, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var showMarker = this.props.showMarker;\n\n      if (showMarker && !this._markerFeature) {\n        this._markerFeature = new _Feature[\"default\"]();\n\n        this._geoLocationLayer.getSource().addFeature(this._markerFeature);\n      }\n    }\n    /**\n     * Callback of the interactions on change event.\n     */\n\n  }, {\n    key: \"render\",\n\n    /**\n     * The render function.\n     */\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          map = _this$props3.map,\n          showMarker = _this$props3.showMarker,\n          follow = _this$props3.follow,\n          onGeolocationChange = _this$props3.onGeolocationChange,\n          onError = _this$props3.onError,\n          trackingOptions = _this$props3.trackingOptions,\n          passThroughProps = _objectWithoutProperties(_this$props3, [\"className\", \"map\", \"showMarker\", \"follow\", \"onGeolocationChange\", \"onError\", \"trackingOptions\"]);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this._className) : this._className;\n      return React.createElement(_ToggleButton[\"default\"], _extends({\n        onToggle: this.onToggle,\n        className: finalClassName\n      }, passThroughProps));\n    }\n  }]);\n\n  return GeoLocationButton;\n}(React.Component);\n\n_defineProperty(GeoLocationButton, \"defaultProps\", {\n  onGeolocationChange: function onGeolocationChange() {\n    return undefined;\n  },\n  onError: function onError() {\n    return undefined;\n  },\n  showMarker: true,\n  follow: false,\n  trackingOptions: {\n    maximumAge: 10000,\n    enableHighAccuracy: true,\n    timeout: 600000\n  }\n});\n\nvar _default = GeoLocationButton;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}