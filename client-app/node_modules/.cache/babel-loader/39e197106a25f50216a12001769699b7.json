{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addMonths;\n\nvar _index = require('../_lib/toInteger/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../toDate/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('../getDaysInMonth/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\n\nfunction addMonths(dirtyDate, dirtyAmount, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = (0, _index4.default)(dirtyDate, dirtyOptions);\n  var amount = (0, _index2.default)(dirtyAmount);\n  var desiredMonth = date.getMonth() + amount;\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = (0, _index6.default)(dateWithDesiredMonth, dirtyOptions); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));\n  return date;\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/date-fns/addMonths/index.js"],"names":["Object","defineProperty","exports","value","default","addMonths","_index","require","_index2","_interopRequireDefault","_index3","_index4","_index5","_index6","obj","__esModule","dirtyDate","dirtyAmount","dirtyOptions","arguments","length","TypeError","date","amount","desiredMonth","getMonth","dateWithDesiredMonth","Date","setFullYear","getFullYear","setHours","daysInMonth","setMonth","Math","min","getDate","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,SAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,4BAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,MAAD,CAApC;;AAEA,IAAII,OAAO,GAAGH,OAAO,CAAC,oBAAD,CAArB;;AAEA,IAAII,OAAO,GAAGF,sBAAsB,CAACC,OAAD,CAApC;;AAEA,IAAIE,OAAO,GAAGL,OAAO,CAAC,4BAAD,CAArB;;AAEA,IAAIM,OAAO,GAAGJ,sBAAsB,CAACG,OAAD,CAApC;;AAEA,SAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEV,IAAAA,OAAO,EAAEU;AAAX,GAArC;AAAwD;AAE/F;;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAST,SAAT,CAAmBW,SAAnB,EAA8BC,WAA9B,EAA2CC,YAA3C,EAAyD;AACvD,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UAArE,CAAN;AACD;;AAED,MAAIE,IAAI,GAAG,CAAC,GAAGX,OAAO,CAACP,OAAZ,EAAqBY,SAArB,EAAgCE,YAAhC,CAAX;AACA,MAAIK,MAAM,GAAG,CAAC,GAAGf,OAAO,CAACJ,OAAZ,EAAqBa,WAArB,CAAb;AACA,MAAIO,YAAY,GAAGF,IAAI,CAACG,QAAL,KAAkBF,MAArC;AACA,MAAIG,oBAAoB,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAA3B;AACAD,EAAAA,oBAAoB,CAACE,WAArB,CAAiCN,IAAI,CAACO,WAAL,EAAjC,EAAqDL,YAArD,EAAmE,CAAnE;AACAE,EAAAA,oBAAoB,CAACI,QAArB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAAvC;AACA,MAAIC,WAAW,GAAG,CAAC,GAAGlB,OAAO,CAACT,OAAZ,EAAqBsB,oBAArB,EAA2CR,YAA3C,CAAlB,CAXuD,CAYvD;AACA;;AACAI,EAAAA,IAAI,CAACU,QAAL,CAAcR,YAAd,EAA4BS,IAAI,CAACC,GAAL,CAASH,WAAT,EAAsBT,IAAI,CAACa,OAAL,EAAtB,CAA5B;AACA,SAAOb,IAAP;AACD;;AACDc,MAAM,CAAClC,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addMonths;\n\nvar _index = require('../_lib/toInteger/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../toDate/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('../getDaysInMonth/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nfunction addMonths(dirtyDate, dirtyAmount, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = (0, _index4.default)(dirtyDate, dirtyOptions);\n  var amount = (0, _index2.default)(dirtyAmount);\n  var desiredMonth = date.getMonth() + amount;\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = (0, _index6.default)(dateWithDesiredMonth, dirtyOptions);\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));\n  return date;\n}\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}