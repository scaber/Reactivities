{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\app\\\\common\\\\form\\\\TextInput.tsx\";\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\nconst TextInput = ({\n  input,\n  width,\n  type,\n  placeholder,\n  meta: {\n    touched,\n    error\n  }\n}) => {\n  return /*#__PURE__*/React.createElement(Form.Field, {\n    error: touched && !!error,\n    type: type,\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n    placeholder: placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  })), touched && error && /*#__PURE__*/React.createElement(Label, {\n    basic: true,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, error));\n};\n\nexport default TextInput;","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/app/common/form/TextInput.tsx"],"names":["React","Form","Label","TextInput","input","width","type","placeholder","meta","touched","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAyBC,IAAzB,EAA+BC,KAA/B,QAA4C,mBAA5C;;AAMA,MAAMC,SAA2B,GAAG,CAAC;AACnCC,EAAAA,KADmC;AAEnCC,EAAAA,KAFmC;AAGnCC,EAAAA,IAHmC;AAInCC,EAAAA,WAJmC;AAKnCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAL6B,CAAD,KAM9B;AACJ,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAED,OAAO,IAAI,CAAC,CAACC,KAAhC;AAAuC,IAAA,IAAI,EAAEJ,IAA7C;AAAmD,IAAA,KAAK,EAAED,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,+CAAWD,KAAX;AAAkB,IAAA,WAAW,EAAEG,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEGE,OAAO,IAAIC,KAAX,iBACC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,KAAK,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CAHJ,CADF;AAUD,CAjBD;;AAmBA,eAAeP,SAAf","sourcesContent":["import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLInputElement>,\n    FormFieldProps {}\n\nconst TextInput: React.FC<IProps> = ({\n  input,\n  width,\n  type,\n  placeholder,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error} type={type} width={width}>\n      <input {...input} placeholder={placeholder} />\n      {touched && error && (\n        <Label basic color='red'>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}