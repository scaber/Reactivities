{"ast":null,"code":"import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var diff = startOfUTCISOWeek(date, dirtyOptions).getTime() - startOfUTCISOWeekYear(date, dirtyOptions).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js"],"names":["toDate","startOfUTCISOWeek","startOfUTCISOWeekYear","MILLISECONDS_IN_WEEK","getUTCISOWeek","dirtyDate","dirtyOptions","arguments","length","TypeError","date","diff","getTime","Math","round"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;AAEA,IAAIC,oBAAoB,GAAG,SAA3B,C,CAEA;AACA;;AACA,eAAe,SAASC,aAAT,CAAwBC,SAAxB,EAAmCC,YAAnC,EAAiD;AAC9D,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,mCAAmCF,SAAS,CAACC,MAA7C,GAAsD,UAApE,CAAN;AACD;;AAED,MAAIE,IAAI,GAAGV,MAAM,CAACK,SAAD,EAAYC,YAAZ,CAAjB;AACA,MAAIK,IAAI,GAAGV,iBAAiB,CAACS,IAAD,EAAOJ,YAAP,CAAjB,CAAsCM,OAAtC,KAAkDV,qBAAqB,CAACQ,IAAD,EAAOJ,YAAP,CAArB,CAA0CM,OAA1C,EAA7D,CAN8D,CAQ9D;AACA;AACA;;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAGR,oBAAlB,IAA0C,CAAjD;AACD","sourcesContent":["import toDate from '../../toDate/index.js'\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js'\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function getUTCISOWeek (dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions)\n  var diff = startOfUTCISOWeek(date, dirtyOptions).getTime() - startOfUTCISOWeekYear(date, dirtyOptions).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n"]},"metadata":{},"sourceType":"module"}