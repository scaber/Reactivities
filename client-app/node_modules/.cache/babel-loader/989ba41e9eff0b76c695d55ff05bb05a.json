{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\activities\\\\details\\\\ActivityDetailedHeader.tsx\";\nimport React, { useContext } from \"react\";\nimport { Segment, Item, Header, Button, Image } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\nconst activityImageStyle = {\n  filter: \"brightness(30%)\"\n};\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\"\n};\n\nconst ActivityDetailedHeader = ({\n  activity\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    attendActivity,\n    cancelAttendance,\n    loading\n  } = rootStore.activityStore;\n  const host = activity.attendees.filter(x => x.isHost)[0];\n  return /*#__PURE__*/React.createElement(Segment.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    basic: true,\n    attached: \"top\",\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: `/assets/categoryImages/${activity.category}.jpg`,\n    fluid: true,\n    style: activityImageStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Segment, {\n    style: activityImageTextStyle,\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Item.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    size: \"huge\",\n    content: activity.title,\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, format(activity.date, \"eeee do MMMM\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Hosted by \", ' ', /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${host.userName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, host.display)))))))), /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    attached: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, activity.isHost ? /*#__PURE__*/React.createElement(Button, {\n    as: Link,\n    to: `/manage/${activity.id}`,\n    color: \"orange\",\n    floated: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Manage Event\") : activity.isGoing ? /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    onClick: cancelAttendance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Cancel attendance\") : /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    onClick: attendActivity,\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Join Activity\")));\n};\n\nexport default observer(ActivityDetailedHeader);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/activities/details/ActivityDetailedHeader.tsx"],"names":["React","useContext","Segment","Item","Header","Button","Image","observer","Link","format","RootStoreContext","activityImageStyle","filter","activityImageTextStyle","position","bottom","left","width","height","color","ActivityDetailedHeader","activity","rootStore","attendActivity","cancelAttendance","loading","activityStore","host","attendees","x","isHost","padding","category","title","date","userName","display","id","isGoing"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Segment, Item, Header, Button, Image } from \"semantic-ui-react\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity }> = ({\n  activity,\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const { attendActivity, cancelAttendance, loading } = rootStore.activityStore;\n  const host = activity.attendees.filter((x) => x.isHost)[0];\n\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date, \"eeee do MMMM\")}</p>\n                <p>\n                  Hosted by {' '} \n                  <Link to={`/profile/${host.userName}`}>\n                  <strong>{host.display}</strong>\n                  </Link> \n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <Button\n            as={Link}\n            to={`/manage/${activity.id}`}\n            color=\"orange\"\n            floated=\"right\"\n          >\n            Manage Event\n          </Button>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={cancelAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button loading={loading} onClick={attendActivity} color=\"teal\">\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityDetailedHeader);\n"]},"metadata":{},"sourceType":"module"}