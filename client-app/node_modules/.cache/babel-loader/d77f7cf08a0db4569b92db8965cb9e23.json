{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Window = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _Panel = _interopRequireDefault(require(\"../Panel/Panel/Panel\"));\n\nvar _Logger = _interopRequireDefault(require(\"@terrestris/base-util/dist/Logger\"));\n\nvar _constants = require(\"../constants\");\n\nrequire(\"./Window.less\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _uniqueId = require('lodash/uniqueId');\n/**\n * Window component that creates a React portal that renders children into a DOM\n * node that exists outside the DOM hierarchy of the parent component. By default,\n * Window Component is draggable.\n *\n * @class Window\n * @extends React.Component\n */\n\n\nvar Window =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Window, _React$Component);\n  /**\n   * The parent Element of the Window.\n   * @private\n   */\n\n  /**\n   * The Element of the Window.\n   * @private\n   */\n\n  /**\n   * The className added to this component.\n   * @private\n   */\n\n  /**\n   * Create a Window.\n   * @constructs Window\n   */\n\n\n  function Window(props) {\n    var _this;\n\n    _classCallCheck(this, Window);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Window).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_parent\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_elementDiv\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", \"\".concat(_constants.CSS_PREFIX, \"window-portal\"));\n\n    var parentId = _this.props.parentId;\n    _this._parent = document.getElementById(parentId);\n\n    if (!_this._parent) {\n      _Logger[\"default\"].warn('No parent element was found! Please ensure that parentId ' + 'parameter was set correctly (default value is `app`)');\n    }\n\n    var div = document.createElement('div');\n    div.id = props.id;\n    _this._elementDiv = div;\n    _this.state = {\n      id: props.id,\n      resizing: false\n    };\n    return _this;\n  }\n  /**\n   * The portal element is inserted in the DOM tree after\n   * the Windows's children are mounted, meaning that children\n   * will be mounted on a detached DOM node. If a child\n   * component requires to be attached to the DOM tree\n   * immediately when mounted, for example to measure a\n   * DOM node, or uses 'autoFocus' in a descendant, add\n   * state to Window and only render the children when Window\n   * is inserted in the DOM tree.\n   */\n\n\n  _createClass(Window, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._parent) {\n        this._parent.appendChild(this._elementDiv);\n      }\n    }\n    /**\n     * componentWillUnmount - remove child from parent element\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._parent) {\n        this._parent.removeChild(this._elementDiv);\n      }\n    }\n    /**\n     * The render function.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children,\n          parentId = _this$props.parentId,\n          passThroughProps = _objectWithoutProperties(_this$props, [\"className\", \"children\", \"parentId\"]);\n\n      var finalClassName = className ? \"\".concat(className, \" \").concat(this.className) : this.className;\n      this._elementDiv.className = finalClassName;\n      return _reactDom[\"default\"].createPortal(React.createElement(_Panel[\"default\"], passThroughProps, children), this._elementDiv);\n    }\n  }]);\n\n  return Window;\n}(React.Component);\n\nexports.Window = Window;\n\n_defineProperty(Window, \"defaultProps\", {\n  parentId: 'app',\n  title: 'Window',\n  resizeOpts: true,\n  collapsible: true,\n  draggable: true,\n  id: _uniqueId('window-')\n});\n\nvar _default = Window;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}