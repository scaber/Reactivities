{"ast":null,"code":"import React,{useContext,useEffect}from'react';import{Grid}from'semantic-ui-react';import ProfileHeader from'./ProfileHeader';import{ProfileContent}from'./ProfileContent';import{RootStoreContext}from'../../app/stores/rootStore';import LoadingComponent from'../../app/layout/LoadingComponent';import{observer}from'mobx-react-lite';var ProfilePage=function ProfilePage(_ref){var match=_ref.match;var rootStore=useContext(RootStoreContext);var _rootStore$profileSto=rootStore.profileStore,loadingProfile=_rootStore$profileSto.loadingProfile,profile=_rootStore$profileSto.profile,loadProfile=_rootStore$profileSto.loadProfile;useEffect(function(){loadProfile(match.params.userName);},[loadProfile,match]);if(loadingProfile)return/*#__PURE__*/React.createElement(LoadingComponent,{content:\"Loading Profile ..\"});return/*#__PURE__*/React.createElement(Grid,null,/*#__PURE__*/React.createElement(Grid.Column,{width:16},/*#__PURE__*/React.createElement(ProfileHeader,{profile:profile}),/*#__PURE__*/React.createElement(ProfileContent,null)));};export default observer(ProfilePage);","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/features/profiles/ProfilePage.tsx"],"names":["React","useContext","useEffect","Grid","ProfileHeader","ProfileContent","RootStoreContext","LoadingComponent","observer","ProfilePage","match","rootStore","profileStore","loadingProfile","profile","loadProfile","params","userName"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,OAASC,gBAAT,KAAiC,4BAAjC,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,mCAA7B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CAUC,GAAMC,CAAAA,WAA4B,CAAG,QAA/BA,CAAAA,WAA+B,MAAa,IAAXC,CAAAA,KAAW,MAAXA,KAAW,CAC/C,GAAMC,CAAAA,SAAS,CAAEV,UAAU,CAACK,gBAAD,CAA3B,CAD+C,0BAEHK,SAAS,CAACC,YAFP,CAExCC,cAFwC,uBAExCA,cAFwC,CAEzBC,OAFyB,uBAEzBA,OAFyB,CAEjBC,WAFiB,uBAEjBA,WAFiB,CAI/Cb,SAAS,CAAC,UAAM,CACZa,WAAW,CAACL,KAAK,CAACM,MAAN,CAAaC,QAAd,CAAX,CAEH,CAHQ,CAGN,CAACF,WAAD,CAAaL,KAAb,CAHM,CAAT,CAKA,GAAGG,cAAH,CAAmB,mBAAO,oBAAC,gBAAD,EAAkB,OAAO,CAAE,oBAA3B,EAAP,CAEnB,mBACI,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,EAApB,eACI,oBAAC,aAAD,EAAe,OAAO,CAAEC,OAAxB,EADJ,cAEI,oBAAC,cAAD,MAFJ,CADJ,CADJ,CAQH,CAnBA,CAqBD,cAAeN,CAAAA,QAAQ,CAACC,WAAD,CAAvB","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport ProfileHeader from './ProfileHeader'\r\nimport { ProfileContent } from './ProfileContent'\r\nimport { RootStoreContext } from '../../app/stores/rootStore'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\n\r\ninterface RouteParams {\r\nuserName:string;    \r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams> {\r\n\r\n}\r\n const ProfilePage:React.FC<IProps> = ({match}) => {\r\n    const rootStore =useContext(RootStoreContext);\r\n    const {loadingProfile,profile,loadProfile} =rootStore.profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(match.params.userName)\r\n       \r\n    }, [loadProfile,match])\r\n\r\n    if(loadingProfile) return <LoadingComponent content ='Loading Profile ..'/>\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                <ProfileHeader profile={profile!}/>\r\n                <ProfileContent/>\r\n            </Grid.Column> \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default observer(ProfilePage)"]},"metadata":{},"sourceType":"module"}