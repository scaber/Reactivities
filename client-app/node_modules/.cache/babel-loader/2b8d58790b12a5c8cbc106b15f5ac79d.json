{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.dataIndexOf = dataIndexOf;\nexports.valueMatcher = valueMatcher;\nexports.dataItem = dataItem;\nexports.dataText = exports.dataValue = void 0;\n\nvar _ = require(\"./_\");\n\nvar dataValue = function dataValue(data, field) {\n  var value = data;\n  if (typeof field === 'function') value = field(data);else if (data == null) value = data;else if (typeof field === 'string' && typeof data === 'object' && field in data) value = data[field];\n  return value;\n};\n\nexports.dataValue = dataValue;\n\nvar dataText = function dataText(item, textField) {\n  var value = dataValue(item, textField);\n  return value == null ? '' : value + '';\n};\n\nexports.dataText = dataText;\n\nfunction dataIndexOf(data, item, valueField) {\n  var idx = -1;\n\n  var isValueEqual = function isValueEqual(datum) {\n    return valueMatcher(item, datum, valueField);\n  };\n\n  while (++idx < data.length) {\n    var datum = data[idx];\n    if (datum === item || isValueEqual(datum)) return idx;\n  }\n\n  return -1;\n}\n/**\n * I don't know that the shallow equal makes sense here but am too afraid to\n * remove it.\n */\n\n\nfunction valueMatcher(a, b, valueField) {\n  return (0, _.isShallowEqual)(dataValue(a, valueField), dataValue(b, valueField));\n}\n\nfunction dataItem(data, item, valueField) {\n  var idx = dataIndexOf(data, item, valueField);\n  return idx !== -1 ? data[idx] : item;\n}","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/react-widgets/lib/util/dataHelpers.js"],"names":["exports","__esModule","dataIndexOf","valueMatcher","dataItem","dataText","dataValue","_","require","data","field","value","item","textField","valueField","idx","isValueEqual","datum","length","a","b","isShallowEqual"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;AACAF,OAAO,CAACG,YAAR,GAAuBA,YAAvB;AACAH,OAAO,CAACI,QAAR,GAAmBA,QAAnB;AACAJ,OAAO,CAACK,QAAR,GAAmBL,OAAO,CAACM,SAAR,GAAoB,KAAK,CAA5C;;AAEA,IAAIC,CAAC,GAAGC,OAAO,CAAC,KAAD,CAAf;;AAEA,IAAIF,SAAS,GAAG,SAASA,SAAT,CAAmBG,IAAnB,EAAyBC,KAAzB,EAAgC;AAC9C,MAAIC,KAAK,GAAGF,IAAZ;AACA,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiCC,KAAK,GAAGD,KAAK,CAACD,IAAD,CAAb,CAAjC,KAA0D,IAAIA,IAAI,IAAI,IAAZ,EAAkBE,KAAK,GAAGF,IAAR,CAAlB,KAAoC,IAAI,OAAOC,KAAP,KAAiB,QAAjB,IAA6B,OAAOD,IAAP,KAAgB,QAA7C,IAAyDC,KAAK,IAAID,IAAtE,EAA4EE,KAAK,GAAGF,IAAI,CAACC,KAAD,CAAZ;AAC1K,SAAOC,KAAP;AACD,CAJD;;AAMAX,OAAO,CAACM,SAAR,GAAoBA,SAApB;;AAEA,IAAID,QAAQ,GAAG,SAASA,QAAT,CAAkBO,IAAlB,EAAwBC,SAAxB,EAAmC;AAChD,MAAIF,KAAK,GAAGL,SAAS,CAACM,IAAD,EAAOC,SAAP,CAArB;AACA,SAAOF,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqBA,KAAK,GAAG,EAApC;AACD,CAHD;;AAKAX,OAAO,CAACK,QAAR,GAAmBA,QAAnB;;AAEA,SAASH,WAAT,CAAqBO,IAArB,EAA2BG,IAA3B,EAAiCE,UAAjC,EAA6C;AAC3C,MAAIC,GAAG,GAAG,CAAC,CAAX;;AAEA,MAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9C,WAAOd,YAAY,CAACS,IAAD,EAAOK,KAAP,EAAcH,UAAd,CAAnB;AACD,GAFD;;AAIA,SAAO,EAAEC,GAAF,GAAQN,IAAI,CAACS,MAApB,EAA4B;AAC1B,QAAID,KAAK,GAAGR,IAAI,CAACM,GAAD,CAAhB;AACA,QAAIE,KAAK,KAAKL,IAAV,IAAkBI,YAAY,CAACC,KAAD,CAAlC,EAA2C,OAAOF,GAAP;AAC5C;;AAED,SAAO,CAAC,CAAR;AACD;AACD;;;;;;AAMA,SAASZ,YAAT,CAAsBgB,CAAtB,EAAyBC,CAAzB,EAA4BN,UAA5B,EAAwC;AACtC,SAAO,CAAC,GAAGP,CAAC,CAACc,cAAN,EAAsBf,SAAS,CAACa,CAAD,EAAIL,UAAJ,CAA/B,EAAgDR,SAAS,CAACc,CAAD,EAAIN,UAAJ,CAAzD,CAAP;AACD;;AAED,SAASV,QAAT,CAAkBK,IAAlB,EAAwBG,IAAxB,EAA8BE,UAA9B,EAA0C;AACxC,MAAIC,GAAG,GAAGb,WAAW,CAACO,IAAD,EAAOG,IAAP,EAAaE,UAAb,CAArB;AACA,SAAOC,GAAG,KAAK,CAAC,CAAT,GAAaN,IAAI,CAACM,GAAD,CAAjB,GAAyBH,IAAhC;AACD","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.dataIndexOf = dataIndexOf;\nexports.valueMatcher = valueMatcher;\nexports.dataItem = dataItem;\nexports.dataText = exports.dataValue = void 0;\n\nvar _ = require(\"./_\");\n\nvar dataValue = function dataValue(data, field) {\n  var value = data;\n  if (typeof field === 'function') value = field(data);else if (data == null) value = data;else if (typeof field === 'string' && typeof data === 'object' && field in data) value = data[field];\n  return value;\n};\n\nexports.dataValue = dataValue;\n\nvar dataText = function dataText(item, textField) {\n  var value = dataValue(item, textField);\n  return value == null ? '' : value + '';\n};\n\nexports.dataText = dataText;\n\nfunction dataIndexOf(data, item, valueField) {\n  var idx = -1;\n\n  var isValueEqual = function isValueEqual(datum) {\n    return valueMatcher(item, datum, valueField);\n  };\n\n  while (++idx < data.length) {\n    var datum = data[idx];\n    if (datum === item || isValueEqual(datum)) return idx;\n  }\n\n  return -1;\n}\n/**\n * I don't know that the shallow equal makes sense here but am too afraid to\n * remove it.\n */\n\n\nfunction valueMatcher(a, b, valueField) {\n  return (0, _.isShallowEqual)(dataValue(a, valueField), dataValue(b, valueField));\n}\n\nfunction dataItem(data, item, valueField) {\n  var idx = dataIndexOf(data, item, valueField);\n  return idx !== -1 ? data[idx] : item;\n}"]},"metadata":{},"sourceType":"script"}