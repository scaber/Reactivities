{"ast":null,"code":"import axios from\"axios\";import{history}from\"../..\";import{toast}from\"react-toastify\";axios.defaults.baseURL=process.env.REACT_APP_API_URL;axios.interceptors.request.use(function(config){var token=window.localStorage.getItem(\"jwt\");if(token)config.headers.Authorization=\"Bearer \".concat(token);return config;},function(error){return Promise.reject(error);});axios.interceptors.response.use(undefined,function(error){if(error.message===\"Network Error\"&&!error.response){toast.error(\"Network error - make sure API is running!\");}var _error$response=error.response,status=_error$response.status,data=_error$response.data,config=_error$response.config,headers=_error$response.headers;if(status===404){history.push(\"/notfound\");}debugger;if(status===401&&headers[\"www-authenticate\"]==='Bearer error=\"invalid_tokeb\",error_description=\"The token is expired\"'){window.localStorage.removeItem(\"jwt\");history.push(\"/\");toast.info(\"Your session has expired, please login again\");}if(status===400&&config.method===\"get\"&&data.errors.hasOwnProperty(\"id\")){history.push(\"/notfound\");}if(status===500){toast.error(\"Server error - check the terminal for more info!\");}throw error.response;});var responseBody=function responseBody(response){return response.data;};// const sleep = (ms: number) => (response: AxiosResponse) =>\n//   new Promise<AxiosResponse>((resolve) =>\n//     setTimeout(() => resolve(response), ms)\n//   );\nvar requests={get:function get(url){return axios.get(url).then(responseBody);},post:function post(url,body){return axios.post(url,body).then(responseBody);},put:function put(url,body){return axios.put(url,body).then(responseBody);},del:function del(url){return axios.delete(url).then(responseBody);},postForm:function postForm(url,file){var formData=new FormData();formData.append(\"File\",file);return axios.post(url,formData,{headers:{\"Conteent-type\":\"multipart/form-data\"}}).then(responseBody);}};var Activities={list:function list(params){return axios.get(\"/activities\",{params:params}).then(responseBody);},details:function details(id){return requests.get(\"/activities/\".concat(id));},create:function create(activity){return requests.post(\"/activities\",activity);},update:function update(activity){return requests.put(\"/activities/\".concat(activity.id),activity);},delete:function _delete(id){return requests.del(\"/activities/\".concat(id));},attend:function attend(id){return requests.post(\"/activities/\".concat(id,\"/attend\"),{});},unattend:function unattend(id){return requests.del(\"/activities/\".concat(id,\"/attend\"));}};var User={current:function current(){return requests.get(\"/user\");},login:function login(user){return requests.post(\"/user/login\",user);},register:function register(user){return requests.post(\"/user/register\",user);}};var Profiles={get:function get(userName){return requests.get(\"/profiles/\".concat(userName));},uploadPhoto:function uploadPhoto(photo){return requests.postForm(\"/photos\",photo);},setMainPhoto:function setMainPhoto(id){return requests.post(\"/photos/\".concat(id,\"/setMain\"),{});},deletePhoto:function deletePhoto(id){return requests.del(\"/photos/\".concat(id));},updateProfile:function updateProfile(profile){return requests.put(\"/profiles\",profile);},follow:function follow(userName){return requests.post(\"/profiles/\".concat(userName,\"/follow\"),{});},unfollow:function unfollow(userName){return requests.del(\"/profiles/\".concat(userName,\"/follow\"));},listFollowings:function listFollowings(userName,predicate){return requests.get(\"/profiles/\".concat(userName,\"/follow?predicate=\").concat(predicate));},listActivities:function listActivities(userName,predicate){return requests.get(\"/profiles/\".concat(userName,\"/activities?predicate=\").concat(predicate));}};export default{Activities:Activities,User:User,Profiles:Profiles};","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/app/api/agent.ts"],"names":["axios","history","toast","defaults","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","message","status","data","push","removeItem","info","method","errors","hasOwnProperty","responseBody","requests","get","url","then","post","body","put","del","delete","postForm","file","formData","FormData","append","Activities","list","params","details","id","create","activity","update","attend","unattend","User","current","login","user","register","Profiles","userName","uploadPhoto","photo","setMainPhoto","deletePhoto","updateProfile","profile","follow","unfollow","listFollowings","predicate","listActivities"],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { IActivity, IActivitiesEnvelope } from \"../models/activity\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\nimport { IProfile, IPhoto } from \"../models/profile\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  if (error.message === \"Network Error\" && !error.response) {\r\n    toast.error(\"Network error - make sure API is running!\");\r\n  }\r\n  const { status, data, config, headers } = error.response;\r\n  if (status === 404) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  debugger;\r\n  if (\r\n    status === 401 &&\r\n    headers[\"www-authenticate\"] ===\r\n      'Bearer error=\"invalid_tokeb\",error_description=\"The token is expired\"'\r\n  ) {\r\n    window.localStorage.removeItem(\"jwt\");\r\n    history.push(\"/\");\r\n    toast.info(\"Your session has expired, please login again\");\r\n  }\r\n  if (\r\n    status === 400 &&\r\n    config.method === \"get\" &&\r\n    data.errors.hasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  if (status === 500) {\r\n    toast.error(\"Server error - check the terminal for more info!\");\r\n  }\r\n  throw error.response;\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\n// const sleep = (ms: number) => (response: AxiosResponse) =>\r\n//   new Promise<AxiosResponse>((resolve) =>\r\n//     setTimeout(() => resolve(response), ms)\r\n//   );\r\n\r\nconst requests = {\r\n  get: (url: string) => axios.get(url).then(responseBody),\r\n  post: (url: string, body: {}) =>\r\n    axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: {}) =>\r\n    axios.put(url, body).then(responseBody),\r\n  del: (url: string) => axios.delete(url).then(responseBody),\r\n  postForm: (url: string, file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { \"Conteent-type\": \"multipart/form-data\" },\r\n      })\r\n      .then(responseBody);\r\n  },\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams): Promise<IActivitiesEnvelope> =>\r\n    axios\r\n      .get(\"/activities\", { params: params })\r\n     \r\n      .then(responseBody),\r\n  details: (id: string) => requests.get(`/activities/${id}`),\r\n  create: (activity: IActivity) => requests.post(\"/activities\", activity),\r\n  update: (activity: IActivity) =>\r\n    requests.put(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del(`/activities/${id}`),\r\n  attend: (id: string) => requests.post(`/activities/${id}/attend`, {}),\r\n  unattend: (id: string) => requests.del(`/activities/${id}/attend`),\r\n};\r\n\r\nconst User = {\r\n  current: (): Promise<IUser> => requests.get(\"/user\"),\r\n  login: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/login`, user),\r\n  register: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/register`, user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (userName: string): Promise<IProfile> =>\r\n    requests.get(`/profiles/${userName}`),\r\n  uploadPhoto: (photo: Blob): Promise<IPhoto> =>\r\n    requests.postForm(`/photos`, photo),\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<IProfile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  follow: (userName: string) =>\r\n    requests.post(`/profiles/${userName}/follow`, {}),\r\n  unfollow: (userName: string) => requests.del(`/profiles/${userName}/follow`),\r\n  listFollowings: (userName: string, predicate: string) =>\r\n    requests.get(`/profiles/${userName}/follow?predicate=${predicate}`),\r\n  listActivities: (userName: string, predicate: string) =>\r\n    requests.get(`/profiles/${userName}/activities?predicate=${predicate}`),\r\n};\r\n\r\nexport default {\r\n  Activities,\r\n  User,\r\n  Profiles,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}