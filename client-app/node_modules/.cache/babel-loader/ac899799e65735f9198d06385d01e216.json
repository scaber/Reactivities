{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('../../../_lib/getUTCDayOfYear/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../../../_lib/getUTCISOWeek/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('../../../_lib/getUTCISOWeekYear/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = require('../../../_lib/getUTCWeek/index.js');\n\nvar _index8 = _interopRequireDefault(_index7);\n\nvar _index9 = require('../../../_lib/getUTCWeekYear/index.js');\n\nvar _index10 = _interopRequireDefault(_index9);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize, options) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear; // Two digit year\n\n    if (token === 'yy') {\n      var twoDigitYear = year % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'yo') {\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(year, token.length);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = (0, _index10.default)(date, options);\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token, localize, options) {\n    var isoWeekYear = (0, _index6.default)(date, options); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token, localize, options) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize, options) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize, options) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize, options) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'M':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'MM':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize, options) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = (0, _index8.default)(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize, options) {\n    var isoWeek = (0, _index4.default)(date, options);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize, options) {\n    var dayOfMonth = date.getUTCDate();\n\n    if (token === 'do') {\n      return localize.ordinalNumber(dayOfMonth, {\n        unit: 'date'\n      });\n    }\n\n    return addLeadingZeros(dayOfMonth, token.length);\n  },\n  // Day of year\n  D: function D(date, token, localize, options) {\n    var dayOfYear = (0, _index2.default)(date, options);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numberical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize, options) {\n    var hours = date.getUTCHours() % 12;\n\n    if (hours === 0) {\n      hours = 12;\n    }\n\n    if (token === 'ho') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize, options) {\n    var hours = date.getUTCHours();\n\n    if (token === 'Ho') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize, options) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize, options) {\n    var hours = date.getUTCHours();\n\n    if (hours === 0) {\n      hours = 24;\n    }\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize, options) {\n    var minutes = date.getUTCMinutes();\n\n    if (token === 'mo') {\n      return localize.ordinalNumber(minutes, {\n        unit: 'minute'\n      });\n    }\n\n    return addLeadingZeros(minutes, token.length);\n  },\n  // Second\n  s: function s(date, token, localize, options) {\n    var seconds = date.getUTCSeconds();\n\n    if (token === 'so') {\n      return localize.ordinalNumber(seconds, {\n        unit: 'second'\n      });\n    }\n\n    return addLeadingZeros(seconds, token.length);\n  },\n  // Fraction of second\n  S: function S(date, token, localize, options) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, numberOfDigits);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimeter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimeter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}\n\nfunction formatTimezone(offset, dirtyDelimeter) {\n  var delimeter = dirtyDelimeter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimeter + minutes;\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimeter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimeter);\n}\n\nfunction formatTimezoneShort(offset, dirtyDelimeter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimeter = dirtyDelimeter || '';\n  return sign + String(hours) + delimeter + addLeadingZeros(minutes, 2);\n}\n\nexports.default = formatters;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/date-fns/format/_lib/formatters/index.js"],"names":["Object","defineProperty","exports","value","_index","require","_index2","_interopRequireDefault","_index3","_index4","_index5","_index6","_index7","_index8","_index9","_index10","obj","__esModule","default","dayPeriodEnum","am","pm","midnight","noon","morning","afternoon","evening","night","formatters","G","date","token","localize","era","getUTCFullYear","width","y","options","signedYear","year","twoDigitYear","addLeadingZeros","ordinalNumber","unit","length","Y","signedWeekYear","weekYear","R","isoWeekYear","u","Q","quarter","Math","ceil","getUTCMonth","String","context","q","M","month","L","w","week","I","isoWeek","d","dayOfMonth","getUTCDate","D","dayOfYear","E","dayOfWeek","getUTCDay","day","e","localDayOfWeek","weekStartsOn","c","i","isoDayOfWeek","a","hours","getUTCHours","dayPeriodEnumValue","dayPeriod","b","B","h","H","K","k","m","minutes","getUTCMinutes","s","seconds","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","floor","pow","X","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","timestamp","getTime","T","number","targetLength","sign","output","abs","toString","offset","dirtyDelimeter","delimeter","absOffset","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('../../../_lib/getUTCDayOfYear/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../../../_lib/getUTCISOWeek/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('../../../_lib/getUTCISOWeekYear/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = require('../../../_lib/getUTCWeek/index.js');\n\nvar _index8 = _interopRequireDefault(_index7);\n\nvar _index9 = require('../../../_lib/getUTCWeekYear/index.js');\n\nvar _index10 = _interopRequireDefault(_index9);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, { width: 'abbreviated' });\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, { width: 'narrow' });\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, { width: 'wide' });\n    }\n  },\n\n  // Year\n  y: function y(date, token, localize, options) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    var signedYear = date.getUTCFullYear();\n\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n\n    // Two digit year\n    if (token === 'yy') {\n      var twoDigitYear = year % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === 'yo') {\n      return localize.ordinalNumber(year, { unit: 'year' });\n    }\n\n    // Padding\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = (0, _index10.default)(date, options);\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, { unit: 'year' });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function R(date, token, localize, options) {\n    var isoWeekYear = (0, _index6.default)(date, options);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token, localize, options) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function Q(date, token, localize, options) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, { unit: 'quarter' });\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, { width: 'abbreviated', context: 'formatting' });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, { width: 'narrow', context: 'formatting' });\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, { width: 'wide', context: 'formatting' });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function q(date, token, localize, options) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, { unit: 'quarter' });\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, { width: 'abbreviated', context: 'standalone' });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, { width: 'narrow', context: 'standalone' });\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, { width: 'wide', context: 'standalone' });\n    }\n  },\n\n  // Month\n  M: function M(date, token, localize, options) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'M':\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case 'MM':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, { unit: 'month' });\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, { width: 'abbreviated', context: 'formatting' });\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, { width: 'narrow', context: 'formatting' });\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, { width: 'wide', context: 'formatting' });\n    }\n  },\n\n  // Stand-alone month\n  L: function L(date, token, localize, options) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, { unit: 'month' });\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, { width: 'abbreviated', context: 'standalone' });\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, { width: 'narrow', context: 'standalone' });\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, { width: 'wide', context: 'standalone' });\n    }\n  },\n\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = (0, _index8.default)(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, { unit: 'week' });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function I(date, token, localize, options) {\n    var isoWeek = (0, _index4.default)(date, options);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, { unit: 'week' });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function d(date, token, localize, options) {\n    var dayOfMonth = date.getUTCDate();\n\n    if (token === 'do') {\n      return localize.ordinalNumber(dayOfMonth, { unit: 'date' });\n    }\n\n    return addLeadingZeros(dayOfMonth, token.length);\n  },\n\n  // Day of year\n  D: function D(date, token, localize, options) {\n    var dayOfYear = (0, _index2.default)(date, options);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, { unit: 'dayOfYear' });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function E(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, { width: 'abbreviated', context: 'formatting' });\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, { width: 'narrow', context: 'formatting' });\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, { width: 'short', context: 'formatting' });\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' });\n    }\n  },\n\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, { unit: 'day' });\n      case 'eee':\n        return localize.day(dayOfWeek, { width: 'abbreviated', context: 'formatting' });\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, { width: 'narrow', context: 'formatting' });\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, { width: 'short', context: 'formatting' });\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numberical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, { unit: 'day' });\n      case 'ccc':\n        return localize.day(dayOfWeek, { width: 'abbreviated', context: 'standalone' });\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, { width: 'narrow', context: 'standalone' });\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, { width: 'short', context: 'standalone' });\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'standalone' });\n    }\n  },\n\n  // ISO day of week\n  i: function i(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, { unit: 'day' });\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, { width: 'abbreviated', context: 'formatting' });\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, { width: 'narrow', context: 'formatting' });\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, { width: 'short', context: 'formatting' });\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, { width: 'wide', context: 'formatting' });\n    }\n  },\n\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, { width: 'abbreviated', context: 'formatting' });\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, { width: 'narrow', context: 'formatting' });\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, { width: 'wide', context: 'formatting' });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, { width: 'abbreviated', context: 'formatting' });\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, { width: 'narrow', context: 'formatting' });\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, { width: 'wide', context: 'formatting' });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, { width: 'abbreviated', context: 'formatting' });\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, { width: 'narrow', context: 'formatting' });\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, { width: 'wide', context: 'formatting' });\n    }\n  },\n\n  // Hour [1-12]\n  h: function h(date, token, localize, options) {\n    var hours = date.getUTCHours() % 12;\n\n    if (hours === 0) {\n      hours = 12;\n    }\n\n    if (token === 'ho') {\n      return localize.ordinalNumber(hours, { unit: 'hour' });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [0-23]\n  H: function H(date, token, localize, options) {\n    var hours = date.getUTCHours();\n\n    if (token === 'Ho') {\n      return localize.ordinalNumber(hours, { unit: 'hour' });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [0-11]\n  K: function K(date, token, localize, options) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, { unit: 'hour' });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function k(date, token, localize, options) {\n    var hours = date.getUTCHours();\n\n    if (hours === 0) {\n      hours = 24;\n    }\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, { unit: 'hour' });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function m(date, token, localize, options) {\n    var minutes = date.getUTCMinutes();\n\n    if (token === 'mo') {\n      return localize.ordinalNumber(minutes, { unit: 'minute' });\n    }\n\n    return addLeadingZeros(minutes, token.length);\n  },\n\n  // Second\n  s: function s(date, token, localize, options) {\n    var seconds = date.getUTCSeconds();\n\n    if (token === 'so') {\n      return localize.ordinalNumber(seconds, { unit: 'second' });\n    }\n\n    return addLeadingZeros(seconds, token.length);\n  },\n\n  // Fraction of second\n  S: function S(date, token, localize, options) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, numberOfDigits);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimeter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimeter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n\n  // Timezone (GMT)\n  O: function O(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function z(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n\n  // Seconds timestamp\n  t: function t(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function T(date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n  return sign + output;\n}\n\nfunction formatTimezone(offset, dirtyDelimeter) {\n  var delimeter = dirtyDelimeter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimeter + minutes;\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimeter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, dirtyDelimeter);\n}\n\nfunction formatTimezoneShort(offset, dirtyDelimeter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  var delimeter = dirtyDelimeter || '';\n  return sign + String(hours) + delimeter + addLeadingZeros(minutes, 2);\n}\n\nexports.default = formatters;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}