{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport PlaceholderHeader from './PlaceholderHeader';\nimport PlaceholderImage from './PlaceholderImage';\nimport PlaceholderLine from './PlaceholderLine';\nimport PlaceholderParagraph from './PlaceholderParagraph';\n/**\n * A placeholder is used to reserve splace for content that soon will appear in a layout.\n */\n\nfunction Placeholder(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      inverted = props.inverted;\n  var classes = cx('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), 'placeholder', className);\n  var rest = getUnhandledProps(Placeholder, props);\n  var ElementType = getElementType(Placeholder, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nPlaceholder.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"inverted\"];\nPlaceholder.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A fluid placeholder takes up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** A placeholder can have their colors inverted. */\n  inverted: PropTypes.bool\n} : {};\nPlaceholder.Header = PlaceholderHeader;\nPlaceholder.Image = PlaceholderImage;\nPlaceholder.Line = PlaceholderLine;\nPlaceholder.Paragraph = PlaceholderParagraph;\nexport default Placeholder;","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/semantic-ui-react/dist/es/elements/Placeholder/Placeholder.js"],"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","useKeyOnly","PlaceholderHeader","PlaceholderImage","PlaceholderLine","PlaceholderParagraph","Placeholder","props","children","className","content","fluid","inverted","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","bool","Header","Image","Line","Paragraph"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,UAA5E,QAA8F,WAA9F;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA;;;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,MAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAAA,MAGIC,KAAK,GAAGJ,KAAK,CAACI,KAHlB;AAAA,MAIIC,QAAQ,GAAGL,KAAK,CAACK,QAJrB;AAKA,MAAIC,OAAO,GAAGnB,EAAE,CAAC,IAAD,EAAOO,UAAU,CAACU,KAAD,EAAQ,OAAR,CAAjB,EAAmCV,UAAU,CAACW,QAAD,EAAW,UAAX,CAA7C,EAAqE,aAArE,EAAoFH,SAApF,CAAhB;AACA,MAAIK,IAAI,GAAGd,iBAAiB,CAACM,WAAD,EAAcC,KAAd,CAA5B;AACA,MAAIQ,WAAW,GAAGhB,cAAc,CAACO,WAAD,EAAcC,KAAd,CAAhC;AACA,SAAOX,KAAK,CAACoB,aAAN,CAAoBD,WAApB,EAAiCtB,QAAQ,CAAC,EAAD,EAAKqB,IAAL,EAAW;AACzDL,IAAAA,SAAS,EAAEI;AAD8C,GAAX,CAAzC,EAEHhB,aAAa,CAACoB,KAAd,CAAoBT,QAApB,IAAgCE,OAAhC,GAA0CF,QAFvC,CAAP;AAGD;;AAEDF,WAAW,CAACY,YAAZ,GAA2B,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,OAA3C,EAAoD,UAApD,CAA3B;AACAZ,WAAW,CAACa,SAAZ,GAAwBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC9D;AACAC,EAAAA,EAAE,EAAEzB,eAAe,CAACyB,EAF0C;;AAI9D;AACAf,EAAAA,QAAQ,EAAEb,SAAS,CAAC6B,IAL0C;;AAO9D;AACAf,EAAAA,SAAS,EAAEd,SAAS,CAAC8B,MARyC;;AAU9D;AACAf,EAAAA,OAAO,EAAEZ,eAAe,CAAC4B,gBAXqC;;AAa9D;AACAf,EAAAA,KAAK,EAAEhB,SAAS,CAACgC,IAd6C;;AAgB9D;AACAf,EAAAA,QAAQ,EAAEjB,SAAS,CAACgC;AAjB0C,CAAxC,GAkBpB,EAlBJ;AAmBArB,WAAW,CAACsB,MAAZ,GAAqB1B,iBAArB;AACAI,WAAW,CAACuB,KAAZ,GAAoB1B,gBAApB;AACAG,WAAW,CAACwB,IAAZ,GAAmB1B,eAAnB;AACAE,WAAW,CAACyB,SAAZ,GAAwB1B,oBAAxB;AACA,eAAeC,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport PlaceholderHeader from './PlaceholderHeader';\nimport PlaceholderImage from './PlaceholderImage';\nimport PlaceholderLine from './PlaceholderLine';\nimport PlaceholderParagraph from './PlaceholderParagraph';\n/**\n * A placeholder is used to reserve splace for content that soon will appear in a layout.\n */\n\nfunction Placeholder(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      inverted = props.inverted;\n  var classes = cx('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), 'placeholder', className);\n  var rest = getUnhandledProps(Placeholder, props);\n  var ElementType = getElementType(Placeholder, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nPlaceholder.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"inverted\"];\nPlaceholder.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A fluid placeholder takes up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** A placeholder can have their colors inverted. */\n  inverted: PropTypes.bool\n} : {};\nPlaceholder.Header = PlaceholderHeader;\nPlaceholder.Image = PlaceholderImage;\nPlaceholder.Line = PlaceholderLine;\nPlaceholder.Paragraph = PlaceholderParagraph;\nexport default Placeholder;"]},"metadata":{},"sourceType":"module"}