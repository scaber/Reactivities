{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _set from \"lodash/set\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport Ref from '../../addons/Ref';\nimport { AutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\n\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"labelRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"canToggle\", function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var id = _this.props.id;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n\n      var isInputClick = _invoke(_this.inputRef.current, 'contains', e.target);\n\n      var isLabelClick = _invoke(_this.labelRef.current, 'contains', e.target);\n\n      var isRootClick = !isLabelClick && !isInputClick;\n      var hasId = !_isNil(id);\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\n\n      if (!isLabelClickAndForwardedToInput) {\n        _invoke(_this.props, 'onClick', e, _objectSpread({}, _this.props, {\n          checked: !checked,\n          indeterminate: !!indeterminate\n        }));\n      }\n\n      if (_this.isClickFromMouse) {\n        _this.isClickFromMouse = false;\n\n        if (isLabelClick && !hasId) {\n          _this.handleChange(e);\n        } // Changes should be triggered for the slider variation\n\n\n        if (isRootClick) {\n          _this.handleChange(e);\n        }\n\n        if (isLabelClick && hasId) {\n          // To prevent two clicks from being fired from the component we have to stop the propagation\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\n          e.stopPropagation();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var checked = _this.state.checked;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.trySetState({\n        checked: !checked,\n        indeterminate: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseDown\", function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      _invoke(_this.inputRef.current, 'focus'); // Heads up!\n      // We need to call \"preventDefault\" to keep element focused.\n\n\n      e.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseUp\", function (e) {\n      var _this$state3 = _this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      _this.isClickFromMouse = true;\n\n      _invoke(_this.props, 'onMouseUp', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setIndeterminate\", function () {\n      var indeterminate = _this.state.indeterminate;\n\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          disabled = _this$props3.disabled,\n          label = _this$props3.label,\n          id = _this$props3.id,\n          name = _this$props3.name,\n          radio = _this$props3.radio,\n          readOnly = _this$props3.readOnly,\n          slider = _this$props3.slider,\n          toggle = _this$props3.toggle,\n          type = _this$props3.type,\n          value = _this$props3.value;\n      var _this$state4 = this.state,\n          checked = _this$state4.checked,\n          indeterminate = _this$state4.indeterminate;\n      var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n      // https://semantic-ui.com/modules/checkbox.html#fitted\n      useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n      var unhandled = getUnhandledProps(Checkbox, this.props);\n      var ElementType = getElementType(Checkbox, this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n        htmlProps: htmlInputAttrs\n      }),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1]; // Heads Up!\n      // Do not remove empty labels, they are required by SUI CSS\n\n\n      var labelElement = createHTMLLabel(label, {\n        defaultProps: {\n          htmlFor: id\n        },\n        autoGenerateKey: false\n      }) || React.createElement(\"label\", {\n        htmlFor: id\n      });\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        onClick: this.handleClick,\n        onChange: this.handleChange,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp\n      }), React.createElement(Ref, {\n        innerRef: this.inputRef\n      }, React.createElement(\"input\", _extends({}, htmlInputProps, {\n        checked: checked,\n        className: \"hidden\",\n        disabled: disabled,\n        id: id,\n        name: name,\n        readOnly: true,\n        tabIndex: this.computeTabIndex(),\n        type: type,\n        value: value\n      }))), React.createElement(Ref, {\n        innerRef: this.labelRef\n      }, labelElement));\n    }\n  }]);\n\n  return Checkbox;\n}(Component);\n\n_defineProperty(Checkbox, \"defaultProps\", {\n  type: 'checkbox'\n});\n\n_defineProperty(Checkbox, \"autoControlledProps\", ['checked', 'indeterminate']);\n\n_defineProperty(Checkbox, \"handledProps\", [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"]);\n\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Called when the user releases the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseUp: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/node_modules/semantic-ui-react/dist/es/modules/Checkbox/Checkbox.js"],"names":["_extends","_slicedToArray","_objectSpread","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","_set","_invoke","_get","_isNil","cx","PropTypes","React","createRef","Ref","AutoControlledComponent","Component","createHTMLLabel","customPropTypes","getElementType","getUnhandledProps","htmlInputAttrs","partitionHTMLProps","useKeyOnly","Checkbox","_Component","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_this$props","props","disabled","radio","readOnly","checked","state","_this$props2","tabIndex","e","id","_this$state","indeterminate","isInputClick","inputRef","current","target","isLabelClick","labelRef","isRootClick","hasId","isLabelClickAndForwardedToInput","isClickFromMouse","handleChange","stopPropagation","canToggle","trySetState","_this$state2","preventDefault","_this$state3","key","value","componentDidMount","setIndeterminate","componentDidUpdate","render","_this$props3","className","label","name","slider","toggle","type","_this$state4","classes","unhandled","ElementType","_partitionHTMLProps","htmlProps","_partitionHTMLProps2","htmlInputProps","rest","labelElement","defaultProps","htmlFor","autoGenerateKey","createElement","onClick","handleClick","onChange","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","innerRef","computeTabIndex","default","propTypes","process","env","NODE_ENV","as","bool","string","defaultChecked","defaultIndeterminate","fitted","oneOfType","number","itemShorthand","func","every","disallow","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _set from \"lodash/set\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport Ref from '../../addons/Ref';\nimport { AutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\nvar Checkbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"labelRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"canToggle\", function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var id = _this.props.id;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n\n      var isInputClick = _invoke(_this.inputRef.current, 'contains', e.target);\n\n      var isLabelClick = _invoke(_this.labelRef.current, 'contains', e.target);\n\n      var isRootClick = !isLabelClick && !isInputClick;\n      var hasId = !_isNil(id);\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\n\n      if (!isLabelClickAndForwardedToInput) {\n        _invoke(_this.props, 'onClick', e, _objectSpread({}, _this.props, {\n          checked: !checked,\n          indeterminate: !!indeterminate\n        }));\n      }\n\n      if (_this.isClickFromMouse) {\n        _this.isClickFromMouse = false;\n\n        if (isLabelClick && !hasId) {\n          _this.handleChange(e);\n        } // Changes should be triggered for the slider variation\n\n\n        if (isRootClick) {\n          _this.handleChange(e);\n        }\n\n        if (isLabelClick && hasId) {\n          // To prevent two clicks from being fired from the component we have to stop the propagation\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\n          e.stopPropagation();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var checked = _this.state.checked;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.trySetState({\n        checked: !checked,\n        indeterminate: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseDown\", function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      _invoke(_this.inputRef.current, 'focus'); // Heads up!\n      // We need to call \"preventDefault\" to keep element focused.\n\n\n      e.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseUp\", function (e) {\n      var _this$state3 = _this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      _this.isClickFromMouse = true;\n\n      _invoke(_this.props, 'onMouseUp', e, _objectSpread({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setIndeterminate\", function () {\n      var indeterminate = _this.state.indeterminate;\n\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          disabled = _this$props3.disabled,\n          label = _this$props3.label,\n          id = _this$props3.id,\n          name = _this$props3.name,\n          radio = _this$props3.radio,\n          readOnly = _this$props3.readOnly,\n          slider = _this$props3.slider,\n          toggle = _this$props3.toggle,\n          type = _this$props3.type,\n          value = _this$props3.value;\n      var _this$state4 = this.state,\n          checked = _this$state4.checked,\n          indeterminate = _this$state4.indeterminate;\n      var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n      // https://semantic-ui.com/modules/checkbox.html#fitted\n      useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n      var unhandled = getUnhandledProps(Checkbox, this.props);\n      var ElementType = getElementType(Checkbox, this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n        htmlProps: htmlInputAttrs\n      }),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1]; // Heads Up!\n      // Do not remove empty labels, they are required by SUI CSS\n\n\n      var labelElement = createHTMLLabel(label, {\n        defaultProps: {\n          htmlFor: id\n        },\n        autoGenerateKey: false\n      }) || React.createElement(\"label\", {\n        htmlFor: id\n      });\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        onClick: this.handleClick,\n        onChange: this.handleChange,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp\n      }), React.createElement(Ref, {\n        innerRef: this.inputRef\n      }, React.createElement(\"input\", _extends({}, htmlInputProps, {\n        checked: checked,\n        className: \"hidden\",\n        disabled: disabled,\n        id: id,\n        name: name,\n        readOnly: true,\n        tabIndex: this.computeTabIndex(),\n        type: type,\n        value: value\n      }))), React.createElement(Ref, {\n        innerRef: this.labelRef\n      }, labelElement));\n    }\n  }]);\n\n  return Checkbox;\n}(Component);\n\n_defineProperty(Checkbox, \"defaultProps\", {\n  type: 'checkbox'\n});\n\n_defineProperty(Checkbox, \"autoControlledProps\", ['checked', 'indeterminate']);\n\n_defineProperty(Checkbox, \"handledProps\", [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"]);\n\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Called when the user releases the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseUp: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};"]},"metadata":{},"sourceType":"module"}