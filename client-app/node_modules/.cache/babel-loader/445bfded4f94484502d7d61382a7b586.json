{"ast":null,"code":"import axios from\"axios\";import{history}from\"../..\";import{toast}from\"react-toastify\";axios.defaults.baseURL=\"http://localhost:5000/api\";axios.interceptors.request.use(function(config){var token=window.localStorage.getItem(\"jwt\");if(token)config.headers.Authorization=\"Bearer \".concat(token);return config;},function(error){return Promise.reject(error);});axios.interceptors.response.use(undefined,function(error){if(error.message===\"Network Error\"&&!error.response){toast.error(\"Network error - make sure API is running!\");}var _error$response=error.response,status=_error$response.status,data=_error$response.data,config=_error$response.config;if(status===404){history.push(\"/notfound\");}if(status===400&&config.method===\"get\"&&data.errors.hasOwnProperty(\"id\")){history.push(\"/notfound\");}if(status===500){toast.error(\"Server error - check the terminal for more info!\");}throw error.response;});var responseBody=function responseBody(response){return response.data;};var sleep=function sleep(ms){return function(response){return new Promise(function(resolve){return setTimeout(function(){return resolve(response);},ms);});};};var requests={get:function get(url){return axios.get(url).then(sleep(1000)).then(responseBody);},post:function post(url,body){return axios.post(url,body).then(sleep(1000)).then(responseBody);},put:function put(url,body){return axios.put(url,body).then(sleep(1000)).then(responseBody);},del:function del(url){return axios.delete(url).then(sleep(1000)).then(responseBody);},postForm:function postForm(url,file){var formData=new FormData();formData.append(\"File\",file);return axios.post(url,formData,{headers:{\"Conteent-type\":\"multipart/form-data\"}}).then(responseBody);}};var Activities={list:function list(){return requests.get(\"/activities\");},details:function details(id){return requests.get(\"/activities/\".concat(id));},create:function create(activity){return requests.post(\"/activities\",activity);},update:function update(activity){return requests.put(\"/activities/\".concat(activity.id),activity);},delete:function _delete(id){return requests.del(\"/activities/\".concat(id));},attend:function attend(id){return requests.post(\"/activities/\".concat(id,\"/attend\"),{});},unattend:function unattend(id){return requests.del(\"/activities/\".concat(id,\"/attend\"));}};var User={current:function current(){return requests.get(\"/user\");},login:function login(user){return requests.post(\"/user/login\",user);},register:function register(user){return requests.post(\"/user/register\",user);}};var Profiles={get:function get(userName){return requests.get(\"/profiles/\".concat(userName));},uploadPhoto:function uploadPhoto(photo){return requests.postForm(\"/photos\",photo);},setMainPhoto:function setMainPhoto(id){return requests.post(\"/photos/\".concat(id,\"/setMain\"),{});},deletePhoto:function deletePhoto(id){return requests.del(\"/photos/\".concat(id));},updateProfile:function updateProfile(profile){return requests.put(\"/profiles\",profile);}//   follow: (username: string) =>\n//     requests.post(`/profiles/${username}/follow`, {}),\n//   unfollow: (username: string) => requests.del(`/profiles/${username}/follow`),\n//   listFollowings: (username: string, predicate: string) =>\n//     requests.get(`/profiles/${username}/follow?predicate=${predicate}`),\n//   listActivities: (username: string, predicate: string) =>\n//     requests.get(`/profiles/${username}/activities?predicate=${predicate}`)\n};export default{Activities:Activities,User:User,Profiles:Profiles};","map":{"version":3,"sources":["C:/Projects/Reactivities/client-app/src/app/api/agent.ts"],"names":["axios","history","toast","defaults","baseURL","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","message","status","data","push","method","errors","hasOwnProperty","responseBody","sleep","ms","resolve","setTimeout","requests","get","url","then","post","body","put","del","delete","postForm","file","formData","FormData","append","Activities","list","details","id","create","activity","update","attend","unattend","User","current","login","user","register","Profiles","userName","uploadPhoto","photo","setMainPhoto","deletePhoto","updateProfile","profile"],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport { IActivity } from \"../models/activity\";\nimport { history } from \"../..\";\nimport { toast } from \"react-toastify\";\nimport { IUser, IUserFormValues } from \"../models/user\";\nimport { IProfile, IPhoto } from \"../models/profile\";\n\naxios.defaults.baseURL = \"http://localhost:5000/api\";\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = window.localStorage.getItem(\"jwt\");\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(undefined, (error) => {\n  if (error.message === \"Network Error\" && !error.response) {\n    toast.error(\"Network error - make sure API is running!\");\n  }\n  const { status, data, config } = error.response;\n  if (status === 404) {\n    history.push(\"/notfound\");\n  }\n  if (\n    status === 400 &&\n    config.method === \"get\" &&\n    data.errors.hasOwnProperty(\"id\")\n  ) {\n    history.push(\"/notfound\");\n  }\n  if (status === 500) {\n    toast.error(\"Server error - check the terminal for more info!\");\n  }\n  throw error.response;\n});\n\nconst responseBody = (response: AxiosResponse) => response.data;\n\nconst sleep = (ms: number) => (response: AxiosResponse) =>\n  new Promise<AxiosResponse>((resolve) =>\n    setTimeout(() => resolve(response), ms)\n  );\n\nconst requests = {\n  get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\n  post: (url: string, body: {}) =>\n    axios.post(url, body).then(sleep(1000)).then(responseBody),\n  put: (url: string, body: {}) =>\n    axios.put(url, body).then(sleep(1000)).then(responseBody),\n  del: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody),\n  postForm: (url: string, file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios\n      .post(url, formData, {\n        headers: { \"Conteent-type\": \"multipart/form-data\" },\n      })\n      .then(responseBody);\n  },\n};\n\nconst Activities = {\n  list: (): Promise<IActivity[]> => requests.get(\"/activities\"),\n  details: (id: string) => requests.get(`/activities/${id}`),\n  create: (activity: IActivity) => requests.post(\"/activities\", activity),\n  update: (activity: IActivity) =>\n    requests.put(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del(`/activities/${id}`),\n  attend: (id: string) => requests.post(`/activities/${id}/attend`, {}),\n  unattend: (id: string) => requests.del(`/activities/${id}/attend`),\n};\n\nconst User = {\n  current: (): Promise<IUser> => requests.get(\"/user\"),\n  login: (user: IUserFormValues): Promise<IUser> =>\n    requests.post(`/user/login`, user),\n  register: (user: IUserFormValues): Promise<IUser> =>\n    requests.post(`/user/register`, user),\n};\n\nconst Profiles = {\n  get: (userName: string): Promise<IProfile> =>\n    requests.get(`/profiles/${userName}`),\n  uploadPhoto: (photo: Blob): Promise<IPhoto> =>\n    requests.postForm(`/photos`, photo),\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  updateProfile: (profile: Partial<IProfile>) =>\n    requests.put(`/profiles`, profile),\n//   follow: (username: string) =>\n//     requests.post(`/profiles/${username}/follow`, {}),\n//   unfollow: (username: string) => requests.del(`/profiles/${username}/follow`),\n//   listFollowings: (username: string, predicate: string) =>\n//     requests.get(`/profiles/${username}/follow?predicate=${predicate}`),\n//   listActivities: (username: string, predicate: string) =>\n//     requests.get(`/profiles/${username}/activities?predicate=${predicate}`)\n};\n\nexport default {\n  Activities,\n  User,\n  Profiles,\n};\n"]},"metadata":{},"sourceType":"module"}