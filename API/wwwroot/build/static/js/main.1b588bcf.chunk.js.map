{"version":3,"sources":["app/api/agent.ts","app/common/util/util.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/profileStore.ts","app/stores/rootStore.ts","features/nav/NavBar.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceHolder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/TextInput.tsx","app/common/form/ErrorMessage.tsx","features/user/LoginForm.tsx","features/user/RegisterForm.tsx","features/home/HomePage.tsx","app/models/activity.ts","app/common/form/TextAreaInput.tsx","app/common/form/SelectInput.tsx","app/common/form/DateInput.tsx","app/common/options/categoryOptions.ts","features/activities/form/ActivityForm.tsx","app/layout/LoadingComponent.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","app/layout/NotFound.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileHeader.tsx","app/common/photoUpload/PhotoWidgetDropzone.tsx","app/common/photoUpload/PhotoWidgetCropper.tsx","app/common/photoUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileDescription.tsx","features/profiles/ProfileCard.tsx","features/profiles/ProfileFollowing.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","serviceWorker.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","message","toast","status","data","history","push","removeItem","info","method","errors","hasOwnProperty","responseBody","requests","url","get","then","body","post","put","delete","file","formData","FormData","append","list","params","details","id","create","activity","update","attend","unattend","current","login","user","register","userName","uploadPhoto","photo","setMainPhoto","deletePhoto","updateProfile","profile","follow","unfollow","listFollowings","predicate","listActivities","setActivityProps","date","Date","isGoing","attendees","some","a","username","isHost","createAttendee","display","image","ActivityStore","observable","ref","rootStore","getActivity","activityRegistry","this","reaction","keys","page","clear","loadActivities","activities","sortedActivities","sort","b","getTime","Object","entries","reduce","toISOString","split","URLSearchParams","String","forEach","value","key","Math","ceil","activityCount","groupActivitiesByDate","Array","from","values","Map","action","set","computed","hubConnection","HubConnectionBuilder","withUrl","accessTokenFactory","commonStore","configureLogging","LogLevel","Information","build","start","console","log","state","catch","on","comment","runInAction","comments","stop","activityId","invoke","loadingInitial","agent","axiosParams","activitiesEnvelope","userStore","toJS","submitting","attendee","event","target","currentTarget","name","loading","filter","UserStore","setToken","modalStore","closeModal","CommonStore","setItem","appLoaded","ModalStore","shallow","open","content","modal","ProfileStore","activeTab","loadFollowings","followings","loadingActivities","userActivities","activeIndex","loadingProfile","uploadingPhoto","photos","isMain","find","following","followersCount","profiles","configure","enforceActions","RootStoreContext","createContext","activityStore","profileStore","observer","useContext","logout","Menu","fixed","inverted","Container","Item","header","as","NavLink","exact","to","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","styles","borderColor","borderWidth","ActivityListItemAttendee","List","horizontal","map","Popup","trigger","size","circular","bordered","ActivityListItem","host","x","Segment","Group","marginBottom","Content","Header","title","Description","Label","basic","color","Icon","format","venue","city","secondary","clearing","description","floated","activitiesByDate","group","divided","setPredicate","vertical","width","marginTop","attached","active","has","onChange","ActivityListItemPlaceholder","Placeholder","fluid","minHeight","Line","Paragraph","disabled","setPage","totalPages","useState","loadingNext","setloadingNext","useEffect","Grid","Column","pageStart","loadMore","hasMore","initialLoad","Loader","TextInput","input","type","placeholder","meta","touched","Form","Field","ErrorMessage","Message","statusText","length","flat","err","i","validate","combineValidators","email","isRequired","password","LoginForm","onSubmit","FORM_ERROR","render","handleSubmit","submitError","invalid","pristine","dirtySinceLastSubmit","textAlign","component","RegisterForm","HomePage","isLoggedIn","openModal","className","ActivityFormValues","init","category","time","assign","TextAreaInput","rows","SelectInput","options","Select","e","DateInput","rest","onBlur","onKeyDown","preventDefault","composeValidators","hasLengthGreaterThan","match","createActivity","editActivity","loadActivity","setActivity","setLoading","finally","initialValues","dateAndTime","dateString","timeString","combineDateAndTime","newActivity","uuid","widths","LoadingComponent","Dimmer","activityImageStyle","activityImageTextStyle","bottom","left","height","attendActivity","cancelAttendance","padding","ActivityDetailedInfo","verticalAlign","createHubConnection","stopHubConnection","addComment","border","Comment","Avatar","Author","Metadata","formatDistance","createAt","Text","form","reset","labelPosition","primary","relaxed","ribbon","Extra","NotFound","Inline","Modal","onClose","isCurrentUser","Statistic","label","followingCount","Divider","Reveal","animated","visible","hidden","dropzoneStyles","borderRadius","paddingTop","dropzoneActive","PhotoWidgetDropzone","setFiles","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","setImage","imagePreview","cropper","useRef","aspectRatio","guides","viewMode","dragMode","scalable","cropBoxMovable","cropBoxResizable","crop","getCroppedCanvas","toBlob","blob","files","revokeObjectURL","sub","overflow","addPhotoMode","setAddPhotoMode","setTarget","deletetarget","setDeleteTarget","Tab","Pane","paddingBotttom","Card","itemsPerRow","negative","bio","editMode","setEditMode","ProfileCard","extra","ProfileFollowings","panes","menuItem","pane","loadUserActivities","menu","onTabChange","handleTabChange","objectFit","Meta","ProfileActivities","ProfileFollowing","ProfileContent","setActiveTab","menuPosition","loadProfile","PrivateRoute","Component","props","withRouter","location","setAppLoaded","getUser","path","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","Boolean","hostname","children","pathname","scrollTo","dateFnsLocalizer","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b588bcf.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { IActivity, IActivitiesEnvelope } from \"../models/activity\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\nimport { IProfile, IPhoto } from \"../models/profile\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  if (error.message === \"Network Error\" && !error.response) {\r\n    toast.error(\"Network error - make sure API is running!\");\r\n  }\r\n  const { status, data, config, headers } = error.response;\r\n  if (status === 404) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  debugger;\r\n  if (\r\n    status === 401 &&\r\n    headers[\"www-authenticate\"] ===\r\n      'Bearer error=\"invalid_tokeb\",error_description=\"The token is expired\"'\r\n  ) {\r\n    window.localStorage.removeItem(\"jwt\");\r\n    history.push(\"/\");\r\n    toast.info(\"Your session has expired, please login again\");\r\n  }\r\n  if (\r\n    status === 400 &&\r\n    config.method === \"get\" &&\r\n    data.errors.hasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  if (status === 500) {\r\n    toast.error(\"Server error - check the terminal for more info!\");\r\n  }\r\n  throw error.response;\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\n// const sleep = (ms: number) => (response: AxiosResponse) =>\r\n//   new Promise<AxiosResponse>((resolve) =>\r\n//     setTimeout(() => resolve(response), ms)\r\n//   );\r\n\r\nconst requests = {\r\n  get: (url: string) => axios.get(url).then(responseBody),\r\n  post: (url: string, body: {}) =>\r\n    axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: {}) =>\r\n    axios.put(url, body).then(responseBody),\r\n  del: (url: string) => axios.delete(url).then(responseBody),\r\n  postForm: (url: string, file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { \"Conteent-type\": \"multipart/form-data\" },\r\n      })\r\n      .then(responseBody);\r\n  },\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams): Promise<IActivitiesEnvelope> =>\r\n    axios\r\n      .get(\"/activities\", { params: params })\r\n     \r\n      .then(responseBody),\r\n  details: (id: string) => requests.get(`/activities/${id}`),\r\n  create: (activity: IActivity) => requests.post(\"/activities\", activity),\r\n  update: (activity: IActivity) =>\r\n    requests.put(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del(`/activities/${id}`),\r\n  attend: (id: string) => requests.post(`/activities/${id}/attend`, {}),\r\n  unattend: (id: string) => requests.del(`/activities/${id}/attend`),\r\n};\r\n\r\nconst User = {\r\n  current: (): Promise<IUser> => requests.get(\"/user\"),\r\n  login: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/login`, user),\r\n  register: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/register`, user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (userName: string): Promise<IProfile> =>\r\n    requests.get(`/profiles/${userName}`),\r\n  uploadPhoto: (photo: Blob): Promise<IPhoto> =>\r\n    requests.postForm(`/photos`, photo),\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<IProfile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  follow: (userName: string) =>\r\n    requests.post(`/profiles/${userName}/follow`, {}),\r\n  unfollow: (userName: string) => requests.del(`/profiles/${userName}/follow`),\r\n  listFollowings: (userName: string, predicate: string) =>\r\n    requests.get(`/profiles/${userName}/follow?predicate=${predicate}`),\r\n  listActivities: (userName: string, predicate: string) =>\r\n    requests.get(`/profiles/${userName}/activities?predicate=${predicate}`),\r\n};\r\n\r\nexport default {\r\n  Activities,\r\n  User,\r\n  Profiles,\r\n};\r\n","import { IActivity, IAttendee } from \"../../models/activity\";\nimport { IUser } from \"../../models/user\";\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n   // const timeString = time.getHours() + ':' + time.getMinutes() + ':00';\n\n    // const year = date.getFullYear();\n    // const month = date.getMonth() + 1;\n    // const day = date.getDate();\n    // const dateString = `${year}-${month}-${day}`;\n\n    const dateString = date.toISOString().split('T')[0];\n    const   timeString= date.toISOString().split('T')[1];\n\n    return new Date(dateString + 'T' + timeString);\n}\n\nexport const setActivityProps =(activity: IActivity, user: IUser) => {\n    activity.date = new Date(activity.date);\n    activity.isGoing=activity.attendees.some(\n      a=>a.userName ===user.username\n    );\n     activity.isHost=activity.attendees.some(\n      a=>a.userName ===user.username && a.isHost\n    );\n\n    return activity;\n};\n\nexport const createAttendee = (user: IUser): IAttendee => {\n  return {\n    display:user.display,\n    isHost:false,\n    userName:user.username,\n    image:user.image!\n  } \n}\n ","import { observable, action, computed, runInAction, reaction, toJS } from \"mobx\";\r\nimport { SyntheticEvent } from \"react\";\r\nimport { IActivity } from \"../models/activity\";\r\nimport agent from \"../api/agent\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { RootStore } from \"./rootStore\";\r\nimport { setActivityProps, createAttendee } from \"../common/util/util\";\r\n\r\nimport { HubConnection, HubConnectionBuilder, LogLevel } from \"@aspnet/signalr\";\r\n\r\n\r\nconst LIMIT=2;\r\n;\r\nexport default class ActivityStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      ()=> this.predicate.keys(),\r\n      ()=> {\r\n        this.page=0;\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    )\r\n  }\r\n\r\n  @observable activityRegistry = new Map();\r\n  @observable activity: IActivity | null = null;\r\n  @observable loadingInitial = false;\r\n  @observable submitting = false;\r\n  @observable target = \"\";\r\n  @observable loading = false;\r\n  @observable.ref hubConnection: HubConnection | null = null;\r\n\r\n  @observable activityCount=0 ;\r\n  @observable page=0 ;\r\n  @observable predicate=new Map();\r\n\r\n\r\n  @action setPredicate =(predicate: string,value: string | Date) => {\r\n    this.predicate.clear();\r\n    if (predicate !=='all') {\r\n      this.predicate.set(predicate,value);\r\n    }\r\n  }\r\n\r\n\r\n  @computed get axiosParams () {\r\n    const params =new  URLSearchParams();\r\n    params.append('limit',String(LIMIT));\r\n    params.append('offset',`${this.page ? this.page*LIMIT : 0}`);\r\n    this.predicate.forEach((value,key)=> {\r\n      if (key ==='startDate') {\r\n        params.append(key,value.toISOString());\r\n\r\n      }\r\n      else{\r\n        params.append(key,value);\r\n      }\r\n    })\r\n    return params;\r\n  }\r\n\r\n\r\n  @computed get totalPages () {\r\n    return Math.ceil(this.activityCount/LIMIT);\r\n  }\r\n  @action setPage = (page: number) => {\r\n    this.page =page;\r\n  }\r\n\r\n  @action createHubConnection = () => {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl( process.env.REACT_APP_API_CHAT_URL!, {\r\n        accessTokenFactory: () => this.rootStore.commonStore.token!,\r\n      })\r\n      .configureLogging(LogLevel.Information)\r\n      .build();\r\n    this.hubConnection\r\n      .start()\r\n      .then(() => console.log(this.hubConnection!.state))\r\n      .catch((error) => console.log(\"Error establishing connection : \", error));\r\n\r\n      this.hubConnection.on('ReceiveComment',comment => {\r\n        runInAction(() => {\r\n          this.activity!.comments.push(comment); \r\n        })\r\n      })\r\n  };\r\n\r\n  @action stopHubConnection = () => {\r\n    this.hubConnection!.stop();\r\n  }\r\n\r\n  @action addComment = async (values :any) => {\r\n    values.activityId=this.activity!.id;\r\n\r\n    try {\r\n      await this.hubConnection!.invoke('SendComment', values)\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n    }\r\n  }\r\n\r\n  @computed get activitiesByDate() {\r\n    return this.groupActivitiesByDate(\r\n      Array.from(this.activityRegistry.values())\r\n    );\r\n  }\r\n\r\n  groupActivitiesByDate(activities: IActivity[]) {\r\n    const sortedActivities = activities.sort(\r\n      (a, b) => a.date.getTime() - b.date.getTime()\r\n    );\r\n    return Object.entries(\r\n      sortedActivities.reduce((activities, activity) => {\r\n        const date = activity.date.toISOString().split(\"T\")[0];\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: IActivity[] })\r\n    );\r\n  }\r\n\r\n  @action loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const activitiesEnvelope = await agent.Activities.list(this.axiosParams);\r\n      const {activities,activityCount} =activitiesEnvelope;\r\n      runInAction(\"loading activities\", () => {\r\n        activities.forEach((activity) => {\r\n          setActivityProps(activity, this.rootStore.userStore.user!);\r\n          this.activityRegistry.set(activity.id, activity);\r\n        });\r\n        this.activityCount=activityCount;\r\n        this.loadingInitial = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(\"load activities error\", () => {\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.activity = activity;\r\n      return toJS(activity);\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        runInAction(\"getting activity\", () => {\r\n          setActivityProps(activity, this.rootStore.userStore.user!);\r\n          this.activity = activity;\r\n          this.activityRegistry.set(activity.id, activity);\r\n          this.loadingInitial = false;\r\n        });\r\n        return activity;\r\n      } catch (error) {\r\n        runInAction(\"get activity error\", () => {\r\n          this.loadingInitial = false;\r\n        });\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  @action clearActivity = () => {\r\n    this.activity = null;\r\n  };\r\n\r\n  getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  @action createActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const attendee = createAttendee(this.rootStore.userStore.user!);\r\n      attendee.isHost = true;\r\n      let attendees = [];\r\n      attendees.push(attendee);\r\n      activity.attendees = attendees;\r\n      activity.comments=[];\r\n      activity.isHost = true;\r\n      runInAction(\"create activity\", () => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      runInAction(\"create activity error\", () => {\r\n        this.submitting = false;\r\n      });\r\n      toast.error(\"Problem submitting data\");\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  @action editActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(\"editing activity\", () => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.activity = activity;\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      runInAction(\"edit activity error\", () => {\r\n        this.submitting = false;\r\n      });\r\n      toast.error(\"Problem submitting data\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action deleteActivity = async (\r\n    event: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) => {\r\n    this.submitting = true;\r\n    this.target = event.currentTarget.name;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(\"deleting activity\", () => {\r\n        this.activityRegistry.delete(id);\r\n        this.submitting = false;\r\n        this.target = \"\";\r\n      });\r\n    } catch (error) {\r\n      runInAction(\"delete activity error\", () => {\r\n        this.submitting = false;\r\n        this.target = \"\";\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action attendActivity = async () => {\r\n    const attendee = createAttendee(this.rootStore.userStore.user!);\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.activity!.id);\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees.push(attendee);\r\n          this.activity.isGoing = true;\r\n          this.activityRegistry.set(this.activity.id, this.activity);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n      toast.error(\"Problem signing up to activity\");\r\n    }\r\n  };\r\n  @action cancelAttendance = async () => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.unattend(this.activity!.id);\r\n\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees = this.activity.attendees.filter(\r\n            (a) => a.userName !== this.rootStore.userStore.user!.username\r\n          );\r\n          this.activity.isGoing = false;\r\n          this.activityRegistry.set(this.activity.id, this.activity);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n      toast.error(\"Problem cancelling activity\");\r\n    }\r\n  };\r\n}\r\n","import { observable, computed, action, runInAction } from 'mobx';\nimport { IUser, IUserFormValues } from '../models/user';\nimport agent from '../api/agent';\nimport { RootStore } from './rootStore';\nimport { history } from '../..';\n\nexport default class UserStore {\n  rootStore: RootStore;\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable user: IUser | null = null;\n\n  @computed get isLoggedIn() {\n    return !!this.user;\n  }\n\n  @action login = async (values: IUserFormValues) => {\n    try {\n      const user = await agent.User.login(values);\n      runInAction(() => {\n        this.user = user;\n      });\n      this.rootStore.commonStore.setToken(user.token);\n      this.rootStore.modalStore.closeModal();\n      history.push('/activities');\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  @action register = async (values: IUserFormValues) => {\n    try {\n      const user = await agent.User.register(values);\n      this.rootStore.commonStore.setToken(user.token);\n      this.rootStore.modalStore.closeModal();\n      history.push('/activities')\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  @action getUser = async () => {\n    try {\n      const user = await agent.User.current();\n      runInAction(() => {\n        this.user = user;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  @action logout = () => {\n    this.rootStore.commonStore.setToken(null);\n    this.user = null;\n    history.push('/');\n  };\n}\n","import {RootStore} from './rootStore';\nimport { observable, action, reaction } from 'mobx';\n\nexport default class CommonStore {\n    rootStore: RootStore;\n    constructor(rootStore: RootStore) {\n        this.rootStore = rootStore;\n\n        reaction(\n            () => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem('jwt', token);\n                } else {\n                    window.localStorage.removeItem('jwt')\n                }\n            }\n        )\n    }\n\n    @observable token: string | null = window.localStorage.getItem('jwt');\n    @observable appLoaded = false;\n\n    @action setToken = (token: string | null) => {\n        this.token = token;\n    }\n\n    @action setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}","import { RootStore } from \"./rootStore\";\nimport { observable, action } from \"mobx\";\n\nexport default class ModalStore {\n    rootStore: RootStore;\n    constructor(rootStore: RootStore) {\n        this.rootStore = rootStore;\n    }\n\n    @observable.shallow modal = {\n        open: false,\n        body: null\n    }\n    \n    @action openModal = (content: any) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    @action closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}","import { RootStore } from \"./rootStore\";\r\nimport { IProfile, IPhoto, IUserActivity } from \"../models/profile\";\r\nimport { observable, action, runInAction, computed, reaction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class ProfileStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      ()=> this.activeTab,\r\n      activeTab => {\r\n        if (activeTab===3 || activeTab ===4) {\r\n          const predicate =activeTab===3 ? 'followers':'following';\r\n          this.loadFollowings(predicate)\r\n        }else {\r\n          this.followings=[];\r\n        }\r\n      }\r\n    )\r\n  }\r\n  @observable profile: IProfile | null = null;\r\n  @observable loadingProfile = true;\r\n  @observable uploadingPhoto = false;\r\n  @observable loading = false;\r\n  @observable followings: IProfile[] = [];\r\n  @observable activeTab: number = 0;\r\n  @observable userActivities:IUserActivity[] = []\r\n  @observable loadingActivities = false;\r\n\r\n  @computed get isCurrentUser() {\r\n    if (this.rootStore.userStore.user && this.profile) {\r\n      return this.rootStore.userStore.user.username === this.profile.userName;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  @action loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n       const activities = await agent.Profiles.listActivities(username, predicate!);\r\n       runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      })\r\n    } catch (error) {\r\n      toast.error('Problem loading activities')\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  @action setActiveTab= (activeIndex: number) => {\r\n    this.activeTab=activeIndex;\r\n  }\r\n  @action loadProfile = async (userName: string) => {\r\n    try {\r\n      const profile = await agent.Profiles.get(userName);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action uploadPhoto = async (file: Blob) => {\r\n    this.uploadingPhoto = true;\r\n    try {\r\n      const photo = await agent.Profiles.uploadPhoto(file);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos.push(photo);\r\n          if (photo.isMain && this.rootStore.userStore.user) {\r\n            this.rootStore.userStore.user.image = photo.url;\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploadingPhoto = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"uploading problem photo\");\r\n      runInAction(() => {\r\n        this.uploadingPhoto = false;\r\n      });\r\n    }\r\n  };\r\n  @action setMainPhoto = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      runInAction(() => {\r\n        this.rootStore.userStore.user!.image = photo.url;\r\n        this.profile!.photos.find((a) => a.isMain)!.isMain = false;\r\n        this.profile!.photos.find((a) => a.id === photo.id)!.isMain = true;\r\n        this.profile!.image = photo.url;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem setting photo as main\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n  @action deletePhoto = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        this.profile!.photos = this.profile!.photos.filter(\r\n          (a) => a.id !== photo.id\r\n        );\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem deleting photo \");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action updateProfile = async (profile: Partial<IProfile>) => {\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (profile.display !== this.rootStore.userStore.user!.display) {\r\n          this.rootStore.userStore.user!.display = profile.display!;\r\n        }\r\n        this.profile = { ...this.profile!, ...profile };\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem updating profile\");\r\n    }\r\n  };\r\n  @action follow = async (username: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.follow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = true;\r\n        this.profile!.followersCount++;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem following user\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action unfollow = async (username: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.unfollow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = false;\r\n        this.profile!.followersCount--;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem unfollowing user\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action loadFollowings = async (predicate: string) => {\r\n    this.loading = true;\r\n    try {\r\n      const profiles = await agent.Profiles.listFollowings(\r\n        this.profile!.userName,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n          this.followings = profiles;\r\n          this.loading = false;\r\n      })\r\n    } catch (error) {\r\n      toast.error('Problem loading followings');\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import ActivityStore from './activityStore';\nimport UserStore from './userStore';\nimport { createContext } from 'react';\nimport { configure } from 'mobx';\nimport CommonStore from './commonStore';\nimport ModalStore from './modalStore';\nimport ProfileStore from './profileStore';\n\nconfigure({enforceActions: 'always'});\n\nexport class RootStore {\n    activityStore: ActivityStore;\n    userStore: UserStore;\n    commonStore: CommonStore;\n    modalStore: ModalStore;\n    profileStore:ProfileStore;\n\n    constructor() {\n        this.activityStore = new ActivityStore(this);\n        this.userStore = new UserStore(this);\n        this.commonStore = new CommonStore(this);\n        this.modalStore = new ModalStore(this);\n        this.profileStore = new ProfileStore(this);\n    }\n}\n\nexport const RootStoreContext = createContext(new RootStore());","import React, { useContext } from 'react';\r\nimport { Menu, Container, Button, Dropdown, Image } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\nconst NavBar: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user, logout } = rootStore.userStore;\r\n  return (\r\n    <Menu fixed='top' inverted>\r\n      <Container>\r\n        <Menu.Item header as={NavLink} exact to='/'>\r\n          <img src='/assets/logo.png' alt='logo' style={{ marginRight: 10 }} />\r\n          Aktivite Zamanı\r\n        </Menu.Item>\r\n        <Menu.Item name='Activities' as={NavLink} to='/activities' />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to='/createActivity'\r\n            positive\r\n            content='Create Activity'\r\n          />\r\n        </Menu.Item>\r\n        {user && (\r\n          <Menu.Item position='right'>\r\n            <Image avatar spaced='right' src={user.image || '/assets/user.png'} />\r\n            <Dropdown pointing='top left' text={user.display}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={`/profile/${user.username}`}\r\n                  text='My profile'\r\n                  icon='user'\r\n                />\r\n                <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(NavBar);\r\n","import React from \"react\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { IAttendee } from \"../../../app/models/activity\";\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\nconst styles = {\r\n  borderColor:'orange',\r\n  borderWidth:2,\r\n}\r\nexport const ActivityListItemAttendee: React.FC<IProps> = ({ attendees }) => {\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <List.Item key={attendee.userName}>\r\n            <Popup header={attendee.display}\r\n            trigger={<Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles :null}\r\n              />}></Popup>\r\n          \r\n        </List.Item>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport { ActivityListItemAttendee } from \"./ActivityListItemAttendee\";\n\nconst ActivityListItem: React.FC<{ activity: IActivity }> = ({ activity }) => {\n  const host = activity.attendees.filter((x) => x.isHost)[0];\n    \n  return (\n    <Segment.Group>\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image\n              size=\"tiny\"\n              circular\n              src={host.image || \"/assets/user.png\"}\n              style={{ marginBottom: 0 }}\n            />\n            <Item.Content>\n              <Item.Header as=\"a\">{activity.title}</Item.Header>\n              <Item.Description>\n                Hosted by {' '}\n                <Link to={`/profile/${host.userName}`}> {host.display} </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color=\"orange\"\n                    content=\"You are hosting this activity\"\n                  />\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color=\"green\"\n                    content=\"You are going to this activity\"\n                  />\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <Icon name=\"clock\" /> {format(activity.date, \"h:mm a\")}\n        <Icon name=\"marker\" /> {activity.venue}, {activity.city}\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          floated=\"right\"\n          content=\"View\"\n          color=\"blue\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default ActivityListItem;\n","import React, { useContext, Fragment } from 'react';\nimport { Item, Label } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport ActivityListItem from './ActivityListItem';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport {format} from 'date-fns';\n\nconst ActivityList: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { activitiesByDate } = rootStore.activityStore;\n  return (\n    <Fragment>\n      {activitiesByDate.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Label size='large' color='blue'>\n            {format(group, 'eeee do MMMM')}\n          </Label>\n          <Item.Group divided>\n            {activities.map(activity => (\n              <ActivityListItem key={activity.id} activity={activity} />\n            ))}\n          </Item.Group>\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityList);\n","import React, { Fragment, useContext } from 'react';\r\nimport { Menu, Header } from 'semantic-ui-react';\r\nimport { Calendar } from 'react-widgets';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst ActivityFilters = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { predicate, setPredicate } = rootStore.activityStore;\r\n  return (\r\n    <Fragment>\r\n      <Menu vertical size={'large'} style={{ width: '100%', marginTop: 50 }}>\r\n        <Header icon={'filter'} attached color={'teal'} content={'Filters'} />\r\n        <Menu.Item\r\n          active={predicate.size === 0}\r\n          onClick={() => setPredicate('all', 'true')}\r\n          color={'blue'}\r\n          name={'all'}\r\n          content={'All Activities'}\r\n        />\r\n        <Menu.Item\r\n          active={predicate.has('isGoing')}\r\n          onClick={() => setPredicate('isGoing', 'true')}\r\n          color={'blue'}\r\n          name={'username'}\r\n          content={\"I'm Going\"}\r\n        />\r\n        <Menu.Item\r\n          active={predicate.has('isHost')}\r\n          onClick={() => setPredicate('isHost', 'true')}\r\n          color={'blue'}\r\n          name={'host'}\r\n          content={\"I'm hosting\"}\r\n        />\r\n      </Menu>\r\n      <Header\r\n        icon={'calendar'}\r\n        attached\r\n        color={'teal'}\r\n        content={'Select Date'}\r\n      />\r\n      <Calendar\r\n        onChange={date => setPredicate('startDate', date!)}\r\n        value={predicate.get('startDate') || new Date()}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityFilters);","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\nconst ActivityListItemPlaceholder = () => {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 50 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color='blue' floated='right' content='View' />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ActivityListItemPlaceholder;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport { observer } from \"mobx-react-lite\";\r\n import { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceHolder\";\r\n\r\nconst ActivityDashboard: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadActivities,\r\n    loadingInitial,\r\n    setPage,\r\n    page,\r\n    totalPages,\r\n  } = rootStore.activityStore;\r\n\r\n  const [loadingNext, setloadingNext] = useState(false);\r\n\r\n  const handleGetNext = () => {\r\n    setloadingNext(true);\r\n    setPage(page + 1);\r\n    loadActivities().then(() => setloadingNext(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadActivities();\r\n  }, [loadActivities]);\r\n\r\n \r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        {loadingInitial && page === 0 ? (\r\n          <ActivityListItemPlaceholder />\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={!loadingNext && page + 1 < totalPages}\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n\r\n        {/* <Button\r\n          floated=\"right\"\r\n          content=\"More ..\"\r\n          positive\r\n          disabled={totalPages === page + 1}\r\n          onClick={handleGetNext}\r\n          loading={loadingNext}\r\n        /> */}\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n","import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLInputElement>,\n    FormFieldProps {}\n\nconst TextInput: React.FC<IProps> = ({\n  input,\n  width,\n  type,\n  placeholder,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error} type={type} width={width}>\n      <input {...input} placeholder={placeholder} />\n      {touched && error && (\n        <Label basic color='red'>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport { AxiosResponse } from 'axios';\nimport { Message } from 'semantic-ui-react';\n\ninterface IProps {\n  error: AxiosResponse;\n  text?: string;\n}\n\nconst ErrorMessage: React.FC<IProps> = ({ error, text }) => {\n  return (\n    <Message error>\n      <Message.Header>{error.statusText}</Message.Header>\n      {error.data && Object.keys(error.data.errors).length > 0 && (\n        <Message.List>\n          {Object.values(error.data.errors).flat().map((err, i) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n      {text && <Message.Content content={text} />}\n    </Message>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { useContext } from 'react';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { Form, Button, Header } from 'semantic-ui-react';\nimport TextInput from '../../app/common/form/TextInput';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport { IUserFormValues } from '../../app/models/user';\nimport { FORM_ERROR } from 'final-form';\nimport { combineValidators, isRequired } from 'revalidate';\nimport ErrorMessage from '../../app/common/form/ErrorMessage';\n\nconst validate = combineValidators({\n  email: isRequired('Email'),\n  password: isRequired('Password')\n});\n\nconst LoginForm = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { login } = rootStore.userStore;\n  return (\n    <FinalForm\n      onSubmit={(values: IUserFormValues) =>\n        login(values).catch(error => ({\n          [FORM_ERROR]: error\n        }))\n      }\n      validate={validate}\n      render={({\n        handleSubmit,\n        submitting,\n        submitError,\n        invalid,\n        pristine,\n        dirtySinceLastSubmit\n      }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Header\n            as='h2'\n            content='Login to Reactivities'\n            color='teal'\n            textAlign='center'\n          />\n          <Field name='email' component={TextInput} placeholder='Email' />\n          <Field\n            name='password'\n            component={TextInput}\n            placeholder='Password'\n            type='password'\n          />\n          {submitError && !dirtySinceLastSubmit && (\n            <ErrorMessage\n              error={submitError}\n              text='Invalid email or password'\n            />\n          )}\n          <Button\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n            loading={submitting}\n            color='teal'\n            content='Login'\n            fluid\n          />\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default LoginForm;\n","import React, { useContext } from 'react';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { Form, Button, Header } from 'semantic-ui-react';\nimport TextInput from '../../app/common/form/TextInput';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport { IUserFormValues } from '../../app/models/user';\nimport { FORM_ERROR } from 'final-form';\nimport { combineValidators, isRequired } from 'revalidate';\nimport ErrorMessage from '../../app/common/form/ErrorMessage';\n\nconst validate = combineValidators({\n  userName: isRequired('Username'),\n  display: isRequired('Display'),\n  email: isRequired('Email'),\n  password: isRequired('Password')\n});\n\nconst RegisterForm = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { register } = rootStore.userStore;\n  return (\n    <FinalForm\n      onSubmit={(values: IUserFormValues) =>\n        register(values).catch(error => ({\n          [FORM_ERROR]: error\n        }))\n      }\n      validate={validate}\n      render={({\n        handleSubmit,\n        submitting,\n        submitError,\n        invalid,\n        pristine,\n        dirtySinceLastSubmit\n      }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Header\n            as='h2'\n            content='Sign up to Reactivities'\n            color='teal'\n            textAlign='center'\n          />\n          <Field name='userName' component={TextInput} placeholder='Username' />\n          <Field\n            name='display'\n            component={TextInput}\n            placeholder='Display Name'\n          />\n          <Field name='email' component={TextInput} placeholder='Email' />\n          <Field\n            name='password'\n            component={TextInput}\n            placeholder='Password'\n            type='password'\n          />\n          {submitError && !dirtySinceLastSubmit && (\n            <ErrorMessage\n              error={submitError}\n            />\n          )}\n          <Button\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n            loading={submitting}\n            color='teal'\n            content='Register'\n            fluid\n          />\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default RegisterForm;\n","import React, { useContext, Fragment } from 'react';\r\nimport { Container, Segment, Header, Button, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport LoginForm from '../user/LoginForm';\r\nimport RegisterForm from '../user/RegisterForm';\r\n\r\nconst HomePage = () => {\r\n  const token=window.localStorage.getItem('jwt');\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user, isLoggedIn } = rootStore.userStore;\r\n  const {openModal} = rootStore.modalStore;\r\n  return (\r\n    <Segment inverted textAlign='center' vertical className='masthead'>\r\n      <Container text>\r\n        <Header as='h1' inverted>\r\n          <Image\r\n            size='massive'\r\n            src='/assets/logo.png'\r\n            alt='logo'\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Aktivite Zamanı\r\n        </Header>\r\n        {isLoggedIn && user && token ? (\r\n          <Fragment>\r\n            <Header as='h2' inverted content={`Welcome back ${user.display}`} />\r\n            <Button as={Link} to='/activities' size='huge' inverted>\r\n              Go to activities!\r\n            </Button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n          <Header as='h2' inverted content={`Welcome to Reactivitities`} />\r\n          <Button onClick={() => openModal(<LoginForm />)} size='huge' inverted>\r\n            Login\r\n          </Button>\r\n          <Button onClick={() => openModal(<RegisterForm />)} size='huge' inverted>\r\n            Register\r\n          </Button>\r\n        </Fragment>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export interface IActivitiesEnvelope {\r\n\r\n    activities: IActivity[];\r\n    activityCount: number;\r\n}\r\n\r\nexport interface IActivity {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    category: string;\r\n    date: Date;\r\n    city: string;\r\n    venue: string;\r\n    isGoing:boolean;\r\n    isHost:boolean;\r\n    attendees:IAttendee[];\r\n    comments: IComment[];\r\n}\r\n\r\nexport interface IActivityFormValues extends Partial<IActivity> {\r\n    time?: Date;\r\n}\r\nexport interface IComment  {\r\n    id?: string ;\r\n    createAt:Date;\r\n    username:string;\r\n    body:string;\r\n    image:string;\r\n    display:string;\r\n}\r\n\r\nexport class ActivityFormValues implements IActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date?: Date = undefined;\r\n    time?: Date = undefined;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(init?: IActivityFormValues) {\r\n        if (init && init.date) {\r\n            init.time = init.date;\r\n        }  \r\n        Object.assign(this, init);\r\n    }\r\n}\r\nexport interface IAttendee{\r\n    userName:string;\r\n    display:string;\r\n    image:string;\r\n    isHost:boolean;\r\n    following?:boolean;\r\n}","import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLTextAreaElement>,\n    FormFieldProps {}\n\nconst TextAreaInput: React.FC<IProps> = ({\n  input,\n  width,\n  rows,\n  placeholder,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error} width={width}>\n      <textarea rows={rows} {...input} placeholder={placeholder} />\n      {touched && error && (\n        <Label basic color='red'>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextAreaInput;\n","import React from 'react'\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label, Select } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLSelectElement>,\n    FormFieldProps {}\n\nconst SelectInput: React.FC<IProps> = ({\n    input,\n    width,\n    options,\n    placeholder,\n    meta: { touched, error }\n  }) => {\n    return (\n        <Form.Field error={touched && !!error} width={width}>\n        <Select \n            value={input.value}\n            onChange={(e, data) => input.onChange(data.value)}\n            placeholder={placeholder}\n            options={options}\n        />\n        {touched && error && (\n          <Label basic color='red'>\n            {error}\n          </Label>\n        )}\n      </Form.Field>\n    )\n}\n\nexport default SelectInput\n","import React from 'react'\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\nimport {DateTimePicker} from 'react-widgets';\n\ninterface IProps\n  extends FieldRenderProps<Date, HTMLInputElement>,\n    FormFieldProps {}\n\nconst DateInput: React.FC<IProps> = ({\n    input,\n    width,\n    placeholder,\n    date = false,\n    time = false,\n    meta: { touched, error },\n    ...rest\n  }) => {\n    return (\n        <Form.Field error={touched && !!error} width={width}>\n        <DateTimePicker \n            placeholder={placeholder}\n            value={input.value || null}\n            onChange={input.onChange}\n            onBlur={input.onBlur}\n            onKeyDown={(e) => e.preventDefault()}\n            date={date}\n            time={time}\n            {...rest}\n        />\n        {touched && error && (\n          <Label basic color='red'>\n            {error}\n          </Label>\n        )}\n      </Form.Field>\n    )\n}\n\nexport default DateInput\n","export const category = [\n  { key: 'drinks', text: 'Drinks', value: 'drinks' },\n  { key: 'culture', text: 'Culture', value: 'culture' },\n  { key: 'film', text: 'Film', value: 'film' },\n  { key: 'food', text: 'Food', value: 'food' },\n  { key: 'music', text: 'Music', value: 'music' },\n  { key: 'travel', text: 'Travel', value: 'travel' }\n];","import React, { useState, useContext, useEffect } from 'react';\nimport { Segment, Form, Button, Grid } from 'semantic-ui-react';\nimport { ActivityFormValues } from '../../../app/models/activity';\nimport { v4 as uuid } from 'uuid';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from 'react-router';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport TextInput from '../../../app/common/form/TextInput';\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\nimport SelectInput from '../../../app/common/form/SelectInput';\nimport DateInput from '../../../app/common/form/DateInput';\nimport { category } from '../../../app/common/options/categoryOptions';\nimport { combineDateAndTime } from '../../../app/common/util/util';\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan\n} from 'revalidate';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\n\nconst validate = combineValidators({\n  title: isRequired({ message: 'The event title is required' }),\n  category: isRequired('Category'),\n  description: composeValidators(\n    isRequired('Description'),\n    hasLengthGreaterThan(4)({\n      message: 'Description needs to be at least 5 characters'\n    })\n  )(),\n  city: isRequired('City'),\n  venue: isRequired('Venue'),\n  date: isRequired('Date'),\n  time: isRequired('Time')\n});\n\ninterface DetailParams {\n  id: string;\n}\n\nconst ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({\n  match,\n  history\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    loadActivity\n  } = rootStore.activityStore;\n\n  const [activity, setActivity] = useState(new ActivityFormValues());\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (match.params.id) {\n      setLoading(true);\n      loadActivity(match.params.id)\n        .then(activity => {\n          setActivity(new ActivityFormValues(activity));\n        })\n        .finally(() => setLoading(false));\n    }\n  }, [loadActivity, match.params.id]);\n\n  const handleFinalFormSubmit = (values: any) => {\n    const dateAndTime = combineDateAndTime(values.date, values.time);\n    const { date, time, ...activity } = values;\n    activity.date = dateAndTime;\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid()\n      };\n      createActivity(newActivity);\n    } else {\n      editActivity(activity);\n    }\n  };\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <Segment clearing>\n          <FinalForm\n            validate={validate}\n            initialValues={activity}\n            onSubmit={handleFinalFormSubmit}\n            render={({ handleSubmit, invalid, pristine }) => (\n              <Form onSubmit={handleSubmit} loading={loading}>\n                <Field\n                  name='title'\n                  placeholder='Title'\n                  value={activity.title}\n                  component={TextInput}\n                />\n                <Field\n                  name='description'\n                  placeholder='Description'\n                  rows={3}\n                  value={activity.description}\n                  component={TextAreaInput}\n                />\n                <Field\n                  component={SelectInput}\n                  options={category}\n                  name='category'\n                  placeholder='Category'\n                  value={activity.category}\n                />\n                <Form.Group widths='equal'>\n                  <Field\n                    component={DateInput}\n                    name='date'\n                    date={true}\n                    placeholder='Date'\n                    value={activity.date}\n                  />\n                  <Field\n                    component={DateInput}\n                    name='time'\n                    time={true}\n                    placeholder='Time'\n                    value={activity.time}\n                  />\n                </Form.Group>\n\n                <Field\n                  component={TextInput}\n                  name='city'\n                  placeholder='City'\n                  value={activity.city}\n                />\n                <Field\n                  component={TextInput}\n                  name='venue'\n                  placeholder='Venue'\n                  value={activity.venue}\n                />\n                <Button\n                  loading={submitting}\n                  disabled={loading || invalid || pristine}\n                  floated='right'\n                  positive\n                  type='submit'\n                  content='Submit'\n                />\n                <Button\n                  onClick={\n                    activity.id\n                      ? () => history.push(`/activities/${activity.id}`)\n                      : () => history.push('/activities')\n                  }\n                  disabled={loading}\n                  floated='right'\n                  type='button'\n                  content='Cancel'\n                />\n              </Form>\n            )}\n          />\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityForm);\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nconst LoadingComponent: React.FC<{ inverted?: boolean; content?: string }> = ({\n  inverted = true,\n  content\n}) => {\n  return (\n    <Dimmer active inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n};\n\nexport default LoadingComponent;\n","import React, { useContext } from \"react\";\nimport { Segment, Item, Header, Button, Image } from \"semantic-ui-react\";\nimport { IActivity } from \"../../../app/models/activity\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity }> = ({\n  activity,\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const { attendActivity, cancelAttendance, loading } = rootStore.activityStore;\n  const host = activity.attendees.filter((x) => x.isHost)[0];\n\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date, \"eeee do MMMM\")}</p>\n                <p>\n                  Hosted by {' '} \n                  <Link to={`/profile/${host.userName}`}>\n                  <strong>{host.display}</strong>\n                  </Link> \n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <Button\n            as={Link}\n            to={`/manage/${activity.id}`}\n            color=\"orange\"\n            floated=\"right\"\n          >\n            Manage Event\n          </Button>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={cancelAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button loading={loading} onClick={attendActivity} color=\"teal\">\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityDetailedHeader);\n","import React from 'react';\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\nimport { IActivity } from '../../../app/models/activity';\nimport {format} from 'date-fns';\n\nconst ActivityDetailedInfo: React.FC<{activity: IActivity}> = ({activity}) => {\n  return (\n    <Segment.Group>\n      <Segment attached='top'>\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size='large' color='teal' name='info' />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='calendar' size='large' color='teal' />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date, 'eeee do MMMM')} at {format(activity.date!, 'h:mm a')}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='marker' size='large' color='teal' />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default ActivityDetailedInfo;\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { Segment, Header, Form, Button, Comment } from \"semantic-ui-react\";\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\nimport { Link } from \"react-router-dom\";\n\nimport {Form as FinalForm,Field} from 'react-final-form';\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\nimport { observer } from \"mobx-react-lite\";\nimport { formatDistance } from \"date-fns\";\n\n\nconst ActivityDetailedChat = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    createHubConnection,\n    stopHubConnection,\n    addComment,\n    activity,\n  } = rootStore.activityStore;\n\n  useEffect(() => {\n    createHubConnection();\n    return () => {\n      stopHubConnection();\n    };\n  }, [createHubConnection, stopHubConnection]);\n\n  return (\n    <Fragment>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached>\n        <Comment.Group>\n          {activity &&\n            activity.comments &&\n            activity.comments.map((comment) => (\n              <Comment key = {comment.id}>\n                <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n                <Comment.Content>\n                  <Comment.Author as={Link} to={`/profile/${comment.username}`}>{comment.display} </Comment.Author>\n                  <Comment.Metadata>\n            <div>{formatDistance(comment.createAt,new Date()) }</div>\n                  </Comment.Metadata>\n                  <Comment.Text>{comment.body}</Comment.Text>\n                  \n                </Comment.Content>\n              </Comment>\n            ))}\n        <FinalForm\n        onSubmit={addComment}\n        render={({handleSubmit,submitting,form}) => (\n\n          <Form onSubmit={()=> handleSubmit()!.then(() => form.reset())}>\n          <Field\n          name='body'\n          component={TextAreaInput}\n          rows={2}\n          placeholder='Add your Comment'\n          />\n          <Button\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n            primary\n            loading={submitting}\n          />\n        </Form>\n        )}\n        />\n      \n        </Comment.Group>\n      </Segment>\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityDetailedChat);\n","import React, { Fragment } from \"react\";\nimport { Segment, List, Item, Label, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { IAttendee } from \"../../../app/models/activity\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface IProps {\n  attendees: IAttendee[];\n}\n\nconst ActivityDetailedSidebar: React.FC<IProps> = ({ attendees }) => {\n   return (\n    <Fragment>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendees) => (\n            <Item key={attendees.userName} style={{ position: \"relative\" }}>\n              {attendees.isHost && (\n                <Label\n                  style={{ position: \"absolute\" }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n              )}\n              <Image size=\"tiny\" src={attendees.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profile/${attendees.userName}`}>\n                    {attendees.display}\n                  </Link>\n                </Item.Header>\n                {attendees.following &&\n                <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra> }\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityDetailedSidebar);\n","import React, { useContext, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from 'react-router';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\n\ninterface DetailParams {\n  id: string;\n}\n\nconst ActivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({\n  match,\n  history\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const { activity, loadActivity, loadingInitial } = rootStore.activityStore;\n\n  useEffect(() => {\n    loadActivity(match.params.id);\n  }, [loadActivity, match.params.id, history]);\n\n  if (loadingInitial) return <LoadingComponent content='Loading activity...' />;\n\n  if (!activity) return <h2>Activity not found</h2>;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar attendees={activity.attendees} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDetails);\n","import React from 'react';\nimport { Segment, Button, Header, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => {\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name='search' />\n                Oops - we've looked everywhere but couldn't find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/activities' primary>\n                    Return to Activities page\n                </Button>\n            </Segment.Inline>\n        </Segment>\n    );\n};\n\nexport default NotFound;","import React, { useContext } from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../stores/rootStore';\nimport { observer } from 'mobx-react-lite';\n\nconst ModalContainer = () => {\n    const rootStore = useContext(RootStoreContext);\n    const {modal: {open, body}, closeModal} = rootStore.modalStore;\n  return (\n    <Modal open={open} onClose={closeModal} size='mini'>\n      <Modal.Content>{body}</Modal.Content>\n    </Modal>\n  );\n};\n\nexport default observer(ModalContainer);\n","import React from 'react';\r\nimport {\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Statistic,\r\n  Divider,\r\n  Reveal\r\n} from 'semantic-ui-react';\r\nimport { IProfile } from '../../app/models/profile';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n  isCurrentUser: boolean;\r\n  loading: boolean;\r\n  follow: (username: string) => void;\r\n  unfollow: (username: string) => void;\r\n}\r\n\r\nconst ProfileHeader: React.FC<IProps> = ({\r\n  profile,\r\n  isCurrentUser,\r\n  loading,\r\n  follow,\r\n  unfollow\r\n}) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size='small'\r\n                src={profile.image || '/assets/user.png'}\r\n              />\r\n              <Item.Content verticalAlign='middle'>\r\n                <Header as='h1'>{profile.display}</Header>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label='Followers' value={profile.followersCount} />\r\n            <Statistic label='Following' value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          {!isCurrentUser && (\r\n            <Reveal animated='move'>\r\n              <Reveal.Content visible style={{ width: '100%' }}>\r\n                <Button\r\n                  fluid\r\n                  color='teal'\r\n                  content={profile.following ? 'Following' : 'Not following'}\r\n                />\r\n              </Reveal.Content>\r\n              <Reveal.Content hidden>\r\n                <Button\r\n                  loading={loading}\r\n                  fluid\r\n                  basic\r\n                  color={profile.following ? 'red' : 'green'}\r\n                  content={profile.following ? 'Unfollow' : 'Follow'}\r\n                  onClick={\r\n                    profile.following\r\n                      ? () => unfollow(profile.userName)\r\n                      : () => follow(profile.userName)\r\n                  }\r\n                />\r\n              </Reveal.Content>\r\n            </Reveal>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileHeader);","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Icon, Header } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  setFiles: (files: object[]) => void;\r\n}\r\n\r\nconst dropzoneStyles = {\r\n  border: \"dashed 3px\",\r\n  borderColor: \"#eee\",\r\n  borderRadius: \"5px\",\r\n  paddingTop: \"30px\",\r\n  textAlign: \"center\" as \"center\",\r\n  height: \"200px\",\r\n};\r\n\r\nconst dropzoneActive = {\r\n  borderColor: \"green\",\r\n};\r\nconst PhotoWidgetDropzone: React.FC<IProps> = ({ setFiles }) => {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n     setFiles(\r\n      acceptedFiles.map((file: object) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n        })\r\n      )\r\n    );\r\n  }, [setFiles]);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={\r\n        isDragActive ? { ...dropzoneStyles, ...dropzoneActive } : dropzoneStyles\r\n      }\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge'/>\r\n      <Header content='Drop Image HERE'/>\r\n    </div>\r\n  );\r\n};\r\nexport default PhotoWidgetDropzone;\r\n","import React, { useRef } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\n\r\ninterface IProps {\r\n\r\n  setImage:(file: Blob) => void;\r\n  imagePreview:string;\r\n}\r\n const PhotoWidgetCropper:React.FC<IProps> = ({setImage,imagePreview}) => {\r\n   const cropper=useRef<Cropper>(null);\r\n   const cropImage =() => {\r\n     if (cropper.current && typeof cropper.current.getCroppedCanvas() === 'undefined') {\r\n       return;\r\n     }\r\n     cropper && cropper.current && cropper.current.getCroppedCanvas().toBlob((blob: any) => \r\n     {\r\n       setImage(blob);\r\n     },'image/jpeg');\r\n   }\r\n  return (\r\n    <Cropper\r\n      ref={cropper}\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      // Cropper.js options\r\n      aspectRatio={1 / 1}\r\n      preview='.img-preview'\r\n      guides={false}\r\n      viewMode={1}\r\n      dragMode='move'\r\n      scalable={true}\r\n      cropBoxMovable={true}\r\n      cropBoxResizable={true}\r\n      crop={cropImage}\r\n     />\r\n  );\r\n};\r\nexport default PhotoWidgetCropper;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Header, Grid, Button } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\n\r\ninterface IProps {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\nexport const PhotoUploadWidget: React.FC<IProps> = ({\r\n  loading,\r\n  uploadPhoto,\r\n}) => {\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [image, setImage] = useState<Blob | null>(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid>\r\n        <Grid.Column width={4}>\r\n          <Header color=\"teal\" sub content=\"Step 1 - Add Photo\" />\r\n          <PhotoWidgetDropzone setFiles={setFiles} />\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n          {files.length > 0 && (\r\n            <PhotoWidgetCropper\r\n              setImage={setImage}\r\n              imagePreview={files[0].preview}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n          {files.length > 0 && (\r\n            <Fragment>\r\n              <div\r\n                className=\"img-preview\"\r\n                style={{ minHeight: \"200px\", overflow: \"hidden\" }}\r\n              ></div>\r\n              <Button.Group widths={2}>\r\n                <Button\r\n                  positive\r\n                  icon=\"check\"\r\n                  loading={loading}\r\n                  onClick={() => uploadPhoto(image!)}\r\n                />\r\n                 <Button\r\n                   \r\n                  icon=\"close\"\r\n                  disabled={loading}\r\n                  onClick={() => setFiles([])}\r\n                />\r\n              </Button.Group>\r\n            </Fragment>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(PhotoUploadWidget);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Tab, Header, Card, Image, Button, Grid } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport PhotoUploadWidget from \"../../app/common/photoUpload/PhotoUploadWidget\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ProfilePhotos = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    profile,\r\n    isCurrentUser,\r\n    uploadPhoto,\r\n    uploadingPhoto,\r\n    setMainPhoto,\r\n    loading,\r\n    deletePhoto,\r\n  } = rootStore.profileStore;\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(true);\r\n  const [target, setTarget] = useState<undefined | string>(undefined);\r\n  const [deletetarget, setDeleteTarget] = useState<undefined | string>(\r\n    undefined\r\n  );\r\n\r\n  const handleUploadImage = (photo: Blob) => {\r\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\r\n  };\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16} style={{ paddingBotttom: 0 }}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handleUploadImage}\r\n              loading={uploadingPhoto}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile &&\r\n                profile.photos.map((photo) => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url} />\r\n                    {isCurrentUser && (\r\n                      <Button.Group fluid widths={2}>\r\n                        <Button\r\n                          name={photo.id}\r\n                          onClick={(e) => {\r\n                            setMainPhoto(photo);\r\n\r\n                            setTarget(e.currentTarget.name);\r\n                          }}\r\n                          disabled={photo.isMain}\r\n                          loading={loading && target === photo.id}\r\n                          basic\r\n                          positive\r\n                          content=\"Main\"\r\n                        />\r\n                        <Button\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          onClick={(e) => {\r\n                            deletePhoto(photo);\r\n                            setDeleteTarget(e.currentTarget.name)\r\n                          }}\r\n                          loading={loading && deletetarget === photo.id}\r\n                          basic\r\n                          negative\r\n                          icon=\"trash\"\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\nexport default observer(ProfilePhotos);\r\n","import React from 'react';\r\nimport { IProfile } from '../../app/models/profile';\r\nimport { Form as FinalForm, Field } from 'react-final-form';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { combineValidators, isRequired } from 'revalidate';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport TextInput from '../../app/common/form/TextInput';\r\nimport TextAreaInput from '../../app/common/form/TextAreaInput';\r\n\r\nconst validate = combineValidators({\r\n  display: isRequired('display')\r\n});\r\n\r\ninterface IProps {\r\n  updateProfile: (profile: Partial<IProfile>) => void;\r\n  profile: IProfile;\r\n}\r\n\r\nconst ProfileEditForm: React.FC<IProps> = ({ updateProfile, profile }) => {\r\n  return (\r\n    <FinalForm\r\n      onSubmit={updateProfile}\r\n      validate={validate}\r\n      initialValues={profile!}\r\n      render={({ handleSubmit, invalid, pristine, submitting }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Field\r\n            name='display'\r\n            component={TextInput}\r\n            placeholder='Display Name'\r\n            value={profile!.display}\r\n          />\r\n          <Field\r\n            name='bio'\r\n            component={TextAreaInput}\r\n            rows={3}\r\n            placeholder='Bio'\r\n            value={profile!.bio}\r\n          />\r\n          <Button \r\n            loading={submitting}\r\n            floated='right'\r\n            disabled={invalid || pristine}\r\n            positive\r\n            content='Update profile'\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEditForm);","import React, { useContext, useState } from 'react';\r\nimport { Tab, Grid, Header, Button } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n import { observer } from 'mobx-react-lite';\r\nimport ProfileEditForm from './ProfileEditForm';\r\n\r\nconst ProfileDescription = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { updateProfile, profile, isCurrentUser } = rootStore.profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated='left'\r\n            icon='user'\r\n            content={`About ${profile!.display}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated='right'\r\n              basic\r\n              content={editMode ? 'Cancel' : 'Edit Profile'}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {editMode ? (\r\n            <ProfileEditForm updateProfile={updateProfile} profile={profile!} />\r\n          ) : (\r\n            <span>{profile!.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileDescription);","import React from 'react';\r\nimport { Card, Image, Icon} from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IProfile } from '../../app/models/profile';\r\n\r\n\r\ninterface IProps {\r\n    profile: IProfile\r\n}\r\nconst ProfileCard: React.FC<IProps> = ({profile}) => {\r\n  return (\r\n    <Card as={Link} to={`/profile/${profile.userName}`}>\r\n      <Image src={profile.image || '/assets/user.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.display}</Card.Header>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div>\r\n          <Icon name='user' />\r\n         {profile.followersCount} Followers\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React, { useContext } from 'react';\r\nimport { Tab, Grid, Header, Card } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nconst ProfileFollowings = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { profile,followings,loading } = rootStore.profileStore;\r\n\r\n \r\n \r\n\r\n  return (\r\n    <Tab.Pane loading={loading}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated='left'\r\n            icon='user'\r\n            content={\r\n              true\r\n                ? `People following ${profile!.display}`\r\n                : `People ${profile!.display} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={5}>\r\n              {followings.map((profile) => (\r\n            <ProfileCard key={profile.userName} profile={profile} />\r\n\r\n              ))}\r\n            \r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default ProfileFollowings;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IUserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\nconst panes = [\r\n  { menuItem: 'Future Events', pane: { key: 'futureEvents' } },\r\n  { menuItem: 'Past Events', pane: { key: 'pastEvents' } },\r\n  { menuItem: 'Hosting', pane: { key: 'hosted' } }\r\n];\r\n\r\nconst ProfileEvents = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities\r\n  } = rootStore.profileStore!;\r\n\r\n  useEffect(() => {\r\n     loadUserActivities(profile!.userName);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    data: TabProps\r\n  ) => {\r\n    let predicate;\r\n    \r\n    switch (data.activeIndex) {\r\n      case 1:\r\n        predicate = 'past';\r\n        break;\r\n      case 2:\r\n        predicate = 'hosting';\r\n        break;\r\n      default:\r\n        predicate = 'future';\r\n        break;\r\n    }\r\n     loadUserActivities(profile!.userName, predicate);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated='left' icon='calendar' content={'Activities'} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: IUserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: 'cover' }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign='center'>\r\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEvents);\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\nimport ProfileDescription from \"./ProfileDescription\";\r\nimport ProfileFollowings from \"./ProfileFollowing\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\n\r\nconst panes = [\r\n  { menuItem: \"About\", render: () => <ProfileDescription /> },\r\n  { menuItem: \"Photos\", render: () => <ProfilePhotos /> },\r\n  {\r\n    menuItem: \"Activities\",\r\n    render: () => <ProfileActivities />,\r\n  },\r\n  {\r\n    menuItem: \"Followers\",\r\n    render: () => <ProfileFollowings />,\r\n  },\r\n  {\r\n    menuItem: \"Following\",\r\n    render: () => <ProfileFollowings />,\r\n  },\r\n];\r\n\r\ninterface IProps {\r\n  setActiveTab: (activeIndex: any) => void;\r\n}\r\n\r\nexport const ProfileContent: React.FC<IProps> = ({ setActiveTab }) => {\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport {ProfileContent} from './ProfileContent';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface RouteParams {\r\n    userName: string;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams> {}\r\n\r\nconst ProfilePage: React.FC<IProps> = ({ match }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadingProfile,\r\n    profile,\r\n    loadProfile,\r\n    follow,\r\n    unfollow,\r\n    isCurrentUser,\r\n    loading,\r\n    setActiveTab\r\n  } = rootStore.profileStore;\r\n \r\n  useEffect(() => {\r\n    loadProfile(match.params.userName);\r\n  }, [loadProfile, match]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content='Loading profile...' />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        <ProfileHeader\r\n          profile={profile!}\r\n          isCurrentUser={isCurrentUser}\r\n          loading={loading}\r\n          follow={follow}\r\n          unfollow={unfollow}\r\n        />\r\n        <ProfileContent setActiveTab={setActiveTab}  />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);","import React, { useContext } from 'react'\r\nimport { RouteProps, RouteComponentProps, Route, Redirect } from 'react-router-dom'\r\nimport { RootStoreContext } from '../stores/rootStore'\r\n\r\ninterface IProps extends RouteProps\r\n{\r\n    component:React.ComponentType<RouteComponentProps<any>>\r\n}\r\n\r\nexport const PrivateRoute: React.FC<IProps> = ({component: Component, ...rest}) => {\r\n    const rootStore =useContext(RootStoreContext);\r\n    const {isLoggedIn} =rootStore.userStore;\r\n    return (\r\n       <Route \r\n       {...rest}\r\n       render ={(props) => isLoggedIn ? <Component {...props}/> :<Redirect to ={'/'}/>}\r\n       />\r\n    )\r\n}\r\n","import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport NavBar from '../../features/nav/NavBar';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport { observer } from 'mobx-react-lite';\r\nimport {\r\n  Route,\r\n  withRouter,\r\n  RouteComponentProps,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport ActivityForm from '../../features/activities/form/ActivityForm';\r\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\r\nimport NotFound from './NotFound';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport ModalContainer from '../common/modals/ModalContainer';\r\nimport ProfilePage from '../../features/profiles/ProfilePage';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n \r\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {setAppLoaded, token, appLoaded} = rootStore.commonStore;\r\n  const {getUser} = rootStore.userStore;\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getUser().finally(() => setAppLoaded())\r\n    } else {\r\n      setAppLoaded();\r\n    }\r\n  }, [getUser, setAppLoaded, token])\r\n\r\n  if (!appLoaded)  return <LoadingComponent content='Loading app...' />\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModalContainer />\r\n      <ToastContainer position='bottom-right' />\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route\r\n        path={'/(.+)'}\r\n        render={() => (\r\n          <Fragment>\r\n            <NavBar />\r\n            <Container style={{ marginTop: '7em' }}>\r\n              <Switch>\r\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\r\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={['/createActivity', '/manage/:id']}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute path='/profile/:userName' component={ProfilePage} />\r\n                \r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </Fragment>\r\n        )}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(observer(App));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nconst ScrollToTop = ({ children, location: { pathname } }: any) => {\n    useEffect(() => {\n      window.scrollTo(0, 0);\n    }, [pathname]);\n  \n    return children || null;\n  };\n  \n  export default withRouter(ScrollToTop);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from 'react-router-dom';\r\nimport {createBrowserHistory} from 'history';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './app/layout/styles.css';\r\nimport App from './app/layout/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ScrollToTop from './app/layout/ScrollToTop';\r\nimport dateFnsLocalizer from 'react-widgets-date-fns';\r\n\r\ndateFnsLocalizer();\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <ScrollToTop>\r\n      <App />\r\n    </ScrollToTop>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}